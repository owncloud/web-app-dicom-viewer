{"version":3,"names":["BasePlugin","nanoid","EventManager","ProgressTimeout","RateLimitedQueue","internalRateLimitedQueue","NetworkError","isNetworkError","filterNonFailedFiles","filterFilesToEmitUploadStarted","packageJson","locale","buildResponseError","xhr","err","error","Error","Object","assign","data","request","setTypeInBlob","file","dataWithUpdatedType","slice","size","meta","type","_uploadLocalFile","_classPrivateFieldLooseKey","_uploadBundle","_getCompanionClientArgs","_uploadFiles","_handleUpload","XHRUpload","constructor","uppy","opts","defineProperty","value","_uploadFiles2","_getCompanionClientArgs2","_uploadBundle2","_uploadLocalFile2","writable","fileIDs","length","log","limit","files","getFilesByIds","filesFiltered","filesToEmit","emit","bundle","isSomeFileRemote","some","isRemote","headers","TypeError","_classPrivateFieldLooseBase","id","title","defaultLocale","defaultOptions","formData","fieldName","method","allowedMetaFields","responseUrlFieldName","timeout","withCredentials","responseType","getResponseData","responseText","parsedResponse","JSON","parse","getResponseError","_","response","validateStatus","status","i18nInit","requests","undefined","uploaderEvents","create","getOptions","overrides","getState","xhrUpload","addMetadata","Array","isArray","keys","forEach","item","subItem","append","createFormDataUpload","formPost","FormData","name","createBundledUpload","options","install","capabilities","setState","individualCancellation","addUploader","uninstall","removeUploader","current","total","Promise","resolve","reject","XMLHttpRequest","eventManager","queuedRequest","timer","i18n","seconds","Math","ceil","upload","addEventListener","ev","loaded","progress","lengthComputable","uploader","bytesUploaded","bytesTotal","done","remove","body","uploadURL","uploadResp","open","toUpperCase","endpoint","run","currentOpts","header","setRequestHeader","send","abort","onFileRemove","onCancelAll","_ref","reason","optsFromState","emitError","target","on","_temp","remote","protocol","fieldname","metadata","fromEntries","map","httpMethod","useFormData","allSettled","i","parseInt","getQueue","controller","AbortController","removedHandler","removedFile","uploadPromise","requestClient","uploadRemoteFile","signal","wrapSyncFunction","off","priority","VERSION","version"],"sources":["index.js"],"sourcesContent":["import BasePlugin from '@uppy/core/lib/BasePlugin.js'\nimport { nanoid } from 'nanoid/non-secure'\nimport EventManager from '@uppy/utils/lib/EventManager'\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout'\nimport { RateLimitedQueue, internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue'\nimport NetworkError from '@uppy/utils/lib/NetworkError'\nimport isNetworkError from '@uppy/utils/lib/isNetworkError'\nimport { filterNonFailedFiles, filterFilesToEmitUploadStarted } from '@uppy/utils/lib/fileFilters'\n\nimport packageJson from '../package.json'\nimport locale from './locale.js'\n\nfunction buildResponseError (xhr, err) {\n  let error = err\n  // No error message\n  if (!error) error = new Error('Upload error')\n  // Got an error message string\n  if (typeof error === 'string') error = new Error(error)\n  // Got something else\n  if (!(error instanceof Error)) {\n    error = Object.assign(new Error('Upload error'), { data: error })\n  }\n\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr)\n    return error\n  }\n\n  error.request = xhr\n  return error\n}\n\n/**\n * Set `data.type` in the blob to `file.meta.type`,\n * because we might have detected a more accurate file type in Uppy\n * https://stackoverflow.com/a/50875615\n *\n * @param {object} file File object with `data`, `size` and `meta` properties\n * @returns {object} blob updated with the new `type` set from `file.meta.type`\n */\nfunction setTypeInBlob (file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type)\n  return dataWithUpdatedType\n}\n\nexport default class XHRUpload extends BasePlugin {\n  // eslint-disable-next-line global-require\n  static VERSION = packageJson.version\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.type = 'uploader'\n    this.id = this.opts.id || 'XHRUpload'\n    this.title = 'XHRUpload'\n\n    this.defaultLocale = locale\n\n    // Default options\n    const defaultOptions = {\n      formData: true,\n      fieldName: opts.bundle ? 'files[]' : 'file',\n      method: 'post',\n      allowedMetaFields: null,\n      responseUrlFieldName: 'url',\n      bundle: false,\n      headers: {},\n      timeout: 30 * 1000,\n      limit: 5,\n      withCredentials: false,\n      responseType: '',\n      /**\n       * @param {string} responseText the response body string\n       */\n      getResponseData (responseText) {\n        let parsedResponse = {}\n        try {\n          parsedResponse = JSON.parse(responseText)\n        } catch (err) {\n          uppy.log(err)\n        }\n\n        return parsedResponse\n      },\n      /**\n       *\n       * @param {string} _ the response body string\n       * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)\n       */\n      getResponseError (_, response) {\n        let error = new Error('Upload error')\n\n        if (isNetworkError(response)) {\n          error = new NetworkError(error, response)\n        }\n\n        return error\n      },\n      /**\n       * Check if the response from the upload endpoint indicates that the upload was successful.\n       *\n       * @param {number} status the response status code\n       */\n      validateStatus (status) {\n        return status >= 200 && status < 300\n      },\n    }\n\n    this.opts = { ...defaultOptions, ...opts }\n    this.i18nInit()\n\n    // Simultaneous upload limiting is shared across all uploads with this plugin.\n    if (internalRateLimitedQueue in this.opts) {\n      this.requests = this.opts[internalRateLimitedQueue]\n    } else {\n      this.requests = new RateLimitedQueue(this.opts.limit)\n    }\n\n    if (this.opts.bundle && !this.opts.formData) {\n      throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.')\n    }\n\n    if (opts?.allowedMetaFields === undefined && 'metaFields' in this.opts) {\n      throw new Error('The `metaFields` option has been renamed to `allowedMetaFields`.')\n    }\n\n    this.uploaderEvents = Object.create(null)\n  }\n\n  getOptions (file) {\n    const overrides = this.uppy.getState().xhrUpload\n    const { headers } = this.opts\n\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {},\n    }\n    // Support for `headers` as a function, only in the XHRUpload settings.\n    // Options set by other plugins in Uppy state or on the files themselves are still merged in afterward.\n    //\n    // ```js\n    // headers: (file) => ({ expires: file.meta.expires })\n    // ```\n    if (typeof headers === 'function') {\n      opts.headers = headers(file)\n    } else {\n      Object.assign(opts.headers, this.opts.headers)\n    }\n\n    if (overrides) {\n      Object.assign(opts.headers, overrides.headers)\n    }\n    if (file.xhrUpload) {\n      Object.assign(opts.headers, file.xhrUpload.headers)\n    }\n\n    return opts\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addMetadata (formData, meta, opts) {\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields)\n      ? opts.allowedMetaFields\n      : Object.keys(meta) // Send along all fields by default.\n\n    allowedMetaFields.forEach((item) => {\n      if (Array.isArray(meta[item])) {\n        // In this case we don't transform `item` to add brackets, it's up to\n        // the user to add the brackets so it won't be overridden.\n        meta[item].forEach(subItem => formData.append(item, subItem))\n      } else {\n        formData.append(item, meta[item])\n      }\n    })\n  }\n\n  createFormDataUpload (file, opts) {\n    const formPost = new FormData()\n\n    this.addMetadata(formPost, file.meta, opts)\n\n    const dataWithUpdatedType = setTypeInBlob(file)\n\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name)\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType)\n    }\n\n    return formPost\n  }\n\n  createBundledUpload (files, opts) {\n    const formPost = new FormData()\n\n    const { meta } = this.uppy.getState()\n    this.addMetadata(formPost, meta, opts)\n\n    files.forEach((file) => {\n      const options = this.getOptions(file)\n\n      const dataWithUpdatedType = setTypeInBlob(file)\n\n      if (file.name) {\n        formPost.append(options.fieldName, dataWithUpdatedType, file.name)\n      } else {\n        formPost.append(options.fieldName, dataWithUpdatedType)\n      }\n    })\n\n    return formPost\n  }\n\n  async #uploadLocalFile (file, current, total) {\n    const opts = this.getOptions(file)\n\n    this.uppy.log(`uploading ${current} of ${total}`)\n    return new Promise((resolve, reject) => {\n      const data = opts.formData\n        ? this.createFormDataUpload(file, opts)\n        : file.data\n\n      const xhr = new XMLHttpRequest()\n      const eventManager = new EventManager(this.uppy)\n      this.uploaderEvents[file.id] = eventManager\n      let queuedRequest\n\n      const timer = new ProgressTimeout(opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', { seconds: Math.ceil(opts.timeout / 1000) }))\n        this.uppy.emit('upload-stalled', error, [file])\n      })\n\n      const id = nanoid()\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log(`[XHRUpload] ${id} started`)\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        this.uppy.log(`[XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\n        // Begin checking for timeouts when progress starts, instead of loading,\n        // to avoid timing out requests on browser concurrency queue\n        timer.progress()\n\n        if (ev.lengthComputable) {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: ev.loaded,\n            bytesTotal: ev.total,\n          })\n        }\n      })\n\n      xhr.addEventListener('load', () => {\n        this.uppy.log(`[XHRUpload] ${id} finished`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        if (opts.validateStatus(xhr.status, xhr.responseText, xhr)) {\n          const body = opts.getResponseData(xhr.responseText, xhr)\n          const uploadURL = body[opts.responseUrlFieldName]\n\n          const uploadResp = {\n            status: xhr.status,\n            body,\n            uploadURL,\n          }\n\n          this.uppy.emit('upload-success', file, uploadResp)\n\n          if (uploadURL) {\n            this.uppy.log(`Download ${file.name} from ${uploadURL}`)\n          }\n\n          return resolve(file)\n        }\n        const body = opts.getResponseData(xhr.responseText, xhr)\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n\n        const response = {\n          status: xhr.status,\n          body,\n        }\n\n        this.uppy.emit('upload-error', file, error, response)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        this.uppy.log(`[XHRUpload] ${id} errored`)\n        timer.done()\n        queuedRequest.done()\n        if (this.uploaderEvents[file.id]) {\n          this.uploaderEvents[file.id].remove()\n          this.uploaderEvents[file.id] = null\n        }\n\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\n        this.uppy.emit('upload-error', file, error)\n        return reject(error)\n      })\n\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = opts.withCredentials\n      if (opts.responseType !== '') {\n        xhr.responseType = opts.responseType\n      }\n\n      queuedRequest = this.requests.run(() => {\n        // When using an authentication system like JWT, the bearer token goes as a header. This\n        // header needs to be fresh each time the token is refreshed so computing and setting the\n        // headers just before the upload starts enables this kind of authentication to work properly.\n        // Otherwise, half-way through the list of uploads the token could be stale and the upload would fail.\n        const currentOpts = this.getOptions(file)\n\n        Object.keys(currentOpts.headers).forEach((header) => {\n          xhr.setRequestHeader(header, currentOpts.headers[header])\n        })\n\n        xhr.send(data)\n\n        return () => {\n          timer.done()\n          xhr.abort()\n        }\n      })\n\n      eventManager.onFileRemove(file.id, () => {\n        queuedRequest.abort()\n        reject(new Error('File removed'))\n      })\n\n      eventManager.onCancelAll(file.id, ({ reason }) => {\n        if (reason === 'user') {\n          queuedRequest.abort()\n        }\n        reject(new Error('Upload cancelled'))\n      })\n    })\n  }\n\n  #uploadBundle (files) {\n    return new Promise((resolve, reject) => {\n      const { endpoint } = this.opts\n      const { method } = this.opts\n\n      const optsFromState = this.uppy.getState().xhrUpload\n      const formData = this.createBundledUpload(files, {\n        ...this.opts,\n        ...(optsFromState || {}),\n      })\n\n      const xhr = new XMLHttpRequest()\n\n      const emitError = (error) => {\n        files.forEach((file) => {\n          this.uppy.emit('upload-error', file, error)\n        })\n      }\n\n      const timer = new ProgressTimeout(this.opts.timeout, () => {\n        const error = new Error(this.i18n('uploadStalled', { seconds: Math.ceil(this.opts.timeout / 1000) }))\n        this.uppy.emit('upload-stalled', error, files)\n      })\n\n      xhr.upload.addEventListener('loadstart', () => {\n        this.uppy.log('[XHRUpload] started uploading bundle')\n        timer.progress()\n      })\n\n      xhr.upload.addEventListener('progress', (ev) => {\n        timer.progress()\n\n        if (!ev.lengthComputable) return\n\n        files.forEach((file) => {\n          this.uppy.emit('upload-progress', file, {\n            uploader: this,\n            bytesUploaded: (ev.loaded / ev.total) * file.size,\n            bytesTotal: file.size,\n          })\n        })\n      })\n\n      xhr.addEventListener('load', (ev) => {\n        timer.done()\n\n        if (this.opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n          const body = this.opts.getResponseData(xhr.responseText, xhr)\n          const uploadResp = {\n            status: ev.target.status,\n            body,\n          }\n          files.forEach((file) => {\n            this.uppy.emit('upload-success', file, uploadResp)\n          })\n          return resolve()\n        }\n\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error')\n        error.request = xhr\n        emitError(error)\n        return reject(error)\n      })\n\n      xhr.addEventListener('error', () => {\n        timer.done()\n\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error')\n        emitError(error)\n        return reject(error)\n      })\n\n      this.uppy.on('cancel-all', ({ reason } = {}) => {\n        if (reason !== 'user') return\n        timer.done()\n        xhr.abort()\n      })\n\n      xhr.open(method.toUpperCase(), endpoint, true)\n      // IE10 does not allow setting `withCredentials` and `responseType`\n      // before `open()` is called.\n      xhr.withCredentials = this.opts.withCredentials\n      if (this.opts.responseType !== '') {\n        xhr.responseType = this.opts.responseType\n      }\n\n      Object.keys(this.opts.headers).forEach((header) => {\n        xhr.setRequestHeader(header, this.opts.headers[header])\n      })\n\n      xhr.send(formData)\n    })\n  }\n\n  #getCompanionClientArgs (file) {\n    const opts = this.getOptions(file)\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields)\n      ? opts.allowedMetaFields\n      // Send along all fields by default.\n      : Object.keys(file.meta)\n    return {\n      ...file.remote.body,\n      protocol: 'multipart',\n      endpoint: opts.endpoint,\n      size: file.data.size,\n      fieldname: opts.fieldName,\n      metadata: Object.fromEntries(allowedMetaFields.map(name => [name, file.meta[name]])),\n      httpMethod: opts.method,\n      useFormData: opts.formData,\n      headers: opts.headers,\n    }\n  }\n\n  async #uploadFiles (files) {\n    await Promise.allSettled(files.map((file, i) => {\n      const current = parseInt(i, 10) + 1\n      const total = files.length\n\n      if (file.isRemote) {\n        const getQueue = () => this.requests\n        const controller = new AbortController()\n\n        const removedHandler = (removedFile) => {\n          if (removedFile.id === file.id) controller.abort()\n        }\n        this.uppy.on('file-removed', removedHandler)\n\n        const uploadPromise = file.remote.requestClient.uploadRemoteFile(\n          file,\n          this.#getCompanionClientArgs(file),\n          { signal: controller.signal, getQueue },\n        )\n\n        this.requests.wrapSyncFunction(() => {\n          this.uppy.off('file-removed', removedHandler)\n        }, { priority: -1 })()\n\n        return uploadPromise\n      }\n\n      return this.#uploadLocalFile(file, current, total)\n    }))\n  }\n\n  #handleUpload = async (fileIDs) => {\n    if (fileIDs.length === 0) {\n      this.uppy.log('[XHRUpload] No files to upload!')\n      return\n    }\n\n    // No limit configured by the user, and no RateLimitedQueue passed in by a \"parent\" plugin\n    // (basically just AwsS3) using the internal symbol\n    if (this.opts.limit === 0 && !this.opts[internalRateLimitedQueue]) {\n      this.uppy.log(\n        '[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0',\n        'warning',\n      )\n    }\n\n    this.uppy.log('[XHRUpload] Uploading...')\n    const files = this.uppy.getFilesByIds(fileIDs)\n\n    const filesFiltered = filterNonFailedFiles(files)\n    const filesToEmit = filterFilesToEmitUploadStarted(filesFiltered)\n    this.uppy.emit('upload-start', filesToEmit)\n\n    if (this.opts.bundle) {\n      // if bundle: true, we don’t support remote uploads\n      const isSomeFileRemote = filesFiltered.some(file => file.isRemote)\n      if (isSomeFileRemote) {\n        throw new Error('Can’t upload remote files when the `bundle: true` option is set')\n      }\n\n      if (typeof this.opts.headers === 'function') {\n        throw new TypeError('`headers` may not be a function when the `bundle: true` option is set')\n      }\n\n      await this.#uploadBundle(filesFiltered)\n    } else {\n      await this.#uploadFiles(filesFiltered)\n    }\n  }\n\n  install () {\n    if (this.opts.bundle) {\n      const { capabilities } = this.uppy.getState()\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: false,\n        },\n      })\n    }\n\n    this.uppy.addUploader(this.#handleUpload)\n  }\n\n  uninstall () {\n    if (this.opts.bundle) {\n      const { capabilities } = this.uppy.getState()\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: true,\n        },\n      })\n    }\n\n    this.uppy.removeUploader(this.#handleUpload)\n  }\n}\n"],"mappings":"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"}