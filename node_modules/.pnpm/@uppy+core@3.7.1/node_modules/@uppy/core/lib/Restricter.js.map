{"version":3,"names":["prettierBytes","match","defaultOptions","maxFileSize","minFileSize","maxTotalFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","requiredMetaFields","RestrictionError","Error","constructor","message","_temp","isUserFacing","file","isRestriction","Restricter","getOpts","i18n","opts","restrictions","Array","isArray","TypeError","validateAggregateRestrictions","existingFiles","addingFiles","nonGhostFiles","filter","f","isGhost","length","smart_count","totalFilesSize","reduce","total","size","addingFile","name","validateSingleFile","isCorrectFileType","some","type","includes","replace","extension","toLowerCase","slice","allowedFileTypesString","join","types","validate","forEach","validateMinNumberOfFiles","files","Object","keys","getMissingRequiredMetaFields","error","fileName","missingFields","field","hasOwn","meta","push"],"sources":["Restricter.js"],"sourcesContent":["/* eslint-disable max-classes-per-file, class-methods-use-this */\nimport prettierBytes from '@transloadit/prettier-bytes'\nimport match from 'mime-match'\n\nconst defaultOptions = {\n  maxFileSize: null,\n  minFileSize: null,\n  maxTotalFileSize: null,\n  maxNumberOfFiles: null,\n  minNumberOfFiles: null,\n  allowedFileTypes: null,\n  requiredMetaFields: [],\n}\n\nclass RestrictionError extends Error {\n  constructor (message, { isUserFacing = true, file } = {}) {\n    super(message)\n    this.isUserFacing = isUserFacing\n    if (file != null) this.file = file // only some restriction errors are related to a particular file\n  }\n\n  isRestriction = true\n}\n\nclass Restricter {\n  constructor (getOpts, i18n) {\n    this.i18n = i18n\n    this.getOpts = () => {\n      const opts = getOpts()\n\n      if (opts.restrictions.allowedFileTypes != null\n          && !Array.isArray(opts.restrictions.allowedFileTypes)) {\n        throw new TypeError('`restrictions.allowedFileTypes` must be an array')\n      }\n      return opts\n    }\n  }\n\n  // Because these operations are slow, we cannot run them for every file (if we are adding multiple files)\n  validateAggregateRestrictions (existingFiles, addingFiles) {\n    const { maxTotalFileSize, maxNumberOfFiles } = this.getOpts().restrictions\n\n    if (maxNumberOfFiles) {\n      const nonGhostFiles = existingFiles.filter(f => !f.isGhost)\n      if (nonGhostFiles.length + addingFiles.length > maxNumberOfFiles) {\n        throw new RestrictionError(`${this.i18n('youCanOnlyUploadX', { smart_count: maxNumberOfFiles })}`)\n      }\n    }\n\n    if (maxTotalFileSize) {\n      let totalFilesSize = existingFiles.reduce((total, f) => (total + f.size), 0)\n\n      for (const addingFile of addingFiles) {\n        if (addingFile.size != null) { // We can't check maxTotalFileSize if the size is unknown.\n          totalFilesSize += addingFile.size\n\n          if (totalFilesSize > maxTotalFileSize) {\n            throw new RestrictionError(this.i18n('exceedsSize', {\n              size: prettierBytes(maxTotalFileSize),\n              file: addingFile.name,\n            }))\n          }\n        }\n      }\n    }\n  }\n\n  validateSingleFile (file) {\n    const { maxFileSize, minFileSize, allowedFileTypes } = this.getOpts().restrictions\n\n    if (allowedFileTypes) {\n      const isCorrectFileType = allowedFileTypes.some((type) => {\n        // check if this is a mime-type\n        if (type.includes('/')) {\n          if (!file.type) return false\n          return match(file.type.replace(/;.*?$/, ''), type)\n        }\n\n        // otherwise this is likely an extension\n        if (type[0] === '.' && file.extension) {\n          return file.extension.toLowerCase() === type.slice(1).toLowerCase()\n        }\n        return false\n      })\n\n      if (!isCorrectFileType) {\n        const allowedFileTypesString = allowedFileTypes.join(', ')\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', { types: allowedFileTypesString }), { file })\n      }\n    }\n\n    // We can't check maxFileSize if the size is unknown.\n    if (maxFileSize && file.size != null && file.size > maxFileSize) {\n      throw new RestrictionError(this.i18n('exceedsSize', {\n        size: prettierBytes(maxFileSize),\n        file: file.name,\n      }), { file })\n    }\n\n    // We can't check minFileSize if the size is unknown.\n    if (minFileSize && file.size != null && file.size < minFileSize) {\n      throw new RestrictionError(this.i18n('inferiorSize', {\n        size: prettierBytes(minFileSize),\n      }), { file })\n    }\n  }\n\n  validate (existingFiles, addingFiles) {\n    addingFiles.forEach((addingFile) => {\n      this.validateSingleFile(addingFile)\n    })\n    this.validateAggregateRestrictions(existingFiles, addingFiles)\n  }\n\n  validateMinNumberOfFiles (files) {\n    const { minNumberOfFiles } = this.getOpts().restrictions\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(this.i18n('youHaveToAtLeastSelectX', { smart_count: minNumberOfFiles }))\n    }\n  }\n\n  getMissingRequiredMetaFields (file) {\n    const error = new RestrictionError(this.i18n('missingRequiredMetaFieldOnFile', { fileName: file.name }))\n    const { requiredMetaFields } = this.getOpts().restrictions\n    const missingFields = []\n\n    for (const field of requiredMetaFields) {\n      if (!Object.hasOwn(file.meta, field) || file.meta[field] === '') {\n        missingFields.push(field)\n      }\n    }\n\n    return { missingFields, error }\n  }\n}\n\nexport { Restricter, defaultOptions, RestrictionError }\n"],"mappings":"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"}