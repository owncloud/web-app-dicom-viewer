(function(i,t){"object"===typeof exports&&"undefined"!==typeof module?t(exports,require("vue"),require("@casl/ability")):"function"===typeof define&&define.amd?define(["exports","vue","@casl/ability"],t):(i="undefined"!==typeof globalThis?globalThis:i||self,t((i.casl=i.casl||{},i.casl.vue={}),i.Vue,i.casl))})(this,(function(i,t,e){"use strict";function reactiveAbility(i){if(i.hasOwnProperty("possibleRulesFor"))return i;var e=t.ref(true);i.on("updated",(function(){e.value=!e.value}));var n=i.possibleRulesFor.bind(i);i.possibleRulesFor=function(i,t){e.value=e.value;return n(i,t)};i.can=i.can.bind(i);i.cannot=i.cannot.bind(i);return i}var n=Symbol("ability");function useAbility(){var i=t.inject(n);if(!i)throw new Error("Cannot inject Ability instance because it was not provided");return i}function provideAbility(i){t.provide(n,reactiveAbility(i))}function r(i){if(void 0!==i.a)return"a";if(void 0!==i.this)return"this";if(void 0!==i.an)return"an";return""}var o=t.defineComponent({name:"Can",props:{I:String,do:String,a:[String,Function],an:[String,Function],this:[String,Function,Object],on:[String,Function,Object],not:Boolean,passThrough:Boolean,field:String},setup:function i(t,e){var n=e.slots;var o=t;var u="do";var a="on";if(void 0===o[u]){u="I";a=r(t)}if(!o[u])throw new Error("Neither `I` nor `do` prop was passed in <Can>");if(!n.default)throw new Error("Expects to receive default slot");var l=useAbility();return function(){var i=l.can(o[u],o[a],o.field);var e=t.not?!i:i;if(!t.passThrough)return e?n.default():null;return n.default({allowed:e,ability:l})}}});function u(i,t,r){if(!t||!(t instanceof e.PureAbility))throw new Error("Please provide an Ability instance to abilitiesPlugin plugin");i.provide(n,reactiveAbility(t));if(r&&r.useGlobalProperties){i.config.globalProperties.$ability=t;i.config.globalProperties.$can=t.can.bind(t)}}i.ABILITY_TOKEN=n;i.Can=o;i.abilitiesPlugin=u;i.provideAbility=provideAbility;i.useAbility=useAbility;Object.defineProperty(i,"__esModule",{value:true})}));
//# sourceMappingURL=index.js.map
