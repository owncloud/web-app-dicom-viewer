{"version":3,"file":"index.js","mappings":"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AC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,GAAI,EAAG,EAAG,KACX,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,EAAG,EAAG,KACZ,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,OAGpBC,IAAK,CACHxE,KAAM,MACNyE,UAAW,IACXF,OAAQ,CACN,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,GAAI,EAAG,KACX,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,GAAI,GAAI,KACZ,CAAC,EAAG,IAAK,GAAI,KACb,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,EAAG,IAAK,IAAK,KACd,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,OAGpBG,aAAc,CACZ1E,KAAM,iBACNyE,UAAW,IACXF,OAAQ,CACN,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,GAAI,KACX,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,EAAG,EAAG,IAAK,KACZ,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,OAGpBI,UAAW,CACT3E,KAAM,cACNyE,UAAW,IACXF,OAAQ,CACN,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,EAAG,EAAG,EAAG,KACV,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,IAAK,EAAG,KACd,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IAAK,GAAI,EAAG,KACb,CAAC,IA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sFACFC,SAAU,MACVC,MAAO,IACPC,QAAS,MACTC,cACE,+JACFC,QAAS,MACTC,cAAe,KAEjB,CACExH,KAAM,cACNgH,gBAAiB,cACjBC,cAAe,KACfC,cACE,qFACFC,SAAU,MACVC,MAAO,IACPC,QAAS,MACTC,cACE,qJACFC,QAAS,MACTC,cAAe,KAEjB,CACExH,KAAM,cACNgH,gBAAiB,cACjBC,cAAe,KACfC,cACE,0GACFC,SAAU,MACVC,MAAO,IACPC,QAAS,MACTC,cACE,2IACFC,QAAS,MACTC,cAAe,KAEjB,CACExH,KAAM,6BACNgH,gBAAiB,cACjBC,cAAe,KACfC,cACE,oEACFC,SAAU,MACVC,MAAO,IACPC,QAAS,MACTC,cACE,yIACFC,QAAS,MACTC,cAAe,KAEjB,CACExH,KAAM,mBACNgH,gBAAiB,cACjBC,cAAe,IACfC,cACE,qEACFC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,0IACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,uBACNgH,gBAAiB,cACjBC,cAAe,IACfC,cACE,+EACFC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,4HACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,yBACNgH,gBAAiB,cACjBC,cAAe,IACfC,cACE,sGACFC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,iKACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,yBACNgH,gBAAiB,cACjBC,cAAe,KACfC,cACE,mGACFC,SAAU,MACVC,MAAO,IACPC,QAAS,MACTC,cACE,yKACFC,QAAS,MACTC,cAAe,KAEjB,CACExH,KAAM,yBACNgH,gBAAiB,cACjBC,cAAe,IACfC,cAAe,yCACfC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,qFACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,SACNgH,gBAAiB,uBACjBC,cAAe,IACfC,cAAe,0DACfC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,gLACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,uBACNgH,gBAAiB,cACjBC,cAAe,IACfC,cACE,wGACFC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,qJACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,UACNgH,gBAAiB,uBACjBC,cAAe,IACfC,cAAe,sDACfC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,0IACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,SACNgH,gBAAiB,cACjBC,cAAe,KACfC,cAAe,mCACfC,SAAU,MACVC,MAAO,IACPC,QAAS,MACTC,cAAe,oDACfC,QAAS,MACTC,cAAe,KAEjB,CACExH,KAAM,YACNgH,gBAAiB,cACjBC,cAAe,KACfC,cACE,wEACFC,SAAU,MACVC,MAAO,IACPC,QAAS,MACTC,cACE,0IACFC,QAAS,MACTC,cAAe,KAEjB,CACExH,KAAM,wBACNgH,gBAAiB,cACjBC,cAAe,IACfC,cACE,gHACFC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,8LACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,iBACNgH,gBAAiB,cACjBC,cAAe,IACfC,cAAe,2CACfC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,uFACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,SACNgH,gBAAiB,cACjBC,cAAe,KACfC,cAAe,mDACfC,SAAU,MACVC,MAAO,IACPC,QAAS,MACTC,cACE,mEACFC,QAAS,MACTC,cAAe,KAEjB,CACExH,KAAM,WACNgH,gBAAiB,cACjBC,cAAe,IACfC,cACE,sFACFC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,oIACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,aACNgH,gBAAiB,cACjBC,cAAe,IACfC,cAAe,iDACfC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cACE,qIACFC,QAAS,IACTC,cAAe,KAEjB,CACExH,KAAM,SACNgH,gBAAiB,cACjBC,cAAe,IACfC,cAAe,mCACfC,SAAU,IACVC,MAAO,IACPC,QAAS,MACTC,cAAe,oDACfC,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","sources":["webpack://cornerstone3D/webpack/universalModuleDefinition","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/DataArray\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/DataArray/Constants\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/HalfFloat\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/Math\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/MatrixBuilder\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/Core/Points\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/DataModel/ImageData\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/DataModel/Plane\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Common/DataModel/PolyData\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Actor\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Camera\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/ImageMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/ImageSlice\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Mapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Property/Constants\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/RenderWindow\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Renderer\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/Volume\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/VolumeMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Actor\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Actor2D\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Camera\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Renderer\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Skybox\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/StickMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Texture\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/Volume\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Profiles/Geometry\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/Profiles/Volume\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\"","webpack://cornerstone3D/external umd \"@kitware/vtk.js/macros\"","webpack://cornerstone3D/external umd {\"root\":\"window\",\"commonjs\":\"detect-gpu\",\"commonjs2\":\"detect-gpu\",\"amd\":\"detect-gpu\"}","webpack://cornerstone3D/external umd {\"root\":\"window\",\"commonjs\":\"gl-matrix\",\"commonjs2\":\"gl-matrix\",\"amd\":\"gl-matrix\"}","webpack://cornerstone3D/external umd {\"root\":\"window\",\"commonjs\":\"lodash.clonedeep\",\"commonjs2\":\"lodash.clonedeep\",\"amd\":\"lodash.clonedeep\"}","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/typeof.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/regenerator/index.js","webpack://cornerstone3D/webpack/bootstrap","webpack://cornerstone3D/webpack/runtime/compat get default export","webpack://cornerstone3D/webpack/runtime/define property getters","webpack://cornerstone3D/webpack/runtime/hasOwnProperty shorthand","webpack://cornerstone3D/webpack/runtime/make namespace object","webpack://cornerstone3D/./src/enums/Events.ts","webpack://cornerstone3D/./src/enums/RequestType.ts","webpack://cornerstone3D/./src/enums/ViewportType.ts","webpack://cornerstone3D/./src/enums/InterpolationType.ts","webpack://cornerstone3D/./src/enums/BlendModes.ts","webpack://cornerstone3D/./src/enums/OrientationAxis.ts","webpack://cornerstone3D/./src/enums/SharedArrayBufferModes.ts","webpack://cornerstone3D/./src/enums/GeometryType.ts","webpack://cornerstone3D/./src/enums/ContourType.ts","webpack://cornerstone3D/./src/enums/VOILUTFunctionType.ts","webpack://cornerstone3D/./src/enums/DynamicOperatorType.ts","webpack://cornerstone3D/./src/enums/CalibrationTypes.ts","webpack://cornerstone3D/./src/enums/ViewportStatus.ts","webpack://cornerstone3D/./src/constants/cpuColormaps.ts","webpack://cornerstone3D/./src/constants/rendering.ts","webpack://cornerstone3D/./src/constants/epsilon.ts","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://cornerstone3D/./src/utilities/deepFreeze.ts","webpack://cornerstone3D/./src/constants/mprCameraValues.ts","webpack://cornerstone3D/./src/constants/viewportPresets.ts","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://cornerstone3D/./src/utilities/imageIdToURI.ts","webpack://cornerstone3D/./src/RenderingEngine/renderingEngineCache.ts","webpack://cornerstone3D/./src/RenderingEngine/getRenderingEngine.ts","webpack://cornerstone3D/./src/utilities/deepMerge.ts","webpack://cornerstone3D/./src/init.ts","webpack://cornerstone3D/./src/RenderingEngine/vtkClasses/vtkStreamingOpenGLTexture.js","webpack://cornerstone3D/./src/cache/classes/ImageVolume.ts","webpack://cornerstone3D/./src/utilities/isTypedArray.ts","webpack://cornerstone3D/./src/eventTarget.ts","webpack://cornerstone3D/./src/utilities/triggerEvent.ts","webpack://cornerstone3D/./src/cache/cache.ts","webpack://cornerstone3D/./src/utilities/uuidv4.ts","webpack://cornerstone3D/./src/loaders/volumeLoader.ts","webpack://cornerstone3D/./src/RenderingEngine/vtkClasses/vtkSharedVolumeMapper.js","webpack://cornerstone3D/./src/RenderingEngine/helpers/createVolumeMapper.ts","webpack://cornerstone3D/./src/requestPool/requestPoolManager.ts","webpack://cornerstone3D/./src/requestPool/imageLoadPoolManager.ts","webpack://cornerstone3D/./src/loaders/imageLoader.ts","webpack://cornerstone3D/./src/metaData.ts","webpack://cornerstone3D/./src/utilities/windowLevel.ts","webpack://cornerstone3D/./src/utilities/getMinMax.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/setDefaultVolumeVOI.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/createVolumeActor.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/getOrCreateCanvas.ts","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://cornerstone3D/./src/RenderingEngine/vtkClasses/vtkStreamingOpenGLVolumeMapper.js","webpack://cornerstone3D/./src/RenderingEngine/vtkClasses/vtkStreamingOpenGLViewNodeFactory.js","webpack://cornerstone3D/./src/RenderingEngine/vtkClasses/vtkStreamingOpenGLRenderWindow.js","webpack://cornerstone3D/./src/RenderingEngine/vtkClasses/vtkOffscreenMultiRenderWindow.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/get.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://cornerstone3D/./src/cache/index.ts","webpack://cornerstone3D/./src/utilities/actorCheck.ts","webpack://cornerstone3D/./src/utilities/getSpacingInNormalDirection.ts","webpack://cornerstone3D/./src/utilities/getClosestImageId.ts","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://cornerstone3D/../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://cornerstone3D/./src/utilities/getVoiFromSigmoidRGBTransferFunction.ts","webpack://cornerstone3D/./src/utilities/colormap.ts","webpack://cornerstone3D/./src/utilities/invertRgbTransferFunction.ts","webpack://cornerstone3D/./src/utilities/createSigmoidRGBTransferFunction.ts","webpack://cornerstone3D/./src/utilities/applyPreset.ts","webpack://cornerstone3D/./src/utilities/getVolumeActorCorners.ts","webpack://cornerstone3D/./src/utilities/getSliceRange.ts","webpack://cornerstone3D/./src/utilities/getTargetVolumeAndSpacingInNormalDir.ts","webpack://cornerstone3D/./src/utilities/getImageSliceDataForVolumeViewport.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/volumeNewImageEventDispatcher.ts","webpack://cornerstone3D/./src/utilities/planar.ts","webpack://cornerstone3D/./src/utilities/hasNaNValues.ts","webpack://cornerstone3D/./src/RenderingEngine/Viewport.ts","webpack://cornerstone3D/./src/RenderingEngine/vtkClasses/vtkSlabCamera.js","webpack://cornerstone3D/./src/utilities/transformWorldToIndex.ts","webpack://cornerstone3D/./src/RenderingEngine/BaseVolumeViewport.ts","webpack://cornerstone3D/./src/RenderingEngine/VolumeViewport.ts","webpack://cornerstone3D/./src/utilities/isEqual.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/now.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/getVOILut.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/transform.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/calculateTransform.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/setToPixelCoordinateSystem.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/doesImageNeedToBeRendered.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/initializeRenderCanvas.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/saveLastRendered.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/renderColorImage.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/generateColorLUT.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/storedRGBAPixelDataToCanvasImageData.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/storedColorPixelDataToCanvasImageData.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/lutMatches.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/getLut.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/computeAutoVoi.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/generateLut.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/getModalityLut.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/renderGrayscaleImage.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPET.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageData.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataRGBA.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/colors/lookupTable.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPseudocolorLUT.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataPseudocolorLUTPET.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/colors/colormap.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/renderPseudoColorImage.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/drawImageSync.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/getTransform.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/canvasToPixel.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/pixelToCanvas.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/setDefaultViewport.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/validator.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/getImageSize.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/getImageFitScale.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/getDefaultViewport.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/createViewport.ts","webpack://cornerstone3D/./src/utilities/createLinearRGBTransferFunction.ts","webpack://cornerstone3D/./src/RenderingEngine/StackViewport.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/resize.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/fitToWindow.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/correctShift.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/cpuFallback/rendering/resetCamera.ts","webpack://cornerstone3D/./src/RenderingEngine/VolumeViewport3D.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/viewportTypeToViewportClass.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/viewportTypeUsesCustomRenderingPipeline.ts","webpack://cornerstone3D/./src/RenderingEngine/RenderingEngine.ts","webpack://cornerstone3D/./src/RenderingEngine/index.ts","webpack://cornerstone3D/./src/requestPool/imageRetrievalPoolManager.ts","webpack://cornerstone3D/./src/getEnabledElement.ts","webpack://cornerstone3D/./src/Settings.ts","webpack://cornerstone3D/./src/cache/classes/Contour.ts","webpack://cornerstone3D/./src/cache/classes/ContourSet.ts","webpack://cornerstone3D/./src/loaders/geometryLoader.ts","webpack://cornerstone3D/./src/utilities/scaleRgbTransferFunction.ts","webpack://cornerstone3D/./src/utilities/getRuntimeId.ts","webpack://cornerstone3D/./src/utilities/calibratedPixelSpacingMetadataProvider.ts","webpack://cornerstone3D/./src/utilities/isOpposite.ts","webpack://cornerstone3D/./src/utilities/createUint8SharedArray.ts","webpack://cornerstone3D/./src/utilities/createFloat32SharedArray.ts","webpack://cornerstone3D/./src/utilities/createUInt16SharedArray.ts","webpack://cornerstone3D/./src/utilities/createInt16SharedArray.ts","webpack://cornerstone3D/./src/utilities/indexWithinDimensions.ts","webpack://cornerstone3D/./src/utilities/getVolumeViewportsContainingSameVolumes.ts","webpack://cornerstone3D/./src/utilities/getViewportsWithVolumeId.ts","webpack://cornerstone3D/./src/utilities/isPTPrescaledWithSUV.ts","webpack://cornerstone3D/./src/utilities/renderToCanvasGPU.ts","webpack://cornerstone3D/./src/utilities/renderToCanvasCPU.ts","webpack://cornerstone3D/./src/utilities/loadImageToCanvas.ts","webpack://cornerstone3D/./src/utilities/worldToImageCoords.ts","webpack://cornerstone3D/./src/utilities/imageToWorldCoords.ts","webpack://cornerstone3D/./src/utilities/getVolumeSliceRangeInfo.ts","webpack://cornerstone3D/./src/utilities/getVolumeViewportScrollInfo.ts","webpack://cornerstone3D/./src/utilities/snapFocalPointToSlice.ts","webpack://cornerstone3D/./src/utilities/getViewportsWithImageURI.ts","webpack://cornerstone3D/./src/utilities/getClosestStackImageIndexForPoint.ts","webpack://cornerstone3D/./src/utilities/spatialRegistrationMetadataProvider.ts","webpack://cornerstone3D/./src/utilities/calculateViewportsSpatialRegistration.ts","webpack://cornerstone3D/./src/utilities/getViewportImageCornersInWorld.ts","webpack://cornerstone3D/./src/utilities/getScalingParameters.ts","webpack://cornerstone3D/./src/utilities/getScalarDataType.ts","webpack://cornerstone3D/./src/utilities/getImageLegacy.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/setVolumesForViewports.ts","webpack://cornerstone3D/./src/RenderingEngine/helpers/addVolumesToViewports.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"detect-gpu\"), require(\"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\"), require(\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\"), require(\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps\"), require(\"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\"), require(\"@kitware/vtk.js/macros\"), require(\"@kitware/vtk.js/Rendering/Core/Camera\"), require(\"gl-matrix\"), require(\"@kitware/vtk.js/Common/Core/Math\"), require(\"@kitware/vtk.js/Rendering/Profiles/Volume\"), require(\"@kitware/vtk.js/Common/DataModel/ImageData\"), require(\"@kitware/vtk.js/Common/Core/DataArray\"), require(\"lodash.clonedeep\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Texture\"), require(\"@kitware/vtk.js/Common/Core/HalfFloat\"), require(\"@kitware/vtk.js/Common/Core/MatrixBuilder\"), require(\"@kitware/vtk.js/Rendering/Core/Volume\"), require(\"@kitware/vtk.js/Rendering/Core/VolumeMapper\"), require(\"@kitware/vtk.js/Common/DataModel/Plane\"), require(\"@kitware/vtk.js/Rendering/Core/ImageMapper\"), require(\"@kitware/vtk.js/Rendering/Core/ImageSlice\"), require(\"@kitware/vtk.js/Rendering/Core/Renderer\"), require(\"@kitware/vtk.js/Rendering/Core/RenderWindow\"), require(\"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\"), require(\"@kitware/vtk.js/Common/Core/Points\"), require(\"@kitware/vtk.js/Common/DataModel/PolyData\"), require(\"@kitware/vtk.js/Rendering/Core/Actor\"), require(\"@kitware/vtk.js/Rendering/Core/Mapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Actor\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Actor2D\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Camera\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\"), require(\"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Renderer\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Skybox\"), require(\"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/StickMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Volume\"), require(\"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\"), require(\"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\"), require(\"@kitware/vtk.js/Common/Core/DataArray/Constants\"), require(\"@kitware/vtk.js/Rendering/Core/Property/Constants\"), require(\"@kitware/vtk.js/Rendering/Profiles/Geometry\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"detect-gpu\", \"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\", \"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\", \"@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps\", \"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\", \"@kitware/vtk.js/macros\", \"@kitware/vtk.js/Rendering/Core/Camera\", \"gl-matrix\", \"@kitware/vtk.js/Common/Core/Math\", \"@kitware/vtk.js/Rendering/Profiles/Volume\", \"@kitware/vtk.js/Common/DataModel/ImageData\", \"@kitware/vtk.js/Common/Core/DataArray\", \"lodash.clonedeep\", \"@kitware/vtk.js/Rendering/OpenGL/Texture\", \"@kitware/vtk.js/Common/Core/HalfFloat\", \"@kitware/vtk.js/Common/Core/MatrixBuilder\", \"@kitware/vtk.js/Rendering/Core/Volume\", \"@kitware/vtk.js/Rendering/Core/VolumeMapper\", \"@kitware/vtk.js/Common/DataModel/Plane\", \"@kitware/vtk.js/Rendering/Core/ImageMapper\", \"@kitware/vtk.js/Rendering/Core/ImageSlice\", \"@kitware/vtk.js/Rendering/Core/Renderer\", \"@kitware/vtk.js/Rendering/Core/RenderWindow\", \"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\", \"@kitware/vtk.js/Common/Core/Points\", \"@kitware/vtk.js/Common/DataModel/PolyData\", \"@kitware/vtk.js/Rendering/Core/Actor\", \"@kitware/vtk.js/Rendering/Core/Mapper\", \"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\", \"@kitware/vtk.js/Rendering/OpenGL/Actor\", \"@kitware/vtk.js/Rendering/OpenGL/Actor2D\", \"@kitware/vtk.js/Rendering/OpenGL/Camera\", \"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\", \"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\", \"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\", \"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\", \"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\", \"@kitware/vtk.js/Rendering/OpenGL/Renderer\", \"@kitware/vtk.js/Rendering/OpenGL/Skybox\", \"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\", \"@kitware/vtk.js/Rendering/OpenGL/StickMapper\", \"@kitware/vtk.js/Rendering/OpenGL/Volume\", \"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\", \"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\", \"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\", \"@kitware/vtk.js/Common/Core/DataArray/Constants\", \"@kitware/vtk.js/Rendering/Core/Property/Constants\", \"@kitware/vtk.js/Rendering/Profiles/Geometry\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstone3D\"] = factory(require(\"detect-gpu\"), require(\"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\"), require(\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\"), require(\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps\"), require(\"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\"), require(\"@kitware/vtk.js/macros\"), require(\"@kitware/vtk.js/Rendering/Core/Camera\"), require(\"gl-matrix\"), require(\"@kitware/vtk.js/Common/Core/Math\"), require(\"@kitware/vtk.js/Rendering/Profiles/Volume\"), require(\"@kitware/vtk.js/Common/DataModel/ImageData\"), require(\"@kitware/vtk.js/Common/Core/DataArray\"), require(\"lodash.clonedeep\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Texture\"), require(\"@kitware/vtk.js/Common/Core/HalfFloat\"), require(\"@kitware/vtk.js/Common/Core/MatrixBuilder\"), require(\"@kitware/vtk.js/Rendering/Core/Volume\"), require(\"@kitware/vtk.js/Rendering/Core/VolumeMapper\"), require(\"@kitware/vtk.js/Common/DataModel/Plane\"), require(\"@kitware/vtk.js/Rendering/Core/ImageMapper\"), require(\"@kitware/vtk.js/Rendering/Core/ImageSlice\"), require(\"@kitware/vtk.js/Rendering/Core/Renderer\"), require(\"@kitware/vtk.js/Rendering/Core/RenderWindow\"), require(\"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\"), require(\"@kitware/vtk.js/Common/Core/Points\"), require(\"@kitware/vtk.js/Common/DataModel/PolyData\"), require(\"@kitware/vtk.js/Rendering/Core/Actor\"), require(\"@kitware/vtk.js/Rendering/Core/Mapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Actor\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Actor2D\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Camera\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\"), require(\"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Renderer\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Skybox\"), require(\"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/StickMapper\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Volume\"), require(\"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\"), require(\"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\"), require(\"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\"), require(\"@kitware/vtk.js/Common/Core/DataArray/Constants\"), require(\"@kitware/vtk.js/Rendering/Core/Property/Constants\"), require(\"@kitware/vtk.js/Rendering/Profiles/Geometry\"));\n\telse\n\t\troot[\"cornerstone3D\"] = factory(root[\"window\"], root[\"@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants\"], root[\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\"], root[\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps\"], root[\"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\"], root[\"@kitware/vtk.js/macros\"], root[\"@kitware/vtk.js/Rendering/Core/Camera\"], root[\"window\"], root[\"@kitware/vtk.js/Common/Core/Math\"], root[\"@kitware/vtk.js/Rendering/Profiles/Volume\"], root[\"@kitware/vtk.js/Common/DataModel/ImageData\"], root[\"@kitware/vtk.js/Common/Core/DataArray\"], root[\"window\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Texture\"], root[\"@kitware/vtk.js/Common/Core/HalfFloat\"], root[\"@kitware/vtk.js/Common/Core/MatrixBuilder\"], root[\"@kitware/vtk.js/Rendering/Core/Volume\"], root[\"@kitware/vtk.js/Rendering/Core/VolumeMapper\"], root[\"@kitware/vtk.js/Common/DataModel/Plane\"], root[\"@kitware/vtk.js/Rendering/Core/ImageMapper\"], root[\"@kitware/vtk.js/Rendering/Core/ImageSlice\"], root[\"@kitware/vtk.js/Rendering/Core/Renderer\"], root[\"@kitware/vtk.js/Rendering/Core/RenderWindow\"], root[\"@kitware/vtk.js/Rendering/Core/RenderWindowInteractor\"], root[\"@kitware/vtk.js/Common/Core/Points\"], root[\"@kitware/vtk.js/Common/DataModel/PolyData\"], root[\"@kitware/vtk.js/Rendering/Core/Actor\"], root[\"@kitware/vtk.js/Rendering/Core/Mapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/RenderWindow\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Actor\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Actor2D\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Camera\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/ImageMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/ImageSlice\"], root[\"@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Renderer\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Skybox\"], root[\"@kitware/vtk.js/Rendering/OpenGL/SphereMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/StickMapper\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Volume\"], root[\"@kitware/vtk.js/Rendering/OpenGL/VolumeMapper\"], root[\"@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory\"], root[\"@kitware/vtk.js/Rendering/OpenGL/Texture/Constants\"], root[\"@kitware/vtk.js/Common/Core/DataArray/Constants\"], root[\"@kitware/vtk.js/Rendering/Core/Property/Constants\"], root[\"@kitware/vtk.js/Rendering/Profiles/Geometry\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__9199__, __WEBPACK_EXTERNAL_MODULE__7468__, __WEBPACK_EXTERNAL_MODULE__4795__, __WEBPACK_EXTERNAL_MODULE__1038__, __WEBPACK_EXTERNAL_MODULE__1441__, __WEBPACK_EXTERNAL_MODULE__8197__, __WEBPACK_EXTERNAL_MODULE__9821__, __WEBPACK_EXTERNAL_MODULE__2976__, __WEBPACK_EXTERNAL_MODULE__8807__, __WEBPACK_EXTERNAL_MODULE__6215__, __WEBPACK_EXTERNAL_MODULE__7283__, __WEBPACK_EXTERNAL_MODULE__785__, __WEBPACK_EXTERNAL_MODULE__573__, __WEBPACK_EXTERNAL_MODULE__7953__, __WEBPACK_EXTERNAL_MODULE__7903__, __WEBPACK_EXTERNAL_MODULE__8847__, __WEBPACK_EXTERNAL_MODULE__3739__, __WEBPACK_EXTERNAL_MODULE__6009__, __WEBPACK_EXTERNAL_MODULE__1864__, __WEBPACK_EXTERNAL_MODULE__7896__, __WEBPACK_EXTERNAL_MODULE__9861__, __WEBPACK_EXTERNAL_MODULE__8281__, __WEBPACK_EXTERNAL_MODULE__2329__, __WEBPACK_EXTERNAL_MODULE__673__, __WEBPACK_EXTERNAL_MODULE__2348__, __WEBPACK_EXTERNAL_MODULE__2070__, __WEBPACK_EXTERNAL_MODULE__7474__, __WEBPACK_EXTERNAL_MODULE__6610__, __WEBPACK_EXTERNAL_MODULE__8021__, __WEBPACK_EXTERNAL_MODULE__6643__, __WEBPACK_EXTERNAL_MODULE__1128__, __WEBPACK_EXTERNAL_MODULE__7664__, __WEBPACK_EXTERNAL_MODULE__1474__, __WEBPACK_EXTERNAL_MODULE__2394__, __WEBPACK_EXTERNAL_MODULE__582__, __WEBPACK_EXTERNAL_MODULE__7482__, __WEBPACK_EXTERNAL_MODULE__6343__, __WEBPACK_EXTERNAL_MODULE__4363__, __WEBPACK_EXTERNAL_MODULE__3982__, __WEBPACK_EXTERNAL_MODULE__6130__, __WEBPACK_EXTERNAL_MODULE__298__, __WEBPACK_EXTERNAL_MODULE__2398__, __WEBPACK_EXTERNAL_MODULE__4388__, __WEBPACK_EXTERNAL_MODULE__2643__, __WEBPACK_EXTERNAL_MODULE__9395__, __WEBPACK_EXTERNAL_MODULE__3948__, __WEBPACK_EXTERNAL_MODULE__6478__, __WEBPACK_EXTERNAL_MODULE__6914__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__785__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3948__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7903__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8807__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8847__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2348__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7283__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1441__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1864__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2070__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7474__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9821__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4795__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1038__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7896__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9861__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6610__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6478__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2329__;","module.exports = __WEBPACK_EXTERNAL_MODULE__673__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8281__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3739__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6009__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7468__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6643__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1128__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7664__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1474__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2394__;","module.exports = __WEBPACK_EXTERNAL_MODULE__582__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7482__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6343__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8021__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4363__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3982__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6130__;","module.exports = __WEBPACK_EXTERNAL_MODULE__298__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7953__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9395__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2398__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6914__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6215__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2643__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8197__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9199__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2976__;","module.exports = __WEBPACK_EXTERNAL_MODULE__573__;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Cornerstone Core events\n */\nenum Events {\n  /**\n   * ERROR CODES\n   */\n\n  /**\n   * Error that is thrown when the ImageCache exceeds its max cache size.\n   * This can happen for both volumes and stack images.\n   */\n  CACHE_SIZE_EXCEEDED = 'CACHE_SIZE_EXCEEDED',\n  /**\n   * Happens if an image (either a single image in stack viewport) or a slice\n   * of a volume fails to load by the image/volume loaders.\n   */\n  IMAGE_LOAD_ERROR = 'IMAGE_LOAD_ERROR',\n\n  /**\n   * Triggers on the HTML element when the viewport camera changes.\n   *\n   * Make use of {@link EventTypes.CameraModifiedEvent | CameraModified Event Type } for typing your event listeners for CAMERA_MODIFIED event,\n   * and see what event detail is included in {@link EventTypes.CameraModifiedEventDetail | CameraModified Event Detail }\n   */\n  CAMERA_MODIFIED = 'CORNERSTONE_CAMERA_MODIFIED',\n  /**\n   * Triggers on the HTML element when the viewport camera resets\n   *\n   * Make use of {@link EventTypes.CameraResetEvent | CameraReset Event Type } for typing your event listeners for CAMERA_RESET event,\n   * and see what event detail is included in {@link EventTypes.CameraResetEventDetail | CameraReset Event Detail }\n   */\n  CAMERA_RESET = 'CORNERSTONE_CAMERA_RESET',\n  /**\n   * Triggers on the HTML element when viewport modifies its VOI\n   *\n   * Make use of {@link EventTypes.VoiModifiedEvent | VoiModified Event Type } for typing your event listeners for VOI_MODIFIED event,\n   * and see what event detail is included in {@link EventTypes.VoiModifiedEventDetail | VoiModified Event Detail }\n   */\n  VOI_MODIFIED = 'CORNERSTONE_VOI_MODIFIED',\n  /**\n   * Triggers on the HTML element when viewport modifies its display area\n   *\n   * Make use of {@link EventTypes.DisplayAreaModifiedEvent | DisplayAreaModified Event Type } for typing your event listeners for DISPLAY_AREA_MODIFIED event,\n   * and see what event detail is included in {@link EventTypes.DisplayAreaModifiedEventDetail | DisplayAreaModified Event Detail }\n   */\n  DISPLAY_AREA_MODIFIED = 'CORNERSTONE_DISPLAY_AREA_MODIFIED',\n  /**\n   * Triggers on the eventTarget when the element is disabled\n   *\n   * Make use of {@link EventTypes.ElementDisabledEvent | ElementDisabled Event Type } for typing your event listeners for ELEMENT_DISABLED event,\n   * and see what event detail is included in {@link EventTypes.ElementDisabledEventDetail | ElementDisabled Event Detail }\n   */\n  ELEMENT_DISABLED = 'CORNERSTONE_ELEMENT_DISABLED',\n  /**\n   * Triggers on the eventTarget when the element is enabled\n   *\n   * Make use of {@link EventTypes.ElementEnabledEvent | ElementEnabled Event Type } for typing your event listeners for ELEMENT_ENABLED event,\n   * and see what event detail is included in {@link EventTypes.ElementEnabledEventDetail | ElementEnabled Event Detail }\n   */\n  ELEMENT_ENABLED = 'CORNERSTONE_ELEMENT_ENABLED',\n  /**\n   * Triggers on the element when the image in the element has been rendered\n   *\n   * Make use of {@link EventTypes.ImageRenderedEvent | ImageRendered Event Type } for typing your event listeners for IMAGE_RENDERED event,\n   * and see what event detail is included in {@link EventTypes.ImageRenderedEventDetail | ImageRendered Event Detail }\n   */\n  IMAGE_RENDERED = 'CORNERSTONE_IMAGE_RENDERED',\n  /**\n   * Triggers on the eventTarget when the image volume data is modified. This happens\n   * in the streamingImageLoader when each frame is loaded and inserted into a volume.\n   *\n   *\n   * Make use of {@link EventTypes.ImageVolumeModifiedEvent | ImageVolumeModified Event Type } for typing your event listeners for IMAGE_VOLUME_MODIFIED event,\n   * and see what event detail is included in {@link EventTypes.ImageVolumeModifiedEventDetail | ImageVolumeModified Event Detail }\n   */\n  IMAGE_VOLUME_MODIFIED = 'CORNERSTONE_IMAGE_VOLUME_MODIFIED',\n  /**\n   * Triggers on the eventTarget when the image volume loading is completed and all\n   * frames are loaded and inserted into a volume.\n   *\n   * Make use of {@link EventTypes.ImageVolumeLoadingCompletedEvent | ImageVolumeLoadingCompleted Event Type } for typing your\n   * event listeners for IMAGE_VOLUME_LOADING_COMPLETED event, and see what event detail is included\n   * in {@link EventTypes.ImageVolumeLoadingCompletedEventDetail | ImageVolumeLoadingCompleted Event Detail }\n   */\n  IMAGE_VOLUME_LOADING_COMPLETED = 'CORNERSTONE_IMAGE_VOLUME_LOADING_COMPLETED',\n  /**\n   * Triggers on the eventTarget when the image has successfully loaded by imageLoaders\n   *\n   * Make use of {@link EventTypes.ImageLoadedEvent | ImageLoaded Event Type } for typing your event listeners for IMAGE_LOADED event,\n   * and see what event detail is included in {@link EventTypes.ImageLoadedEventDetail | ImageLoaded Event Detail }\n   */\n  IMAGE_LOADED = 'CORNERSTONE_IMAGE_LOADED',\n  /**\n   * Triggers on the eventTarget when the image has failed loading by imageLoaders\n   *\n   * Make use of {@link EventTypes.ImageLoadedFailedEvent | ImageLoadedFailed Event Type } for typing your event listeners for IMAGE_LOADED_FAILED event,\n   * and see what event detail is included in {@link EventTypes.ImageLoadedFailedEventDetail | ImageLoadedFailed Event Detail }\n   */\n  IMAGE_LOAD_FAILED = 'CORNERSTONE_IMAGE_LOAD_FAILED',\n  /**\n   * Triggers on element when a new voluem is set on the volume viewport\n   */\n  VOLUME_VIEWPORT_NEW_VOLUME = 'CORNERSTONE_VOLUME_VIEWPORT_NEW_VOLUME',\n\n  /**\n   * Triggers on the eventTarget when the volume has successfully loaded by volumeLoaders\n   *\n   * Make use of {@link EventTypes.VolumeLoadedEvent | VolumeLoaded Event Type } for typing your event listeners for VOLUME_LOADED event,\n   * and see what event detail is included in {@link EventTypes.VolumeLoadedEventDetail | VolumeLoaded Event Detail }\n   */\n  VOLUME_LOADED = 'CORNERSTONE_VOLUME_LOADED',\n  /**\n   * Triggers on the eventTarget when the image has failed loading by volumeLoaders\n   *\n   * Make use of {@link EventTypes.VolumeLoadedFailedEvent | VolumeLoadedFailed Event Type } for typing your event listeners for VOLUME_LOADED_FAILED event,\n   * and see what event detail is included in {@link EventTypes.VolumeLoadedFailedEventDetail | VolumeLoadedFailed Event Detail }\n   */\n  VOLUME_LOADED_FAILED = 'CORNERSTONE_VOLUME_LOADED_FAILED',\n  /**\n   * Triggers on the eventTarget when an image is added to the image cache\n   *\n   * Make use of {@link EventTypes.ImageCacheImageAddedEvent | ImageCacheAdded Event Type } for typing your event listeners for IMAGE_CACHE_ADDED event,\n   * and see what event detail is included in {@link EventTypes.ImageCacheImageAddedEventDetail | ImageCacheAdded Event Detail }\n   */\n  IMAGE_CACHE_IMAGE_ADDED = 'CORNERSTONE_IMAGE_CACHE_IMAGE_ADDED',\n  /**\n   * Triggers on the eventTarget when an image is removed from the image cache\n   *\n   * Make use of {@link EventTypes.ImageCacheImageRemovedEvent | ImageCacheRemoved Event Type } for typing your event listeners for IMAGE_CACHE_REMOVED event,\n   * and see what event detail is included in {@link EventTypes.ImageCacheImageRemovedEventDetail | ImageCacheRemoved Event Detail }\n   */\n  IMAGE_CACHE_IMAGE_REMOVED = 'CORNERSTONE_IMAGE_CACHE_IMAGE_REMOVED',\n  /**\n   * Triggers on the eventTarget when a volume is added to the volume cache\n   *\n   * Make use of {@link EventTypes.VolumeCacheVolumeAddedEvent | VolumeCacheAdded Event Type } for typing your event listeners for VOLUME_CACHE_ADDED event,\n   * and see what event detail is included in {@link EventTypes.VolumeCacheVolumeAddedEventDetail | VolumeCacheAdded Event Detail }\n   */\n  VOLUME_CACHE_VOLUME_ADDED = 'CORNERSTONE_VOLUME_CACHE_VOLUME_ADDED',\n  /**\n   * Triggers on the eventTarget when a volume is removed from the volume cache\n   *\n   * Make use of {@link EventTypes.VolumeCacheVolumeRemovedEvent | VolumeCacheRemoved Event Type } for typing your event listeners for VOLUME_CACHE_REMOVED event,\n   * and see what event detail is included in {@link EventTypes.VolumeCacheVolumeRemovedEventDetail | VolumeCacheRemoved Event Detail }\n   */\n  VOLUME_CACHE_VOLUME_REMOVED = 'CORNERSTONE_VOLUME_CACHE_VOLUME_REMOVED',\n  /**\n   * Triggers on the element when a new image is set on the stackViewport\n   *\n   * Make use of {@link EventTypes.StackNewImageEvent | StackNewImage Event Type } for typing your event listeners for STACK_NEW_IMAGE event,\n   * and see what event detail is included in {@link EventTypes.StackNewImageEventDetail | StackNewImage Event Detail }\n   */\n  STACK_NEW_IMAGE = 'CORNERSTONE_STACK_NEW_IMAGE',\n\n  /**\n   * Triggers on the element when a new image is set on the volumeViewport, this can be due to scrolling or other\n   * tools that change the camera position or focal point.\n   *\n   * Make use of {@link EventTypes.VolumeNewImageEvent | VolumeNewImage Event Type } for typing your event listeners for VOLUME_NEW_IMAGE event,\n   * and see what event detail is included in {@link EventTypes.VolumeNewImageEventDetail | VolumeNewImage Event Detail }\n   */\n  VOLUME_NEW_IMAGE = 'CORNERSTONE_VOLUME_NEW_IMAGE',\n\n  /**\n   * Triggers on the element when a new image is about to be set on the stackViewport, pre display\n   *\n   * Make use of {@link EventTypes.PreStackNewImageEvent | PreStackNewImage Event Type } for typing your event listeners for PRE_STACK_NEW_IMAGE event,\n   * and see what event detail is included in {@link EventTypes.PreStackNewImageEventDetail | PreStackNewImage Event Detail }\n   */\n  PRE_STACK_NEW_IMAGE = 'CORNERSTONE_PRE_STACK_NEW_IMAGE',\n  /**\n   * Triggers on the element when the viewport's image has calibrated its pixel spacings\n   *\n   * Make use of {@link EventTypes.ImageSpacingCalibratedEvent | ImageSpacingCalibrated Event Type } for typing your event listeners for IMAGE_SPACING_CALIBRATED event,\n   * and see what event detail is included in {@link EventTypes.ImageSpacingCalibratedEventDetail | ImageSpacingCalibrated Event Detail }\n   */\n  IMAGE_SPACING_CALIBRATED = 'CORNERSTONE_IMAGE_SPACING_CALIBRATED',\n  /**\n   * Triggers on the eventTarget when there is a progress in the image load process. Note: this event\n   * is being used in the dicom-image-loader repository. See {@link https://github.com/cornerstonejs/cornerstoneDICOMImageLoader/blob/master/src/imageLoader/internal/xhrRequest.js | here}\n   *\n   * Make use of {@link EventTypes.ImageLoadProgress | ImageLoadProgress Event Type } for typing your event listeners for IMAGE_LOAD_PROGRESS event,\n   * and see what event detail is included in {@link EventTypes.ImageLoadProgressEventDetail | ImageLoadProgress Event Detail }\n   */\n  IMAGE_LOAD_PROGRESS = 'CORNERSTONE_IMAGE_LOAD_PROGRESS',\n\n  /**\n   * Triggers on the event target when a new stack is set on its stack viewport.\n   * Make use of {@link EventTypes.StackViewportNewStack | StackViewportNewStack Event Type } for typing your event listeners for STACK_VIEWPORT_NEW_STACK event,\n   * and see what event detail is included in {@link EventTypes.StackViewportNewStackEventDetail | StackViewportNewStack Event Detail }\n   */\n  STACK_VIEWPORT_NEW_STACK = 'CORNERSTONE_STACK_VIEWPORT_NEW_STACK',\n\n  /**\n   * Triggers on the element when the underlying StackViewport is scrolled.\n   * Make use of {@link EventTypes.StackViewportScroll | StackViewportScroll Event Type } for typing your event listeners for STACK_VIEWPORT_SCROLL event,\n   * and see what event detail is included in {@link EventTypes.StackViewportScrollEventDetail | StackViewportScroll Event Detail }\n   */\n  STACK_VIEWPORT_SCROLL = 'CORNERSTONE_STACK_VIEWPORT_SCROLL',\n\n  /**\n   * Triggers on the eventTarget when a new geometry is added to the geometry cache\n   */\n  GEOMETRY_CACHE_GEOMETRY_ADDED = 'CORNERSTONE_GEOMETRY_CACHE_GEOMETRY_ADDED',\n\n  /**\n   * Triggers when the scroll function is called with a delta that is out of bounds.\n   * This is usually for signaling that the user may want a different volume for partially loaded volumes which is meant to optimize memory.\n   */\n  VOLUME_SCROLL_OUT_OF_BOUNDS = 'CORNERSTONE_VOLUME_SCROLL_OUT_OF_BOUNDS',\n  // IMAGE_CACHE_FULL = 'CORNERSTONE_IMAGE_CACHE_FULL',\n  // PRE_RENDER = 'CORNERSTONE_PRE_RENDER',\n  // ELEMENT_RESIZED = 'CORNERSTONE_ELEMENT_RESIZED',\n}\n\nexport default Events;\n","/**\n * Request types for requesting images from the imageLoadPoolManager\n */\nenum RequestType {\n  /** Highest priority for loading*/\n  Interaction = 'interaction',\n  /** Second highest priority for loading*/\n  Thumbnail = 'thumbnail',\n  /** Lowest priority for loading*/\n  Prefetch = 'prefetch',\n}\n\nexport default RequestType;\n","/**\n * ViewportType enum for cornerstone-render which defines the type of viewport.\n * It can be either STACK, PERSPECTIVE, ORTHOGRAPHIC.\n */\nenum ViewportType {\n  /**\n   * - Suitable for rendering a stack of images, that might or might not belong to the same image.\n   * - Stack can include 2D images of different shapes, size and direction\n   */\n  STACK = 'stack',\n  /**\n   * - Suitable for rendering a volumetric data which is considered as one 3D image.\n   * - Having a VolumeViewport enables Multi-planar reformation or reconstruction (MPR) by design, in which you can visualize the volume from various different orientations without addition of performance costs.\n   */\n  ORTHOGRAPHIC = 'orthographic',\n  /** Perspective Viewport: Not Implemented yet */\n  PERSPECTIVE = 'perspective',\n  VOLUME_3D = 'volume3d',\n}\n\nexport default ViewportType;\n","/**\n * Interpolation types for image rendering\n */\nenum InterpolationType {\n  /** nearest neighbor interpolation */\n  NEAREST,\n  /** linear interpolation - Default */\n  LINEAR,\n  /** */\n  FAST_LINEAR,\n}\n\nexport default InterpolationType;\n","import vtkConstants from '@kitware/vtk.js/Rendering/Core/VolumeMapper/Constants';\n\nconst { BlendMode } = vtkConstants;\n\n/**\n * Enums for blendModes for viewport images based on vtk.js\n *\n * It should be noted that if crosshairs are enabled and can modify the slab thickness,\n * then it will not show any difference unless MAXIMUM_INTENSITY_BLEND is set on the viewport\n * as the blend.\n */\nenum BlendModes {\n  /** composite blending - suitable for compositing multiple images */\n  COMPOSITE = BlendMode.COMPOSITE_BLEND,\n  /** maximum intensity projection */\n  MAXIMUM_INTENSITY_BLEND = BlendMode.MAXIMUM_INTENSITY_BLEND,\n  /** minimum intensity projection */\n  MINIMUM_INTENSITY_BLEND = BlendMode.MINIMUM_INTENSITY_BLEND,\n  /** average intensity projection */\n  AVERAGE_INTENSITY_BLEND = BlendMode.AVERAGE_INTENSITY_BLEND,\n}\n\nexport default BlendModes;\n","enum OrientationAxis {\n  AXIAL = 'axial',\n  CORONAL = 'coronal',\n  SAGITTAL = 'sagittal',\n  ACQUISITION = 'acquisition',\n}\n\nexport default OrientationAxis;\n","/**\n * SharedArrayBuffer Modes\n */\nenum SharedArrayBufferModes {\n  TRUE = 'true',\n  FALSE = 'false',\n  /** use SharedArrayBuffer if avalaible  */\n  AUTO = 'auto',\n}\n\nexport default SharedArrayBufferModes;\n","enum GeometryType {\n  CONTOUR = 'contour',\n}\n\nexport default GeometryType;\n","enum ContourType {\n  CLOSED_PLANAR = 'CLOSED_PLANAR',\n  OPEN_PLANAR = 'OPEN_PLANAR',\n}\n\nexport default ContourType;\n","/**\n * Interpolation types for image rendering\n */\nenum VOILUTFunctionType {\n  LINEAR = 'LINEAR',\n  SAMPLED_SIGMOID = 'SIGMOID', // SIGMOID is sampled in 1024 even steps so we call it SAMPLED_SIGMOID\n  // EXACT_LINEAR = 'EXACT_LINEAR', TODO: Add EXACT_LINEAR option from DICOM NEMA\n}\n\nexport default VOILUTFunctionType;\n","/**\n * DynamicOperatorType enum for cornerstone-render which defines the operator to use for generateImageFromTimeData.\n * It can be either SUM, AVERAGE or SUBTRACT.\n */\nenum DynamicOperatorType {\n  /** For summing the time frames. */\n  SUM = 'SUM',\n  /** For averaging the time frames. */\n  AVERAGE = 'AVERAGE',\n  /** For subtracting two time frames */\n  SUBTRACT = 'SUBTRACT',\n}\n\nexport default DynamicOperatorType;\n","/**\n * Defines the calibration types available.  These define how the units\n * for measurements are specified.\n */\nexport enum CalibrationTypes {\n  /**\n   * Not applicable means the units are directly defind by the underlying\n   * hardware, such as CT and MR volumetric displays, so no special handling\n   * or notification is required.\n   */\n  NOT_APPLICABLE = '',\n  /**\n   * ERMF is estimated radiographic magnification factor.  This defines how\n   * much the image is magnified at the detector as opposed to the location in\n   * the body of interest.  This occurs because the radiation beam is expanding\n   * and effectively magnifies the image on the detector compared to where the\n   * point of interest in the body is.\n   * This suggests that measurements can be partially trusted, but the user\n   * still needs to be aware that different depths within the body have differing\n   * ERMF values, so precise measurements would still need to be manually calibrated.\n   */\n  ERMF = 'ERMF',\n  /**\n   * User calibration means that the user has provided a custom calibration\n   * specifying how large the image data is.  This type can occur on\n   * volumetric images, eg for scout images that might have invalid spacing\n   * tags.\n   */\n  USER = 'User',\n  /**\n   * A projection calibration means the raw detector size, without any\n   * ERMF applied, meaning that the size in the body cannot be trusted and\n   * that a calibration should be applied.\n   * This is different from Error in that there is simply no magnification\n   * factor applied as opposed to having multiple, inconsistent magnification\n   * factors.\n   */\n  PROJECTION = 'Proj',\n  /**\n   * A region calibration is used for other types of images, typically\n   * ultrasouunds where the distance in the image may mean something other than\n   * physical distance, such as mV or Hz or some other measurement values.\n   */\n  REGION = 'Region',\n  /**\n   * Error is used to define mismatches between various units, such as when\n   * there are two different ERMF values specified.  This is an indication to\n   * NOT trust the measurement values but to manually calibrate.\n   */\n  ERROR = 'Error',\n  /** Uncalibrated image */\n  UNCALIBRATED = 'Uncalibrated',\n}\n\nexport default CalibrationTypes;\n","enum ViewportStatus {\n  /** Initial state before any volumes or stacks are available*/\n  NO_DATA = 'noData',\n  /** Stack/volumes are available but are in progress */\n  LOADING = 'loading',\n  /** Ready to be rendered */\n  PRE_RENDER = 'preRender',\n  /** In the midst of a resize */\n  RESIZE = 'resize',\n  /** Rendered image data */\n  RENDERED = 'rendered',\n}\n\nexport default ViewportStatus;\n","import { CPUFallbackColormapsData } from '../types';\n\n// Colormaps\n//\n// Hot Iron, PET, Hot Metal Blue and PET 20 Step are color palettes\n// Defined by the DICOM standard\n// http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_B.html\n//\n// All Linear Segmented Colormaps were copied from matplotlib\n// https://github.com/stefanv/matplotlib/blob/master/lib/matplotlib/_cm.py\n\nconst colormapsData: CPUFallbackColormapsData = {\n  hotIron: {\n    name: 'Hot Iron',\n    numOfColors: 256,\n    colors: [\n      [0, 0, 0, 255],\n      [2, 0, 0, 255],\n      [4, 0, 0, 255],\n      [6, 0, 0, 255],\n      [8, 0, 0, 255],\n      [10, 0, 0, 255],\n      [12, 0, 0, 255],\n      [14, 0, 0, 255],\n      [16, 0, 0, 255],\n      [18, 0, 0, 255],\n      [20, 0, 0, 255],\n      [22, 0, 0, 255],\n      [24, 0, 0, 255],\n      [26, 0, 0, 255],\n      [28, 0, 0, 255],\n      [30, 0, 0, 255],\n      [32, 0, 0, 255],\n      [34, 0, 0, 255],\n      [36, 0, 0, 255],\n      [38, 0, 0, 255],\n      [40, 0, 0, 255],\n      [42, 0, 0, 255],\n      [44, 0, 0, 255],\n      [46, 0, 0, 255],\n      [48, 0, 0, 255],\n      [50, 0, 0, 255],\n      [52, 0, 0, 255],\n      [54, 0, 0, 255],\n      [56, 0, 0, 255],\n      [58, 0, 0, 255],\n      [60, 0, 0, 255],\n      [62, 0, 0, 255],\n      [64, 0, 0, 255],\n      [66, 0, 0, 255],\n      [68, 0, 0, 255],\n      [70, 0, 0, 255],\n      [72, 0, 0, 255],\n      [74, 0, 0, 255],\n      [76, 0, 0, 255],\n      [78, 0, 0, 255],\n      [80, 0, 0, 255],\n      [82, 0, 0, 255],\n      [84, 0, 0, 255],\n      [86, 0, 0, 255],\n      [88, 0, 0, 255],\n      [90, 0, 0, 255],\n      [92, 0, 0, 255],\n      [94, 0, 0, 255],\n      [96, 0, 0, 255],\n      [98, 0, 0, 255],\n      [100, 0, 0, 255],\n      [102, 0, 0, 255],\n      [104, 0, 0, 255],\n      [106, 0, 0, 255],\n      [108, 0, 0, 255],\n      [110, 0, 0, 255],\n      [112, 0, 0, 255],\n      [114, 0, 0, 255],\n      [116, 0, 0, 255],\n      [118, 0, 0, 255],\n      [120, 0, 0, 255],\n      [122, 0, 0, 255],\n      [124, 0, 0, 255],\n      [126, 0, 0, 255],\n      [128, 0, 0, 255],\n      [130, 0, 0, 255],\n      [132, 0, 0, 255],\n      [134, 0, 0, 255],\n      [136, 0, 0, 255],\n      [138, 0, 0, 255],\n      [140, 0, 0, 255],\n      [142, 0, 0, 255],\n      [144, 0, 0, 255],\n      [146, 0, 0, 255],\n      [148, 0, 0, 255],\n      [150, 0, 0, 255],\n      [152, 0, 0, 255],\n      [154, 0, 0, 255],\n      [156, 0, 0, 255],\n      [158, 0, 0, 255],\n      [160, 0, 0, 255],\n      [162, 0, 0, 255],\n      [164, 0, 0, 255],\n      [166, 0, 0, 255],\n      [168, 0, 0, 255],\n      [170, 0, 0, 255],\n      [172, 0, 0, 255],\n      [174, 0, 0, 255],\n      [176, 0, 0, 255],\n      [178, 0, 0, 255],\n      [180, 0, 0, 255],\n      [182, 0, 0, 255],\n      [184, 0, 0, 255],\n      [186, 0, 0, 255],\n      [188, 0, 0, 255],\n      [190, 0, 0, 255],\n      [192, 0, 0, 255],\n      [194, 0, 0, 255],\n      [196, 0, 0, 255],\n      [198, 0, 0, 255],\n      [200, 0, 0, 255],\n      [202, 0, 0, 255],\n      [204, 0, 0, 255],\n      [206, 0, 0, 255],\n      [208, 0, 0, 255],\n      [210, 0, 0, 255],\n      [212, 0, 0, 255],\n      [214, 0, 0, 255],\n      [216, 0, 0, 255],\n      [218, 0, 0, 255],\n      [220, 0, 0, 255],\n      [222, 0, 0, 255],\n      [224, 0, 0, 255],\n      [226, 0, 0, 255],\n      [228, 0, 0, 255],\n      [230, 0, 0, 255],\n      [232, 0, 0, 255],\n      [234, 0, 0, 255],\n      [236, 0, 0, 255],\n      [238, 0, 0, 255],\n      [240, 0, 0, 255],\n      [242, 0, 0, 255],\n      [244, 0, 0, 255],\n      [246, 0, 0, 255],\n      [248, 0, 0, 255],\n      [250, 0, 0, 255],\n      [252, 0, 0, 255],\n      [254, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 2, 0, 255],\n      [255, 4, 0, 255],\n      [255, 6, 0, 255],\n      [255, 8, 0, 255],\n      [255, 10, 0, 255],\n      [255, 12, 0, 255],\n      [255, 14, 0, 255],\n      [255, 16, 0, 255],\n      [255, 18, 0, 255],\n      [255, 20, 0, 255],\n      [255, 22, 0, 255],\n      [255, 24, 0, 255],\n      [255, 26, 0, 255],\n      [255, 28, 0, 255],\n      [255, 30, 0, 255],\n      [255, 32, 0, 255],\n      [255, 34, 0, 255],\n      [255, 36, 0, 255],\n      [255, 38, 0, 255],\n      [255, 40, 0, 255],\n      [255, 42, 0, 255],\n      [255, 44, 0, 255],\n      [255, 46, 0, 255],\n      [255, 48, 0, 255],\n      [255, 50, 0, 255],\n      [255, 52, 0, 255],\n      [255, 54, 0, 255],\n      [255, 56, 0, 255],\n      [255, 58, 0, 255],\n      [255, 60, 0, 255],\n      [255, 62, 0, 255],\n      [255, 64, 0, 255],\n      [255, 66, 0, 255],\n      [255, 68, 0, 255],\n      [255, 70, 0, 255],\n      [255, 72, 0, 255],\n      [255, 74, 0, 255],\n      [255, 76, 0, 255],\n      [255, 78, 0, 255],\n      [255, 80, 0, 255],\n      [255, 82, 0, 255],\n      [255, 84, 0, 255],\n      [255, 86, 0, 255],\n      [255, 88, 0, 255],\n      [255, 90, 0, 255],\n      [255, 92, 0, 255],\n      [255, 94, 0, 255],\n      [255, 96, 0, 255],\n      [255, 98, 0, 255],\n      [255, 100, 0, 255],\n      [255, 102, 0, 255],\n      [255, 104, 0, 255],\n      [255, 106, 0, 255],\n      [255, 108, 0, 255],\n      [255, 110, 0, 255],\n      [255, 112, 0, 255],\n      [255, 114, 0, 255],\n      [255, 116, 0, 255],\n      [255, 118, 0, 255],\n      [255, 120, 0, 255],\n      [255, 122, 0, 255],\n      [255, 124, 0, 255],\n      [255, 126, 0, 255],\n      [255, 128, 4, 255],\n      [255, 130, 8, 255],\n      [255, 132, 12, 255],\n      [255, 134, 16, 255],\n      [255, 136, 20, 255],\n      [255, 138, 24, 255],\n      [255, 140, 28, 255],\n      [255, 142, 32, 255],\n      [255, 144, 36, 255],\n      [255, 146, 40, 255],\n      [255, 148, 44, 255],\n      [255, 150, 48, 255],\n      [255, 152, 52, 255],\n      [255, 154, 56, 255],\n      [255, 156, 60, 255],\n      [255, 158, 64, 255],\n      [255, 160, 68, 255],\n      [255, 162, 72, 255],\n      [255, 164, 76, 255],\n      [255, 166, 80, 255],\n      [255, 168, 84, 255],\n      [255, 170, 88, 255],\n      [255, 172, 92, 255],\n      [255, 174, 96, 255],\n      [255, 176, 100, 255],\n      [255, 178, 104, 255],\n      [255, 180, 108, 255],\n      [255, 182, 112, 255],\n      [255, 184, 116, 255],\n      [255, 186, 120, 255],\n      [255, 188, 124, 255],\n      [255, 190, 128, 255],\n      [255, 192, 132, 255],\n      [255, 194, 136, 255],\n      [255, 196, 140, 255],\n      [255, 198, 144, 255],\n      [255, 200, 148, 255],\n      [255, 202, 152, 255],\n      [255, 204, 156, 255],\n      [255, 206, 160, 255],\n      [255, 208, 164, 255],\n      [255, 210, 168, 255],\n      [255, 212, 172, 255],\n      [255, 214, 176, 255],\n      [255, 216, 180, 255],\n      [255, 218, 184, 255],\n      [255, 220, 188, 255],\n      [255, 222, 192, 255],\n      [255, 224, 196, 255],\n      [255, 226, 200, 255],\n      [255, 228, 204, 255],\n      [255, 230, 208, 255],\n      [255, 232, 212, 255],\n      [255, 234, 216, 255],\n      [255, 236, 220, 255],\n      [255, 238, 224, 255],\n      [255, 240, 228, 255],\n      [255, 242, 232, 255],\n      [255, 244, 236, 255],\n      [255, 246, 240, 255],\n      [255, 248, 244, 255],\n      [255, 250, 248, 255],\n      [255, 252, 252, 255],\n      [255, 255, 255, 255],\n    ],\n  },\n  pet: {\n    name: 'PET',\n    numColors: 256,\n    colors: [\n      [0, 0, 0, 255],\n      [0, 2, 1, 255],\n      [0, 4, 3, 255],\n      [0, 6, 5, 255],\n      [0, 8, 7, 255],\n      [0, 10, 9, 255],\n      [0, 12, 11, 255],\n      [0, 14, 13, 255],\n      [0, 16, 15, 255],\n      [0, 18, 17, 255],\n      [0, 20, 19, 255],\n      [0, 22, 21, 255],\n      [0, 24, 23, 255],\n      [0, 26, 25, 255],\n      [0, 28, 27, 255],\n      [0, 30, 29, 255],\n      [0, 32, 31, 255],\n      [0, 34, 33, 255],\n      [0, 36, 35, 255],\n      [0, 38, 37, 255],\n      [0, 40, 39, 255],\n      [0, 42, 41, 255],\n      [0, 44, 43, 255],\n      [0, 46, 45, 255],\n      [0, 48, 47, 255],\n      [0, 50, 49, 255],\n      [0, 52, 51, 255],\n      [0, 54, 53, 255],\n      [0, 56, 55, 255],\n      [0, 58, 57, 255],\n      [0, 60, 59, 255],\n      [0, 62, 61, 255],\n      [0, 65, 63, 255],\n      [0, 67, 65, 255],\n      [0, 69, 67, 255],\n      [0, 71, 69, 255],\n      [0, 73, 71, 255],\n      [0, 75, 73, 255],\n      [0, 77, 75, 255],\n      [0, 79, 77, 255],\n      [0, 81, 79, 255],\n      [0, 83, 81, 255],\n      [0, 85, 83, 255],\n      [0, 87, 85, 255],\n      [0, 89, 87, 255],\n      [0, 91, 89, 255],\n      [0, 93, 91, 255],\n      [0, 95, 93, 255],\n      [0, 97, 95, 255],\n      [0, 99, 97, 255],\n      [0, 101, 99, 255],\n      [0, 103, 101, 255],\n      [0, 105, 103, 255],\n      [0, 107, 105, 255],\n      [0, 109, 107, 255],\n      [0, 111, 109, 255],\n      [0, 113, 111, 255],\n      [0, 115, 113, 255],\n      [0, 117, 115, 255],\n      [0, 119, 117, 255],\n      [0, 121, 119, 255],\n      [0, 123, 121, 255],\n      [0, 125, 123, 255],\n      [0, 128, 125, 255],\n      [1, 126, 127, 255],\n      [3, 124, 129, 255],\n      [5, 122, 131, 255],\n      [7, 120, 133, 255],\n      [9, 118, 135, 255],\n      [11, 116, 137, 255],\n      [13, 114, 139, 255],\n      [15, 112, 141, 255],\n      [17, 110, 143, 255],\n      [19, 108, 145, 255],\n      [21, 106, 147, 255],\n      [23, 104, 149, 255],\n      [25, 102, 151, 255],\n      [27, 100, 153, 255],\n      [29, 98, 155, 255],\n      [31, 96, 157, 255],\n      [33, 94, 159, 255],\n      [35, 92, 161, 255],\n      [37, 90, 163, 255],\n      [39, 88, 165, 255],\n      [41, 86, 167, 255],\n      [43, 84, 169, 255],\n      [45, 82, 171, 255],\n      [47, 80, 173, 255],\n      [49, 78, 175, 255],\n      [51, 76, 177, 255],\n      [53, 74, 179, 255],\n      [55, 72, 181, 255],\n      [57, 70, 183, 255],\n      [59, 68, 185, 255],\n      [61, 66, 187, 255],\n      [63, 64, 189, 255],\n      [65, 63, 191, 255],\n      [67, 61, 193, 255],\n      [69, 59, 195, 255],\n      [71, 57, 197, 255],\n      [73, 55, 199, 255],\n      [75, 53, 201, 255],\n      [77, 51, 203, 255],\n      [79, 49, 205, 255],\n      [81, 47, 207, 255],\n      [83, 45, 209, 255],\n      [85, 43, 211, 255],\n      [86, 41, 213, 255],\n      [88, 39, 215, 255],\n      [90, 37, 217, 255],\n      [92, 35, 219, 255],\n      [94, 33, 221, 255],\n      [96, 31, 223, 255],\n      [98, 29, 225, 255],\n      [100, 27, 227, 255],\n      [102, 25, 229, 255],\n      [104, 23, 231, 255],\n      [106, 21, 233, 255],\n      [108, 19, 235, 255],\n      [110, 17, 237, 255],\n      [112, 15, 239, 255],\n      [114, 13, 241, 255],\n      [116, 11, 243, 255],\n      [118, 9, 245, 255],\n      [120, 7, 247, 255],\n      [122, 5, 249, 255],\n      [124, 3, 251, 255],\n      [126, 1, 253, 255],\n      [128, 0, 255, 255],\n      [130, 2, 252, 255],\n      [132, 4, 248, 255],\n      [134, 6, 244, 255],\n      [136, 8, 240, 255],\n      [138, 10, 236, 255],\n      [140, 12, 232, 255],\n      [142, 14, 228, 255],\n      [144, 16, 224, 255],\n      [146, 18, 220, 255],\n      [148, 20, 216, 255],\n      [150, 22, 212, 255],\n      [152, 24, 208, 255],\n      [154, 26, 204, 255],\n      [156, 28, 200, 255],\n      [158, 30, 196, 255],\n      [160, 32, 192, 255],\n      [162, 34, 188, 255],\n      [164, 36, 184, 255],\n      [166, 38, 180, 255],\n      [168, 40, 176, 255],\n      [170, 42, 172, 255],\n      [171, 44, 168, 255],\n      [173, 46, 164, 255],\n      [175, 48, 160, 255],\n      [177, 50, 156, 255],\n      [179, 52, 152, 255],\n      [181, 54, 148, 255],\n      [183, 56, 144, 255],\n      [185, 58, 140, 255],\n      [187, 60, 136, 255],\n      [189, 62, 132, 255],\n      [191, 64, 128, 255],\n      [193, 66, 124, 255],\n      [195, 68, 120, 255],\n      [197, 70, 116, 255],\n      [199, 72, 112, 255],\n      [201, 74, 108, 255],\n      [203, 76, 104, 255],\n      [205, 78, 100, 255],\n      [207, 80, 96, 255],\n      [209, 82, 92, 255],\n      [211, 84, 88, 255],\n      [213, 86, 84, 255],\n      [215, 88, 80, 255],\n      [217, 90, 76, 255],\n      [219, 92, 72, 255],\n      [221, 94, 68, 255],\n      [223, 96, 64, 255],\n      [225, 98, 60, 255],\n      [227, 100, 56, 255],\n      [229, 102, 52, 255],\n      [231, 104, 48, 255],\n      [233, 106, 44, 255],\n      [235, 108, 40, 255],\n      [237, 110, 36, 255],\n      [239, 112, 32, 255],\n      [241, 114, 28, 255],\n      [243, 116, 24, 255],\n      [245, 118, 20, 255],\n      [247, 120, 16, 255],\n      [249, 122, 12, 255],\n      [251, 124, 8, 255],\n      [253, 126, 4, 255],\n      [255, 128, 0, 255],\n      [255, 130, 4, 255],\n      [255, 132, 8, 255],\n      [255, 134, 12, 255],\n      [255, 136, 16, 255],\n      [255, 138, 20, 255],\n      [255, 140, 24, 255],\n      [255, 142, 28, 255],\n      [255, 144, 32, 255],\n      [255, 146, 36, 255],\n      [255, 148, 40, 255],\n      [255, 150, 44, 255],\n      [255, 152, 48, 255],\n      [255, 154, 52, 255],\n      [255, 156, 56, 255],\n      [255, 158, 60, 255],\n      [255, 160, 64, 255],\n      [255, 162, 68, 255],\n      [255, 164, 72, 255],\n      [255, 166, 76, 255],\n      [255, 168, 80, 255],\n      [255, 170, 85, 255],\n      [255, 172, 89, 255],\n      [255, 174, 93, 255],\n      [255, 176, 97, 255],\n      [255, 178, 101, 255],\n      [255, 180, 105, 255],\n      [255, 182, 109, 255],\n      [255, 184, 113, 255],\n      [255, 186, 117, 255],\n      [255, 188, 121, 255],\n      [255, 190, 125, 255],\n      [255, 192, 129, 255],\n      [255, 194, 133, 255],\n      [255, 196, 137, 255],\n      [255, 198, 141, 255],\n      [255, 200, 145, 255],\n      [255, 202, 149, 255],\n      [255, 204, 153, 255],\n      [255, 206, 157, 255],\n      [255, 208, 161, 255],\n      [255, 210, 165, 255],\n      [255, 212, 170, 255],\n      [255, 214, 174, 255],\n      [255, 216, 178, 255],\n      [255, 218, 182, 255],\n      [255, 220, 186, 255],\n      [255, 222, 190, 255],\n      [255, 224, 194, 255],\n      [255, 226, 198, 255],\n      [255, 228, 202, 255],\n      [255, 230, 206, 255],\n      [255, 232, 210, 255],\n      [255, 234, 214, 255],\n      [255, 236, 218, 255],\n      [255, 238, 222, 255],\n      [255, 240, 226, 255],\n      [255, 242, 230, 255],\n      [255, 244, 234, 255],\n      [255, 246, 238, 255],\n      [255, 248, 242, 255],\n      [255, 250, 246, 255],\n      [255, 252, 250, 255],\n      [255, 255, 255, 255],\n    ],\n  },\n  hotMetalBlue: {\n    name: 'Hot Metal Blue',\n    numColors: 256,\n    colors: [\n      [0, 0, 0, 255],\n      [0, 0, 2, 255],\n      [0, 0, 4, 255],\n      [0, 0, 6, 255],\n      [0, 0, 8, 255],\n      [0, 0, 10, 255],\n      [0, 0, 12, 255],\n      [0, 0, 14, 255],\n      [0, 0, 16, 255],\n      [0, 0, 17, 255],\n      [0, 0, 19, 255],\n      [0, 0, 21, 255],\n      [0, 0, 23, 255],\n      [0, 0, 25, 255],\n      [0, 0, 27, 255],\n      [0, 0, 29, 255],\n      [0, 0, 31, 255],\n      [0, 0, 33, 255],\n      [0, 0, 35, 255],\n      [0, 0, 37, 255],\n      [0, 0, 39, 255],\n      [0, 0, 41, 255],\n      [0, 0, 43, 255],\n      [0, 0, 45, 255],\n      [0, 0, 47, 255],\n      [0, 0, 49, 255],\n      [0, 0, 51, 255],\n      [0, 0, 53, 255],\n      [0, 0, 55, 255],\n      [0, 0, 57, 255],\n      [0, 0, 59, 255],\n      [0, 0, 61, 255],\n      [0, 0, 63, 255],\n      [0, 0, 65, 255],\n      [0, 0, 67, 255],\n      [0, 0, 69, 255],\n      [0, 0, 71, 255],\n      [0, 0, 73, 255],\n      [0, 0, 75, 255],\n      [0, 0, 77, 255],\n      [0, 0, 79, 255],\n      [0, 0, 81, 255],\n      [0, 0, 83, 255],\n      [0, 0, 84, 255],\n      [0, 0, 86, 255],\n      [0, 0, 88, 255],\n      [0, 0, 90, 255],\n      [0, 0, 92, 255],\n      [0, 0, 94, 255],\n      [0, 0, 96, 255],\n      [0, 0, 98, 255],\n      [0, 0, 100, 255],\n      [0, 0, 102, 255],\n      [0, 0, 104, 255],\n      [0, 0, 106, 255],\n      [0, 0, 108, 255],\n      [0, 0, 110, 255],\n      [0, 0, 112, 255],\n      [0, 0, 114, 255],\n      [0, 0, 116, 255],\n      [0, 0, 117, 255],\n      [0, 0, 119, 255],\n      [0, 0, 121, 255],\n      [0, 0, 123, 255],\n      [0, 0, 125, 255],\n      [0, 0, 127, 255],\n      [0, 0, 129, 255],\n      [0, 0, 131, 255],\n      [0, 0, 133, 255],\n      [0, 0, 135, 255],\n      [0, 0, 137, 255],\n      [0, 0, 139, 255],\n      [0, 0, 141, 255],\n      [0, 0, 143, 255],\n      [0, 0, 145, 255],\n      [0, 0, 147, 255],\n      [0, 0, 149, 255],\n      [0, 0, 151, 255],\n      [0, 0, 153, 255],\n      [0, 0, 155, 255],\n      [0, 0, 157, 255],\n      [0, 0, 159, 255],\n      [0, 0, 161, 255],\n      [0, 0, 163, 255],\n      [0, 0, 165, 255],\n      [0, 0, 167, 255],\n      [3, 0, 169, 255],\n      [6, 0, 171, 255],\n      [9, 0, 173, 255],\n      [12, 0, 175, 255],\n      [15, 0, 177, 255],\n      [18, 0, 179, 255],\n      [21, 0, 181, 255],\n      [24, 0, 183, 255],\n      [26, 0, 184, 255],\n      [29, 0, 186, 255],\n      [32, 0, 188, 255],\n      [35, 0, 190, 255],\n      [38, 0, 192, 255],\n      [41, 0, 194, 255],\n      [44, 0, 196, 255],\n      [47, 0, 198, 255],\n      [50, 0, 200, 255],\n      [52, 0, 197, 255],\n      [55, 0, 194, 255],\n      [57, 0, 191, 255],\n      [59, 0, 188, 255],\n      [62, 0, 185, 255],\n      [64, 0, 182, 255],\n      [66, 0, 179, 255],\n      [69, 0, 176, 255],\n      [71, 0, 174, 255],\n      [74, 0, 171, 255],\n      [76, 0, 168, 255],\n      [78, 0, 165, 255],\n      [81, 0, 162, 255],\n      [83, 0, 159, 255],\n      [85, 0, 156, 255],\n      [88, 0, 153, 255],\n      [90, 0, 150, 255],\n      [93, 2, 144, 255],\n      [96, 4, 138, 255],\n      [99, 6, 132, 255],\n      [102, 8, 126, 255],\n      [105, 9, 121, 255],\n      [108, 11, 115, 255],\n      [111, 13, 109, 255],\n      [114, 15, 103, 255],\n      [116, 17, 97, 255],\n      [119, 19, 91, 255],\n      [122, 21, 85, 255],\n      [125, 23, 79, 255],\n      [128, 24, 74, 255],\n      [131, 26, 68, 255],\n      [134, 28, 62, 255],\n      [137, 30, 56, 255],\n      [140, 32, 50, 255],\n      [143, 34, 47, 255],\n      [146, 36, 44, 255],\n      [149, 38, 41, 255],\n      [152, 40, 38, 255],\n      [155, 41, 35, 255],\n      [158, 43, 32, 255],\n      [161, 45, 29, 255],\n      [164, 47, 26, 255],\n      [166, 49, 24, 255],\n      [169, 51, 21, 255],\n      [172, 53, 18, 255],\n      [175, 55, 15, 255],\n      [178, 56, 12, 255],\n      [181, 58, 9, 255],\n      [184, 60, 6, 255],\n      [187, 62, 3, 255],\n      [190, 64, 0, 255],\n      [194, 66, 0, 255],\n      [198, 68, 0, 255],\n      [201, 70, 0, 255],\n      [205, 72, 0, 255],\n      [209, 73, 0, 255],\n      [213, 75, 0, 255],\n      [217, 77, 0, 255],\n      [221, 79, 0, 255],\n      [224, 81, 0, 255],\n      [228, 83, 0, 255],\n      [232, 85, 0, 255],\n      [236, 87, 0, 255],\n      [240, 88, 0, 255],\n      [244, 90, 0, 255],\n      [247, 92, 0, 255],\n      [251, 94, 0, 255],\n      [255, 96, 0, 255],\n      [255, 98, 3, 255],\n      [255, 100, 6, 255],\n      [255, 102, 9, 255],\n      [255, 104, 12, 255],\n      [255, 105, 15, 255],\n      [255, 107, 18, 255],\n      [255, 109, 21, 255],\n      [255, 111, 24, 255],\n      [255, 113, 26, 255],\n      [255, 115, 29, 255],\n      [255, 117, 32, 255],\n      [255, 119, 35, 255],\n      [255, 120, 38, 255],\n      [255, 122, 41, 255],\n      [255, 124, 44, 255],\n      [255, 126, 47, 255],\n      [255, 128, 50, 255],\n      [255, 130, 53, 255],\n      [255, 132, 56, 255],\n      [255, 134, 59, 255],\n      [255, 136, 62, 255],\n      [255, 137, 65, 255],\n      [255, 139, 68, 255],\n      [255, 141, 71, 255],\n      [255, 143, 74, 255],\n      [255, 145, 76, 255],\n      [255, 147, 79, 255],\n      [255, 149, 82, 255],\n      [255, 151, 85, 255],\n      [255, 152, 88, 255],\n      [255, 154, 91, 255],\n      [255, 156, 94, 255],\n      [255, 158, 97, 255],\n      [255, 160, 100, 255],\n      [255, 162, 103, 255],\n      [255, 164, 106, 255],\n      [255, 166, 109, 255],\n      [255, 168, 112, 255],\n      [255, 169, 115, 255],\n      [255, 171, 118, 255],\n      [255, 173, 121, 255],\n      [255, 175, 124, 255],\n      [255, 177, 126, 255],\n      [255, 179, 129, 255],\n      [255, 181, 132, 255],\n      [255, 183, 135, 255],\n      [255, 184, 138, 255],\n      [255, 186, 141, 255],\n      [255, 188, 144, 255],\n      [255, 190, 147, 255],\n      [255, 192, 150, 255],\n      [255, 194, 153, 255],\n      [255, 196, 156, 255],\n      [255, 198, 159, 255],\n      [255, 200, 162, 255],\n      [255, 201, 165, 255],\n      [255, 203, 168, 255],\n      [255, 205, 171, 255],\n      [255, 207, 174, 255],\n      [255, 209, 176, 255],\n      [255, 211, 179, 255],\n      [255, 213, 182, 255],\n      [255, 215, 185, 255],\n      [255, 216, 188, 255],\n      [255, 218, 191, 255],\n      [255, 220, 194, 255],\n      [255, 222, 197, 255],\n      [255, 224, 200, 255],\n      [255, 226, 203, 255],\n      [255, 228, 206, 255],\n      [255, 229, 210, 255],\n      [255, 231, 213, 255],\n      [255, 233, 216, 255],\n      [255, 235, 219, 255],\n      [255, 237, 223, 255],\n      [255, 239, 226, 255],\n      [255, 240, 229, 255],\n      [255, 242, 232, 255],\n      [255, 244, 236, 255],\n      [255, 246, 239, 255],\n      [255, 248, 242, 255],\n      [255, 250, 245, 255],\n      [255, 251, 249, 255],\n      [255, 253, 252, 255],\n      [255, 255, 255, 255],\n    ],\n  },\n  pet20Step: {\n    name: 'PET 20 Step',\n    numColors: 256,\n    colors: [\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [0, 0, 0, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [96, 0, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 80, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [48, 48, 112, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [80, 80, 128, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [96, 96, 176, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [112, 112, 192, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [128, 128, 224, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 96, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [48, 144, 48, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [80, 192, 80, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [64, 224, 64, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [224, 224, 80, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 208, 96, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 176, 64, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [208, 144, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [192, 96, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [176, 48, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 0, 0, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n      [255, 255, 255, 255],\n    ],\n  },\n  gray: {\n    name: 'Gray',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n    },\n  },\n  jet: {\n    name: 'Jet',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [0.35, 0, 0],\n        [0.66, 1, 1],\n        [0.89, 1, 1],\n        [1, 0.5, 0.5],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.125, 0, 0],\n        [0.375, 1, 1],\n        [0.64, 1, 1],\n        [0.91, 0, 0],\n        [1, 0, 0],\n      ],\n      blue: [\n        [0, 0.5, 0.5],\n        [0.11, 1, 1],\n        [0.34, 1, 1],\n        [0.65, 0, 0],\n        [1, 0, 0],\n      ],\n    },\n  },\n  hsv: {\n    name: 'HSV',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 1, 1],\n        [0.15873, 1, 1],\n        [0.174603, 0.96875, 0.96875],\n        [0.333333, 0.03125, 0.03125],\n        [0.349206, 0, 0],\n        [0.666667, 0, 0],\n        [0.68254, 0.03125, 0.03125],\n        [0.84127, 0.96875, 0.96875],\n        [0.857143, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.15873, 0.9375, 0.9375],\n        [0.174603, 1, 1],\n        [0.507937, 1, 1],\n        [0.666667, 0.0625, 0.0625],\n        [0.68254, 0, 0],\n        [1, 0, 0],\n      ],\n      blue: [\n        [0, 0, 0],\n        [0.333333, 0, 0],\n        [0.349206, 0.0625, 0.0625],\n        [0.507937, 1, 1],\n        [0.84127, 1, 1],\n        [0.857143, 0.9375, 0.9375],\n        [1, 0.09375, 0.09375],\n      ],\n    },\n  },\n  hot: {\n    name: 'Hot',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0.0416, 0.0416],\n        [0.365079, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.365079, 0, 0],\n        [0.746032, 1, 1],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0, 0],\n        [0.746032, 0, 0],\n        [1, 1, 1],\n      ],\n    },\n  },\n  cool: {\n    name: 'Cool',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 1, 1],\n        [1, 0, 0],\n      ],\n      blue: [\n        [0, 1, 1],\n        [1, 1, 1],\n      ],\n    },\n  },\n  spring: {\n    name: 'Spring',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 1, 1],\n        [1, 0, 0],\n      ],\n    },\n  },\n  summer: {\n    name: 'Summer',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0.5, 0.5],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0.4, 0.4],\n        [1, 0.4, 0.4],\n      ],\n    },\n  },\n  autumn: {\n    name: 'Autumn',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0, 0],\n        [1, 0, 0],\n      ],\n    },\n  },\n  winter: {\n    name: 'Winter',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [1, 0, 0],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 1, 1],\n        [1, 0.5, 0.5],\n      ],\n    },\n  },\n  bone: {\n    name: 'Bone',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [0.746032, 0.652778, 0.652778],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.365079, 0.319444, 0.319444],\n        [0.746032, 0.777778, 0.777778],\n        [1, 1, 1],\n      ],\n      blue: [\n        [0, 0, 0],\n        [0.365079, 0.444444, 0.444444],\n        [1, 1, 1],\n      ],\n    },\n  },\n  copper: {\n    name: 'Copper',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [0.809524, 1, 1],\n        [1, 1, 1],\n      ],\n      green: [\n        [0, 0, 0],\n        [1, 0.7812, 0.7812],\n      ],\n      blue: [\n        [0, 0, 0],\n        [1, 0.4975, 0.4975],\n      ],\n    },\n  },\n  spectral: {\n    name: 'Spectral',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0, 0],\n        [0.05, 0.4667, 0.4667],\n        [0.1, 0.5333, 0.5333],\n        [0.15, 0, 0],\n        [0.2, 0, 0],\n        [0.25, 0, 0],\n        [0.3, 0, 0],\n        [0.35, 0, 0],\n        [0.4, 0, 0],\n        [0.45, 0, 0],\n        [0.5, 0, 0],\n        [0.55, 0, 0],\n        [0.6, 0, 0],\n        [0.65, 0.7333, 0.7333],\n        [0.7, 0.9333, 0.9333],\n        [0.75, 1, 1],\n        [0.8, 1, 1],\n        [0.85, 1, 1],\n        [0.9, 0.8667, 0.8667],\n        [0.95, 0.8, 0.8],\n        [1, 0.8, 0.8],\n      ],\n      green: [\n        [0, 0, 0],\n        [0.05, 0, 0],\n        [0.1, 0, 0],\n        [0.15, 0, 0],\n        [0.2, 0, 0],\n        [0.25, 0.4667, 0.4667],\n        [0.3, 0.6, 0.6],\n        [0.35, 0.6667, 0.6667],\n        [0.4, 0.6667, 0.6667],\n        [0.45, 0.6, 0.6],\n        [0.5, 0.7333, 0.7333],\n        [0.55, 0.8667, 0.8667],\n        [0.6, 1, 1],\n        [0.65, 1, 1],\n        [0.7, 0.9333, 0.9333],\n        [0.75, 0.8, 0.8],\n        [0.8, 0.6, 0.6],\n        [0.85, 0, 0],\n        [0.9, 0, 0],\n        [0.95, 0, 0],\n        [1, 0.8, 0.8],\n      ],\n      blue: [\n        [0, 0, 0],\n        [0.05, 0.5333, 0.5333],\n        [0.1, 0.6, 0.6],\n        [0.15, 0.6667, 0.6667],\n        [0.2, 0.8667, 0.8667],\n        [0.25, 0.8667, 0.8667],\n        [0.3, 0.8667, 0.8667],\n        [0.35, 0.6667, 0.6667],\n        [0.4, 0.5333, 0.5333],\n        [0.45, 0, 0],\n        [0.5, 0, 0],\n        [0.55, 0, 0],\n        [0.6, 0, 0],\n        [0.65, 0, 0],\n        [0.7, 0, 0],\n        [0.75, 0, 0],\n        [0.8, 0, 0],\n        [0.85, 0, 0],\n        [0.9, 0, 0],\n        [0.95, 0, 0],\n        [1, 0.8, 0.8],\n      ],\n    },\n  },\n  coolwarm: {\n    name: 'CoolWarm',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0.2298057, 0.2298057],\n        [0.03125, 0.26623388, 0.26623388],\n        [0.0625, 0.30386891, 0.30386891],\n        [0.09375, 0.342804478, 0.342804478],\n        [0.125, 0.38301334, 0.38301334],\n        [0.15625, 0.424369608, 0.424369608],\n        [0.1875, 0.46666708, 0.46666708],\n        [0.21875, 0.509635204, 0.509635204],\n        [0.25, 0.552953156, 0.552953156],\n        [0.28125, 0.596262162, 0.596262162],\n        [0.3125, 0.639176211, 0.639176211],\n        [0.34375, 0.681291281, 0.681291281],\n        [0.375, 0.722193294, 0.722193294],\n        [0.40625, 0.761464949, 0.761464949],\n        [0.4375, 0.798691636, 0.798691636],\n        [0.46875, 0.833466556, 0.833466556],\n        [0.5, 0.865395197, 0.865395197],\n        [0.53125, 0.897787179, 0.897787179],\n        [0.5625, 0.924127593, 0.924127593],\n        [0.59375, 0.944468518, 0.944468518],\n        [0.625, 0.958852946, 0.958852946],\n        [0.65625, 0.96732803, 0.96732803],\n        [0.6875, 0.969954137, 0.969954137],\n        [0.71875, 0.966811177, 0.966811177],\n        [0.75, 0.958003065, 0.958003065],\n        [0.78125, 0.943660866, 0.943660866],\n        [0.8125, 0.923944917, 0.923944917],\n        [0.84375, 0.89904617, 0.89904617],\n        [0.875, 0.869186849, 0.869186849],\n        [0.90625, 0.834620542, 0.834620542],\n        [0.9375, 0.795631745, 0.795631745],\n        [0.96875, 0.752534934, 0.752534934],\n        [1, 0.705673158, 0.705673158],\n      ],\n      green: [\n        [0, 0.298717966, 0.298717966],\n        [0.03125, 0.353094838, 0.353094838],\n        [0.0625, 0.406535296, 0.406535296],\n        [0.09375, 0.458757618, 0.458757618],\n        [0.125, 0.50941904, 0.50941904],\n        [0.15625, 0.558148092, 0.558148092],\n        [0.1875, 0.604562568, 0.604562568],\n        [0.21875, 0.648280772, 0.648280772],\n        [0.25, 0.688929332, 0.688929332],\n        [0.28125, 0.726149107, 0.726149107],\n        [0.3125, 0.759599947, 0.759599947],\n        [0.34375, 0.788964712, 0.788964712],\n        [0.375, 0.813952739, 0.813952739],\n        [0.40625, 0.834302879, 0.834302879],\n        [0.4375, 0.849786142, 0.849786142],\n        [0.46875, 0.860207984, 0.860207984],\n        [0.5, 0.86541021, 0.86541021],\n        [0.53125, 0.848937047, 0.848937047],\n        [0.5625, 0.827384882, 0.827384882],\n        [0.59375, 0.800927443, 0.800927443],\n        [0.625, 0.769767752, 0.769767752],\n        [0.65625, 0.734132809, 0.734132809],\n        [0.6875, 0.694266682, 0.694266682],\n        [0.71875, 0.650421156, 0.650421156],\n        [0.75, 0.602842431, 0.602842431],\n        [0.78125, 0.551750968, 0.551750968],\n        [0.8125, 0.49730856, 0.49730856],\n        [0.84375, 0.439559467, 0.439559467],\n        [0.875, 0.378313092, 0.378313092],\n        [0.90625, 0.312874446, 0.312874446],\n        [0.9375, 0.24128379, 0.24128379],\n        [0.96875, 0.157246067, 0.157246067],\n        [1, 0.01555616, 0.01555616],\n      ],\n      blue: [\n        [0, 0.753683153, 0.753683153],\n        [0.03125, 0.801466763, 0.801466763],\n        [0.0625, 0.84495867, 0.84495867],\n        [0.09375, 0.883725899, 0.883725899],\n        [0.125, 0.917387822, 0.917387822],\n        [0.15625, 0.945619588, 0.945619588],\n        [0.1875, 0.968154911, 0.968154911],\n        [0.21875, 0.98478814, 0.98478814],\n        [0.25, 0.995375608, 0.995375608],\n        [0.28125, 0.999836203, 0.999836203],\n        [0.3125, 0.998151185, 0.998151185],\n        [0.34375, 0.990363227, 0.990363227],\n        [0.375, 0.976574709, 0.976574709],\n        [0.40625, 0.956945269, 0.956945269],\n        [0.4375, 0.931688648, 0.931688648],\n        [0.46875, 0.901068838, 0.901068838],\n        [0.5, 0.865395561, 0.865395561],\n        [0.53125, 0.820880546, 0.820880546],\n        [0.5625, 0.774508472, 0.774508472],\n        [0.59375, 0.726736146, 0.726736146],\n        [0.625, 0.678007945, 0.678007945],\n        [0.65625, 0.628751763, 0.628751763],\n        [0.6875, 0.579375448, 0.579375448],\n        [0.71875, 0.530263762, 0.530263762],\n        [0.75, 0.481775914, 0.481775914],\n        [0.78125, 0.434243684, 0.434243684],\n        [0.8125, 0.387970225, 0.387970225],\n        [0.84375, 0.343229596, 0.343229596],\n        [0.875, 0.300267182, 0.300267182],\n        [0.90625, 0.259301199, 0.259301199],\n        [0.9375, 0.220525627, 0.220525627],\n        [0.96875, 0.184115123, 0.184115123],\n        [1, 0.150232812, 0.150232812],\n      ],\n    },\n  },\n  blues: {\n    name: 'Blues',\n    numColors: 256,\n    gamma: 1,\n    segmentedData: {\n      red: [\n        [0, 0.9686274528503418, 0.9686274528503418],\n        [0.125, 0.87058824300765991, 0.87058824300765991],\n        [0.25, 0.7764706015586853, 0.7764706015586853],\n        [0.375, 0.61960786581039429, 0.61960786581039429],\n        [0.5, 0.41960784792900085, 0.41960784792900085],\n        [0.625, 0.25882354378700256, 0.25882354378700256],\n        [0.75, 0.12941177189350128, 0.12941177189350128],\n        [0.875, 0.031372550874948502, 0.031372550874948502],\n        [1, 0.031372550874948502, 0.031372550874948502],\n      ],\n      green: [\n        [0, 0.9843137264251709, 0.9843137264251709],\n        [0.125, 0.92156863212585449, 0.92156863212585449],\n        [0.25, 0.85882353782653809, 0.85882353782653809],\n        [0.375, 0.7921568751335144, 0.7921568751335144],\n        [0.5, 0.68235296010971069, 0.68235296010971069],\n        [0.625, 0.57254904508590698, 0.57254904508590698],\n        [0.75, 0.44313725829124451, 0.44313725829124451],\n        [0.875, 0.31764706969261169, 0.31764706969261169],\n        [1, 0.18823529779911041, 0.18823529779911041],\n      ],\n      blue: [\n        [0, 1, 1],\n        [0.125, 0.9686274528503418, 0.9686274528503418],\n        [0.25, 0.93725490570068359, 0.93725490570068359],\n        [0.375, 0.88235294818878174, 0.88235294818878174],\n        [0.5, 0.83921569585800171, 0.83921569585800171],\n        [0.625, 0.7764706015586853, 0.7764706015586853],\n        [0.75, 0.70980393886566162, 0.70980393886566162],\n        [0.875, 0.61176472902297974, 0.61176472902297974],\n        [1, 0.41960784792900085, 0.41960784792900085],\n      ],\n    },\n  },\n};\n\nexport default colormapsData;\n","const RENDERING_DEFAULTS = {\n  MINIMUM_SLAB_THICKNESS: 5e-2,\n  MAXIMUM_RAY_DISTANCE: 1e6,\n};\n\nObject.freeze(RENDERING_DEFAULTS);\n\nexport default RENDERING_DEFAULTS;\n","const EPSILON = 1e-3;\n\nexport default EPSILON;\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze#examples\nfunction deepFreeze(object) {\n  // Retrieve the property names defined on object\n  const propNames = Object.getOwnPropertyNames(object);\n\n  // Freeze properties before freezing self\n\n  for (const name of propNames) {\n    const value = object[name];\n\n    if (value && typeof value === 'object') {\n      deepFreeze(value);\n    }\n  }\n\n  return Object.freeze(object);\n}\n\nexport default deepFreeze;\n","import deepFreeze from '../utilities/deepFreeze';\n\nconst MPR_CAMERA_VALUES = {\n  axial: {\n    viewPlaneNormal: [0, 0, -1],\n    viewUp: [0, -1, 0],\n  },\n  sagittal: {\n    viewPlaneNormal: [1, 0, 0],\n    viewUp: [0, 0, 1],\n  },\n  coronal: {\n    viewPlaneNormal: [0, -1, 0],\n    viewUp: [0, 0, 1],\n  },\n};\n\n// Note: Object.freeze is only shallow, so we need to deepFreeze\nconst mprCameraValues = deepFreeze(MPR_CAMERA_VALUES);\nexport default mprCameraValues;\n","import { ViewportPreset } from '../types';\n\nconst presets: ViewportPreset[] = [\n  {\n    name: 'CT-AAA',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity:\n      '12 -3024 0 143.556 0 166.222 0.686275 214.389 0.696078 419.736 0.833333 3071 0.803922',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '24 -3024 0 0 0 143.556 0.615686 0.356863 0.184314 166.222 0.882353 0.603922 0.290196 214.389 1 1 1 419.736 1 0.937033 0.954531 3071 0.827451 0.658824 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-AAA2',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity:\n      '16 -3024 0 129.542 0 145.244 0.166667 157.02 0.5 169.918 0.627451 395.575 0.8125 1578.73 0.8125 3071 0.8125',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '32 -3024 0 0 0 129.542 0.54902 0.25098 0.14902 145.244 0.6 0.627451 0.843137 157.02 0.890196 0.47451 0.6 169.918 0.992157 0.870588 0.392157 395.575 1 0.886275 0.658824 1578.73 1 0.829256 0.957922 3071 0.827451 0.658824 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Bone',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity: '8 -3024 0 -16.4458 0 641.385 0.715686 3071 0.705882',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '16 -3024 0 0 0 -16.4458 0.729412 0.254902 0.301961 641.385 0.905882 0.815686 0.552941 3071 1 1 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Bones',\n    gradientOpacity: '4 0 1 985.12 1',\n    specularPower: '1',\n    scalarOpacity: '8 -1000 0 152.19 0 278.93 0.190476 952 0.2',\n    specular: '0',\n    shade: '1',\n    ambient: '0.2',\n    colorTransfer:\n      '20 -1000 0.3 0.3 1 -488 0.3 1 0.3 463.28 1 0 0 659.15 1 0.912535 0.0374849 953 1 0.3 0.3',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Cardiac',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity:\n      '12 -3024 0 -77.6875 0 94.9518 0.285714 179.052 0.553571 260.439 0.848214 3071 0.875',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '24 -3024 0 0 0 -77.6875 0.54902 0.25098 0.14902 94.9518 0.882353 0.603922 0.290196 179.052 1 0.937033 0.954531 260.439 0.615686 0 0 3071 0.827451 0.658824 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Cardiac2',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity:\n      '12 -3024 0 42.8964 0 163.488 0.428571 277.642 0.776786 1587 0.754902 3071 0.754902',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '24 -3024 0 0 0 42.8964 0.54902 0.25098 0.14902 163.488 0.917647 0.639216 0.0588235 277.642 1 0.878431 0.623529 1587 1 1 1 3071 0.827451 0.658824 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Cardiac3',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity:\n      '14 -3024 0 -86.9767 0 45.3791 0.169643 139.919 0.589286 347.907 0.607143 1224.16 0.607143 3071 0.616071',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '28 -3024 0 0 0 -86.9767 0 0.25098 1 45.3791 1 0 0 139.919 1 0.894893 0.894893 347.907 1 1 0.25098 1224.16 1 1 1 3071 0.827451 0.658824 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Chest-Contrast-Enhanced',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity:\n      '10 -3024 0 67.0106 0 251.105 0.446429 439.291 0.625 3071 0.616071',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '20 -3024 0 0 0 67.0106 0.54902 0.25098 0.14902 251.105 0.882353 0.603922 0.290196 439.291 1 0.937033 0.954531 3071 0.827451 0.658824 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Chest-Vessels',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity:\n      '10 -3024 0 -1278.35 0 22.8277 0.428571 439.291 0.625 3071 0.616071',\n    specular: '0',\n    shade: '1',\n    ambient: '0.2',\n    colorTransfer:\n      '20 -3024 0 0 0 -1278.35 0.54902 0.25098 0.14902 22.8277 0.882353 0.603922 0.290196 439.291 1 0.937033 0.954531 3071 0.827451 0.658824 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Coronary-Arteries',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity:\n      '12 -2048 0 136.47 0 159.215 0.258929 318.43 0.571429 478.693 0.776786 3661 1',\n    specular: '0',\n    shade: '0',\n    ambient: '0.2',\n    colorTransfer:\n      '24 -2048 0 0 0 136.47 0 0 0 159.215 0.159804 0.159804 0.159804 318.43 0.764706 0.764706 0.764706 478.693 1 1 1 3661 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Coronary-Arteries-2',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity:\n      '14 -2048 0 142.677 0 145.016 0.116071 192.174 0.5625 217.24 0.776786 384.347 0.830357 3661 0.830357',\n    specular: '0',\n    shade: '1',\n    ambient: '0.2',\n    colorTransfer:\n      '28 -2048 0 0 0 142.677 0 0 0 145.016 0.615686 0 0.0156863 192.174 0.909804 0.454902 0 217.24 0.972549 0.807843 0.611765 384.347 0.909804 0.909804 1 3661 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Coronary-Arteries-3',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity:\n      '14 -2048 0 128.643 0 129.982 0.0982143 173.636 0.669643 255.884 0.857143 584.878 0.866071 3661 1',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '28 -2048 0 0 0 128.643 0 0 0 129.982 0.615686 0 0.0156863 173.636 0.909804 0.454902 0 255.884 0.886275 0.886275 0.886275 584.878 0.968627 0.968627 0.968627 3661 1 1 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Cropped-Volume-Bone',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity: '10 -2048 0 -451 0 -450 1 1050 1 3661 1',\n    specular: '0',\n    shade: '0',\n    ambient: '0.2',\n    colorTransfer:\n      '20 -2048 0 0 0 -451 0 0 0 -450 0.0556356 0.0556356 0.0556356 1050 1 1 1 3661 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Fat',\n    gradientOpacity: '6 0 1 985.12 1 988 1',\n    specularPower: '1',\n    scalarOpacity: '14 -1000 0 -100 0 -99 0.15 -60 0.15 -59 0 101.2 0 952 0',\n    specular: '0',\n    shade: '0',\n    ambient: '0.2',\n    colorTransfer:\n      '36 -1000 0.3 0.3 1 -497.5 0.3 1 0.3 -99 0 0 1 -76.946 0 1 0 -65.481 0.835431 0.888889 0.0165387 83.89 1 0 0 463.28 1 0 0 659.15 1 0.912535 0.0374849 2952 1 0.300267 0.299886',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Liver-Vasculature',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity:\n      '14 -2048 0 149.113 0 157.884 0.482143 339.96 0.660714 388.526 0.830357 1197.95 0.839286 3661 0.848214',\n    specular: '0',\n    shade: '0',\n    ambient: '0.2',\n    colorTransfer:\n      '28 -2048 0 0 0 149.113 0 0 0 157.884 0.501961 0.25098 0 339.96 0.695386 0.59603 0.36886 388.526 0.854902 0.85098 0.827451 1197.95 1 1 1 3661 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Lung',\n    gradientOpacity: '6 0 1 985.12 1 988 1',\n    specularPower: '1',\n    scalarOpacity: '12 -1000 0 -600 0 -599 0.15 -400 0.15 -399 0 2952 0',\n    specular: '0',\n    shade: '1',\n    ambient: '0.2',\n    colorTransfer:\n      '24 -1000 0.3 0.3 1 -600 0 0 1 -530 0.134704 0.781726 0.0724558 -460 0.929244 1 0.109473 -400 0.888889 0.254949 0.0240258 2952 1 0.3 0.3',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-MIP',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity: '8 -3024 0 -637.62 0 700 1 3071 1',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer: '16 -3024 0 0 0 -637.62 1 1 1 700 1 1 1 3071 1 1 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Muscle',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity:\n      '10 -3024 0 -155.407 0 217.641 0.676471 419.736 0.833333 3071 0.803922',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '20 -3024 0 0 0 -155.407 0.54902 0.25098 0.14902 217.641 0.882353 0.603922 0.290196 419.736 1 0.937033 0.954531 3071 0.827451 0.658824 1',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Pulmonary-Arteries',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity:\n      '14 -2048 0 -568.625 0 -364.081 0.0714286 -244.813 0.401786 18.2775 0.607143 447.798 0.830357 3592.73 0.839286',\n    specular: '0',\n    shade: '1',\n    ambient: '0.2',\n    colorTransfer:\n      '28 -2048 0 0 0 -568.625 0 0 0 -364.081 0.396078 0.301961 0.180392 -244.813 0.611765 0.352941 0.0705882 18.2775 0.843137 0.0156863 0.156863 447.798 0.752941 0.752941 0.752941 3592.73 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Soft-Tissue',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity: '10 -2048 0 -167.01 0 -160 1 240 1 3661 1',\n    specular: '0',\n    shade: '0',\n    ambient: '0.2',\n    colorTransfer:\n      '20 -2048 0 0 0 -167.01 0 0 0 -160 0.0556356 0.0556356 0.0556356 240 1 1 1 3661 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'CT-Air',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '10',\n    scalarOpacity: '8 -3024 0.705882 -900.0 0.715686 -500.0 0 3071 0',\n    specular: '0.2',\n    shade: '1',\n    ambient: '0.1',\n    colorTransfer:\n      '16 -3024 1 1 1 -900.0 0.2 1.0 1.0 -500.0 0.3 0.3 1.0 3071 0 0 0 ',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n  {\n    name: 'MR-Angio',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity:\n      '12 -2048 0 151.354 0 158.279 0.4375 190.112 0.580357 200.873 0.732143 3661 0.741071',\n    specular: '0',\n    shade: '1',\n    ambient: '0.2',\n    colorTransfer:\n      '24 -2048 0 0 0 151.354 0 0 0 158.279 0.74902 0.376471 0 190.112 1 0.866667 0.733333 200.873 0.937255 0.937255 0.937255 3661 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'MR-Default',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity: '12 0 0 20 0 40 0.15 120 0.3 220 0.375 1024 0.5',\n    specular: '0',\n    shade: '1',\n    ambient: '0.2',\n    colorTransfer:\n      '24 0 0 0 0 20 0.168627 0 0 40 0.403922 0.145098 0.0784314 120 0.780392 0.607843 0.380392 220 0.847059 0.835294 0.788235 1024 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'MR-MIP',\n    gradientOpacity: '4 0 1 255 1',\n    specularPower: '1',\n    scalarOpacity: '8 0 0 98.3725 0 416.637 1 2800 1',\n    specular: '0',\n    shade: '0',\n    ambient: '0.2',\n    colorTransfer: '16 0 1 1 1 98.3725 1 1 1 416.637 1 1 1 2800 1 1 1',\n    diffuse: '1',\n    interpolation: '1',\n  },\n  {\n    name: 'MR-T2-Brain',\n    gradientOpacity: '4 0 1 160.25 1',\n    specularPower: '40',\n    scalarOpacity: '10 0 0 36.05 0 218.302 0.171429 412.406 1 641 1',\n    specular: '0.5',\n    shade: '1',\n    ambient: '0.3',\n    colorTransfer:\n      '16 0 0 0 0 98.7223 0.956863 0.839216 0.192157 412.406 0 0.592157 0.807843 641 1 1 1',\n    diffuse: '0.6',\n    interpolation: '1',\n  },\n  {\n    name: 'DTI-FA-Brain',\n    gradientOpacity: '4 0 1 0.9950 1',\n    specularPower: '40',\n    scalarOpacity:\n      '16 0 0 0 0 0.3501 0.0158 0.49379 0.7619 0.6419 1 0.9920 1 0.9950 0 0.9950 0',\n    specular: '0.5',\n    shade: '1',\n    ambient: '0.3',\n    colorTransfer:\n      '28 0 1 0 0 0 1 0 0 0.24974 0.4941 1 0 0.49949 0 0.9882 1 0.7492 0.51764 0 1 0.9950 1 0 0 0.9950 1 0 0',\n    diffuse: '0.9',\n    interpolation: '1',\n  },\n];\n\nexport default presets;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","/**\n * Removes the data loader scheme from the imageId\n *\n * @param imageId - Image ID\n * @returns imageId without the data loader scheme\n */\nexport default function imageIdToURI(imageId: string): string {\n  const colonIndex = imageId.indexOf(':');\n  return imageId.substring(colonIndex + 1);\n}\n","import type { IRenderingEngine } from '../types';\n\nconst cache = {};\n\nconst renderingEngineCache = {\n  /**\n   * Returns the `RenderingEngine` instance with the given `id`.\n   *\n   * @param id - The `id` of the `RenderingEngine` instance to fetch.\n   * @returns The `RenderingEngine` instance.\n   */\n  get: (id: string): IRenderingEngine => {\n    return cache[id];\n  },\n  /**\n   * Adds the `RenderingEngine` instance to the cache.\n   *\n   * @param re - The `RenderingEngine` to add.\n   */\n  set: (re: IRenderingEngine): void => {\n    const renderingEngineId = re.id;\n\n    cache[renderingEngineId] = re;\n  },\n  /**\n   * Deletes the `RenderingEngine` instance from the cache.\n   *\n   * @param id - The `id` of the `RenderingEngine` instance to delete.\n   * @returns True if the delete was successful.\n   */\n  delete: (id: string) => {\n    return delete cache[id];\n  },\n\n  getAll: (): Array<IRenderingEngine> => {\n    const renderingEngineIds = Object.keys(cache);\n    const renderingEngines = renderingEngineIds.map((id) => cache[id]);\n\n    // sort the rendering engines so that the ones that start with _\n    // are at the end of the array. The reason is for not breaking\n    // the code that used getRenderingEngines(), but since we moved\n    // the renderToCanvas utility to use GPU hence it needs a\n    // rendering engine and we don't want to use the default one.\n    renderingEngines.sort((a, b) => {\n      if (a.id[0] === '_' && b.id[0] !== '_') {\n        return 1;\n      } else if (a.id[0] !== '_' && b.id[0] === '_') {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n\n    return renderingEngines;\n  },\n};\n\nexport default renderingEngineCache;\n","import renderingEngineCache from './renderingEngineCache';\nimport type { IRenderingEngine } from '../types';\n\n/**\n * Method to retrieve a RenderingEngine by its unique identifier.\n *\n * @example\n * How to get a RenderingEngine that was created earlier:\n * ```javascript\n * import { RenderingEngine, getRenderingEngine } from 'vtkjs-viewport';\n *\n * const renderingEngine = new RenderingEngine('my-engine');\n *\n * // getting reference to rendering engine later...\n * const renderingEngine = getRenderingEngine('my-engine');\n * ```\n *\n * @param id - The identifier that was used to create the RenderingEngine\n * @returns the matching RenderingEngine, or `undefined` if there is no match\n * @public\n */\nexport function getRenderingEngine(id: string): IRenderingEngine | undefined {\n  return renderingEngineCache.get(id);\n}\n\n/**\n * Get all the rendering engines that are currently registered\n * @returns An array of rendering engines.\n */\nexport function getRenderingEngines(): IRenderingEngine[] | undefined {\n  return renderingEngineCache.getAll();\n}\n\nexport default getRenderingEngine;\n","const isMergeableObject = (val) => {\n  const nonNullObject = val && typeof val === 'object';\n\n  return (\n    nonNullObject &&\n    Object.prototype.toString.call(val) !== '[object RegExp]' &&\n    Object.prototype.toString.call(val) !== '[object Date]'\n  );\n};\n\nconst emptyTarget = (val) => {\n  const isEmpty = Array.isArray(val) ? [] : {};\n\n  return isEmpty;\n};\n\nconst cloneIfNecessary = (value, optionsArgument) => {\n  const clone = optionsArgument && optionsArgument.clone === true;\n\n  return clone && isMergeableObject(value)\n    ? deepMerge(emptyTarget(value), value, optionsArgument)\n    : value;\n};\n\nconst defaultArrayMerge = (target, source, optionsArgument) => {\n  const destination = target.slice();\n\n  source.forEach(function (e, i) {\n    if (typeof destination[i] === 'undefined') {\n      destination[i] = cloneIfNecessary(e, optionsArgument);\n    } else if (isMergeableObject(e)) {\n      destination[i] = deepMerge(target[i], e, optionsArgument);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(cloneIfNecessary(e, optionsArgument));\n    }\n  });\n\n  return destination;\n};\n\nconst mergeObject = (target, source, optionsArgument) => {\n  const destination = {};\n\n  if (isMergeableObject(target)) {\n    Object.keys(target).forEach(function (key) {\n      destination[key] = cloneIfNecessary(target[key], optionsArgument);\n    });\n  }\n  Object.keys(source).forEach(function (key) {\n    if (!isMergeableObject(source[key]) || !target[key]) {\n      destination[key] = cloneIfNecessary(source[key], optionsArgument);\n    } else {\n      destination[key] = deepMerge(target[key], source[key], optionsArgument);\n    }\n  });\n\n  return destination;\n};\n\n/**\n * Merge two objects, recursively merging any objects that are arrays\n * @param target - The target object.\n * @param source - The source object to merge into the target object.\n * @param optionsArgument - The options object.\n * @returns The merged object.\n */\nconst deepMerge = (target = {}, source = {}, optionsArgument = undefined) => {\n  const array = Array.isArray(source);\n  const options = optionsArgument || { arrayMerge: defaultArrayMerge };\n  const arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n  if (array) {\n    return Array.isArray(target)\n      ? arrayMerge(target, source, optionsArgument)\n      : cloneIfNecessary(source, optionsArgument);\n  }\n\n  return mergeObject(target, source, optionsArgument);\n};\n\nexport default deepMerge;\n","import { getGPUTier } from 'detect-gpu';\nimport { SharedArrayBufferModes } from './enums';\nimport { getRenderingEngines } from './RenderingEngine/getRenderingEngine';\nlet csRenderInitialized = false;\nlet useSharedArrayBuffer = true;\nlet sharedArrayBufferMode = SharedArrayBufferModes.TRUE;\nimport { deepMerge } from './utilities';\nimport { Cornerstone3DConfig } from './types';\n// TODO: move sharedArrayBuffer into config.\n// TODO: change config into a class with methods to better control get/set\nconst defaultConfig: Cornerstone3DConfig = {\n  gpuTier: undefined,\n  detectGPUConfig: {},\n  rendering: {\n    useCPURendering: false,\n    // GPU rendering options\n    preferSizeOverAccuracy: false,\n    useNorm16Texture: false, // _hasNorm16TextureSupport(),\n    strictZSpacingForVolumeViewport: true,\n  },\n  // cache\n  // ...\n};\n\nlet config: Cornerstone3DConfig = {\n  gpuTier: undefined,\n  detectGPUConfig: {},\n  rendering: {\n    useCPURendering: false,\n    // GPU rendering options\n    preferSizeOverAccuracy: false,\n    useNorm16Texture: false, // _hasNorm16TextureSupport(),\n    strictZSpacingForVolumeViewport: true,\n  },\n  // cache\n  // ...\n};\n\nfunction _getGLContext(): RenderingContext {\n  // Create canvas element. The canvas is not added to the\n  // document itself, so it is never displayed in the\n  // browser window.\n  const canvas = document.createElement('canvas');\n  // Get WebGLRenderingContext from canvas element.\n  const gl =\n    canvas.getContext('webgl2') ||\n    canvas.getContext('webgl') ||\n    canvas.getContext('experimental-webgl');\n\n  return gl;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/By_example/Detect_WebGL\nfunction _hasActiveWebGLContext() {\n  const gl = _getGLContext();\n\n  // Check if the context is either WebGLRenderingContext or WebGL2RenderingContext\n  return (\n    gl instanceof WebGLRenderingContext || gl instanceof WebGL2RenderingContext\n  );\n}\n\nfunction hasSharedArrayBuffer() {\n  try {\n    /*eslint-disable no-constant-condition */\n    if (new SharedArrayBuffer(0)) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch {\n    return false;\n  }\n}\n\n// Todo: commenting this out until proper support for int16 textures\n// are added to browsers, current implementation is buggy\n// function _hasNorm16TextureSupport() {\n//   const gl = _getGLContext();\n\n//   if (gl) {\n//     const ext = (gl as WebGL2RenderingContext).getExtension(\n//       'EXT_texture_norm16'\n//     );\n\n//     if (ext) {\n//       return true;\n//     }\n//   }\n\n//   return false;\n// }\n\n/**\n * Initialize the cornerstone-core. If the browser has a webgl context and\n * the detected gpu (by detect-gpu library) indicates the GPU is not low end we\n * will use webgl GPU rendering. Otherwise we will use cpu rendering.\n *\n * @param configuration - A configuration object\n * @returns A promise that resolves to true cornerstone has been initialized successfully.\n * @category Initialization\n */\nasync function init(configuration = {}): Promise<boolean> {\n  if (csRenderInitialized) {\n    return csRenderInitialized;\n  }\n\n  // merge configs\n  config = deepMerge(defaultConfig, configuration);\n\n  // gpuTier\n  const hasWebGLContext = _hasActiveWebGLContext();\n  if (!hasWebGLContext) {\n    console.log('CornerstoneRender: GPU not detected, using CPU rendering');\n    config.rendering.useCPURendering = true;\n  } else {\n    config.gpuTier =\n      config.gpuTier || (await getGPUTier(config.detectGPUConfig));\n    console.log(\n      'CornerstoneRender: Using detect-gpu to get the GPU benchmark:',\n      config.gpuTier\n    );\n    if (config.gpuTier.tier < 1) {\n      console.log(\n        'CornerstoneRender: GPU is not powerful enough, using CPU rendering'\n      );\n      config.rendering.useCPURendering = true;\n    } else {\n      console.log('CornerstoneRender: using GPU rendering');\n    }\n  }\n\n  setUseSharedArrayBuffer(sharedArrayBufferMode);\n\n  csRenderInitialized = true;\n  return csRenderInitialized;\n}\n\n/**\n * It sets the useCPURenderingOnlyForDebugOrTests variable to the status value.\n * This only should be used for debugging or tests. DO NOT USE IT IF YOU ARE NOT\n * SURE WHAT YOU ARE DOING.\n * @param status - boolean\n * @category Initialization\n *\n */\nfunction setUseCPURendering(status: boolean): void {\n  config.rendering.useCPURendering = status;\n  csRenderInitialized = true;\n  _updateRenderingPipelinesForAllViewports();\n}\n\nfunction setPreferSizeOverAccuracy(status: boolean): void {\n  config.rendering.preferSizeOverAccuracy = status;\n  csRenderInitialized = true;\n  _updateRenderingPipelinesForAllViewports();\n}\n\n/**\n * Resets the cornerstone-core init state if it has been manually\n * initialized to force use the cpu rendering (e.g., for tests)\n * @category Initialization\n *\n */\nfunction resetUseCPURendering(): void {\n  config.rendering.useCPURendering = !_hasActiveWebGLContext();\n  _updateRenderingPipelinesForAllViewports();\n}\n\n/**\n * Returns whether or not we are using CPU rendering.\n * @returns true if we are using CPU rendering.\n * @category Initialization\n *\n */\nfunction getShouldUseCPURendering(): boolean {\n  return config.rendering.useCPURendering;\n}\n\nfunction setUseSharedArrayBuffer(mode: SharedArrayBufferModes | boolean): void {\n  if (mode == SharedArrayBufferModes.AUTO) {\n    sharedArrayBufferMode = SharedArrayBufferModes.AUTO;\n    const hasSharedBuffer = hasSharedArrayBuffer();\n    if (!hasSharedBuffer) {\n      useSharedArrayBuffer = false;\n      console.warn(\n        `CornerstoneRender: SharedArray Buffer not allowed, performance may be slower.\n        Try ensuring page is cross-origin isolated to enable SharedArrayBuffer.`\n      );\n    } else {\n      useSharedArrayBuffer = true;\n      // eslint-disable-next-line no-console\n      console.log('CornerstoneRender: using SharedArrayBuffer');\n    }\n    return;\n  }\n\n  if (mode == SharedArrayBufferModes.TRUE || mode == true) {\n    sharedArrayBufferMode = SharedArrayBufferModes.TRUE;\n    useSharedArrayBuffer = true;\n    return;\n  }\n\n  if (mode == SharedArrayBufferModes.FALSE || mode == false) {\n    sharedArrayBufferMode = SharedArrayBufferModes.FALSE;\n    useSharedArrayBuffer = false;\n    return;\n  }\n}\n\nfunction resetUseSharedArrayBuffer(): void {\n  setUseSharedArrayBuffer(sharedArrayBufferMode);\n}\n\nfunction getShouldUseSharedArrayBuffer(): boolean {\n  return useSharedArrayBuffer;\n}\n\n/**\n *\n * Returns whether or not cornerstone-core has been initialized.\n * @returns true if the cornerstone render has been initialized.\n * @category Initialization\n *\n */\nfunction isCornerstoneInitialized(): boolean {\n  return csRenderInitialized;\n}\n\n/**\n * This function returns a copy of the config object. This is used to prevent the\n * config object from being modified by other parts of the program.\n * @returns A copy of the config object.\n */\nfunction getConfiguration(): Cornerstone3DConfig {\n  // return a copy\n  // return JSON.parse(JSON.stringify(config));\n  return config;\n}\n\nfunction setConfiguration(c: Cornerstone3DConfig) {\n  config = c;\n  _updateRenderingPipelinesForAllViewports();\n}\n\n/**\n * Update rendering pipelines for all viewports in all rendering engines.\n * @returns {void}\n * @category Initialization\n */\nfunction _updateRenderingPipelinesForAllViewports(): void {\n  getRenderingEngines().forEach((engine) =>\n    engine\n      .getViewports()\n      .forEach((viewport) => viewport.updateRenderingPipeline?.())\n  );\n}\n\nexport {\n  init,\n  getShouldUseCPURendering,\n  getShouldUseSharedArrayBuffer,\n  isCornerstoneInitialized,\n  setUseCPURendering,\n  setUseSharedArrayBuffer,\n  setPreferSizeOverAccuracy,\n  resetUseCPURendering,\n  resetUseSharedArrayBuffer,\n  getConfiguration,\n  setConfiguration,\n};\n","import macro from '@kitware/vtk.js/macros';\nimport vtkOpenGLTexture from '@kitware/vtk.js/Rendering/OpenGL/Texture';\nimport HalfFloat from '@kitware/vtk.js/Common/Core/HalfFloat';\nimport { getConfiguration } from '../../init';\n\n/**\n * vtkStreamingOpenGLTexture - A dervied class of the core vtkOpenGLTexture.\n * This class has methods to update the texture memory on the GPU slice by slice\n * in an efficient yet GPU-architecture friendly manner.\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkStreamingOpenGLTexture(publicAPI, model) {\n  model.classHierarchy.push('vtkStreamingOpenGLTexture');\n\n  const superCreate3DFilterableFromRaw = publicAPI.create3DFilterableFromRaw;\n\n  publicAPI.create3DFilterableFromRaw = (\n    width,\n    height,\n    depth,\n    numComps,\n    dataType,\n    data,\n    preferSizeOverAccuracy\n  ) => {\n    model.inputDataType = dataType;\n    model.inputNumComps = numComps;\n\n    superCreate3DFilterableFromRaw(\n      width,\n      height,\n      depth,\n      numComps,\n      dataType,\n      data,\n      preferSizeOverAccuracy\n    );\n  };\n\n  /**\n   * This function updates the GPU texture memory to match the current\n   * representation of data held in RAM.\n   *\n   * @param {Float32Array|Uint8Array|Int16Array|Uint16Array} data The data array which has been updated.\n   */\n  publicAPI.update3DFromRaw = (data) => {\n    const { updatedFrames } = model;\n\n    if (!updatedFrames.length) {\n      return;\n    }\n    model._openGLRenderWindow.activateTexture(publicAPI);\n    publicAPI.createTexture();\n    publicAPI.bind();\n\n    let bytesPerVoxel;\n    let TypedArrayConstructor;\n\n    if (data instanceof Uint8Array) {\n      bytesPerVoxel = 1;\n      TypedArrayConstructor = Uint8Array;\n    } else if (data instanceof Int16Array) {\n      bytesPerVoxel = 2;\n      TypedArrayConstructor = Int16Array;\n    } else if (data instanceof Uint16Array) {\n      bytesPerVoxel = 2;\n      TypedArrayConstructor = Uint16Array;\n    } else if (data instanceof Float32Array) {\n      bytesPerVoxel = 4;\n      TypedArrayConstructor = Float32Array;\n    } else {\n      throw new Error(`No support for given TypedArray.`);\n    }\n\n    for (let i = 0; i < updatedFrames.length; i++) {\n      if (updatedFrames[i]) {\n        model.fillSubImage3D(data, i, bytesPerVoxel, TypedArrayConstructor);\n      }\n    }\n\n    // Reset updatedFrames\n    model.updatedFrames = [];\n\n    if (model.generateMipmap) {\n      model.context.generateMipmap(model.target);\n    }\n\n    publicAPI.deactivate();\n    return true;\n  };\n\n  /**\n   * This function updates the GPU texture memory to match the current\n   * representation of data held in RAM.\n   *\n   * @param {Float32Array|Uint8Array} data The data array which has been updated.\n   * @param {number} frameIndex The frame to load in.\n   * @param {number} BytesPerVoxel The number of bytes per voxel in the data, so we don't have to constantly\n   * check the array type.\n   * @param {object} TypedArrayConstructor The constructor for the array type. Again so we don't have to constantly check.\n   */\n  model.fillSubImage3D = (\n    data,\n    frameIndex,\n    bytesPerVoxel,\n    TypedArrayConstructor\n  ) => {\n    const buffer = data.buffer;\n\n    const frameLength = model.width * model.height;\n    const frameLengthInBytes = frameLength * model.components * bytesPerVoxel;\n\n    const zOffset = frameIndex * frameLengthInBytes;\n    const rowLength = model.width * model.components;\n\n    const gl = model.context;\n\n    /**\n     * It appears that the implementation of texSubImage3D uses 2D textures to do the texture copy if\n     * MAX_TEXTURE_SIZE is greater than MAX_TEXTURE_SIZE_3D. As such if you make a single block too big\n     * the transfer messes up cleanly and you render a black box or some data if you are lucky.\n     *\n     * This block-size based on 2D texture size seems like the safest approach that should work on most systems.\n     *\n     * There are certainly further optimizations that could be done here, we can do bigger chunks with other systems\n     * But we need to find the _exact_ criteria. And then its not even guaranteed it'll be much faster.\n     */\n    const MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    let blockHeight = Math.floor(\n      (bytesPerVoxel * MAX_TEXTURE_SIZE) / model.width\n    );\n\n    // Cap to actual frame height:\n    blockHeight = Math.min(blockHeight, model.height);\n    const { useNorm16Texture, preferSizeOverAccuracy } =\n      getConfiguration().rendering;\n    // TODO: there is currently a bug in chrome and safari which requires\n    // blockheight = 1 for norm16 textures:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1408247\n    // https://bugs.webkit.org/show_bug.cgi?id=252039\n    if (useNorm16Texture && !preferSizeOverAccuracy) {\n      blockHeight = 1;\n    }\n\n    const multiRowBlockLength = rowLength * blockHeight;\n    const multiRowBlockLengthInBytes = multiRowBlockLength * bytesPerVoxel;\n\n    const normalBlocks = Math.floor(model.height / blockHeight);\n\n    const lastBlockHeight = model.height % blockHeight;\n    const multiRowLastBlockLength = rowLength * lastBlockHeight;\n\n    // Perform most blocks.\n    for (let block = 0; block < normalBlocks; block++) {\n      const yOffset = block * blockHeight;\n\n      let dataView = new TypedArrayConstructor(\n        buffer,\n        zOffset + block * multiRowBlockLengthInBytes,\n        multiRowBlockLength\n      );\n\n      if (\n        model.useHalfFloat &&\n        (TypedArrayConstructor === Uint16Array ||\n          TypedArrayConstructor === Int16Array)\n      ) {\n        // in the case we want to use halfFloat rendering (preferSizeOverAccuracy = true),\n        // we need to convert uint16 and int16 into fp16 format.\n        // This is the step where precision is lost for streaming volume viewport.\n        for (let idx = 0; idx < dataView.length; idx++) {\n          dataView[idx] = HalfFloat.toHalf(dataView[idx]);\n        }\n        if (TypedArrayConstructor === Int16Array) {\n          dataView = new Uint16Array(dataView);\n        }\n      }\n\n      gl.texSubImage3D(\n        model.target, // target\n        0, // mipMap level (always zero)\n        0, // xOffset\n        yOffset, // yOffset\n        frameIndex,\n        model.width,\n        blockHeight, //model.height,\n        1, // numFramesInBlock,\n        model.format,\n        model.openGLDataType,\n        dataView\n      );\n    }\n\n    // perform last block if present\n\n    if (lastBlockHeight !== 0) {\n      const yOffset = normalBlocks * blockHeight;\n\n      // Dataview of last block\n      const dataView = new TypedArrayConstructor(\n        buffer,\n        zOffset + normalBlocks * multiRowBlockLengthInBytes,\n        multiRowLastBlockLength\n      );\n\n      gl.texSubImage3D(\n        model.target, // target\n        0, // mipMap level (always zero)\n        0, // xOffset\n        yOffset, // yOffset\n        frameIndex,\n        model.width,\n        lastBlockHeight, //model.height,\n        1, // numFramesInBlock,\n        model.format,\n        model.openGLDataType,\n        dataView\n      );\n    }\n  };\n\n  publicAPI.getTextureParameters = () => {\n    return {\n      width: model.width,\n      height: model.height,\n      depth: model.depth,\n      numComps: model.inputNumComps,\n      dataType: model.inputDataType,\n    };\n  };\n\n  /**\n   * Called when a frame is loaded so that on next render we know which data to load in.\n   * @param {number} frameIndex The frame to load in.\n   */\n  publicAPI.setUpdatedFrame = (frameIndex) => {\n    model.updatedFrames[frameIndex] = true;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  updatedFrames: [],\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkOpenGLTexture.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkStreamingOpenGLTexture(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkStreamingOpenGLTexture'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import isTypedArray from '../../utilities/isTypedArray';\nimport { imageIdToURI } from '../../utilities';\nimport { vtkStreamingOpenGLTexture } from '../../RenderingEngine/vtkClasses';\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport {\n  IVolume,\n  VolumeScalarData,\n  Metadata,\n  Point3,\n  IImageVolume,\n  Mat3,\n} from '../../types';\n\n/** The base class for volume data. It includes the volume metadata\n * and the volume data along with the loading status.\n */\nexport class ImageVolume implements IImageVolume {\n  private _imageIds: Array<string>;\n  private _imageIdsIndexMap = new Map();\n  private _imageURIsIndexMap = new Map();\n  /** volume scalar data 3D or 4D */\n  protected scalarData: VolumeScalarData | Array<VolumeScalarData>;\n\n  /** Read-only unique identifier for the volume */\n  readonly volumeId: string;\n\n  isPreScaled = false;\n\n  /** Dimensions of the volume */\n  dimensions: Point3;\n  /** volume direction in world space */\n  direction: Mat3;\n  /** volume metadata */\n  metadata: Metadata;\n  /** volume origin, Note this is an opinionated origin for the volume */\n  origin: Point3;\n  /** Whether preScaling has been performed on the volume */\n  /** volume scaling parameters if it contains scaled data */\n  scaling?: {\n    PT?: {\n      // @TODO: Do these values exist?\n      SUVlbmFactor?: number;\n      SUVbsaFactor?: number;\n      // accessed in ProbeTool\n      suvbwToSuvlbm?: number;\n      suvbwToSuvbsa?: number;\n    };\n  };\n  /** volume size in bytes */\n  sizeInBytes?: number; // Seems weird to pass this in? Why not grab it from scalarData.byteLength\n  /** volume spacing in 3d world space */\n  spacing: Point3;\n  /** volume number of voxels */\n  numVoxels: number;\n  /** volume image data */\n  imageData?: vtkImageData;\n  /** open gl texture for the volume */\n  vtkOpenGLTexture: any; // No good way of referencing vtk classes as they aren't classes.\n  /** load status object for the volume */\n  loadStatus?: Record<string, any>;\n  /** optional reference volume id if the volume is derived from another volume */\n  referencedVolumeId?: string;\n  /** whether the metadata for the pixel spacing is not undefined  */\n  hasPixelSpacing: boolean;\n\n  constructor(props: IVolume) {\n    this.volumeId = props.volumeId;\n    this.metadata = props.metadata;\n    this.dimensions = props.dimensions;\n    this.spacing = props.spacing;\n    this.origin = props.origin;\n    this.direction = props.direction;\n    this.imageData = props.imageData;\n    this.scalarData = props.scalarData;\n    this.sizeInBytes = props.sizeInBytes;\n    this.vtkOpenGLTexture = vtkStreamingOpenGLTexture.newInstance();\n    this.numVoxels =\n      this.dimensions[0] * this.dimensions[1] * this.dimensions[2];\n\n    if (props.scaling) {\n      this.scaling = props.scaling;\n    }\n\n    if (props.referencedVolumeId) {\n      this.referencedVolumeId = props.referencedVolumeId;\n    }\n  }\n\n  /** return the image ids for the volume if it is made of separated images */\n  public get imageIds(): Array<string> {\n    return this._imageIds;\n  }\n\n  /** updates the image ids */\n  public set imageIds(newImageIds: Array<string>) {\n    this._imageIds = newImageIds;\n    this._reprocessImageIds();\n  }\n\n  private _reprocessImageIds() {\n    this._imageIdsIndexMap.clear();\n    this._imageURIsIndexMap.clear();\n\n    this._imageIds.forEach((imageId, i) => {\n      const imageURI = imageIdToURI(imageId);\n\n      this._imageIdsIndexMap.set(imageId, i);\n      this._imageURIsIndexMap.set(imageURI, i);\n    });\n  }\n\n  cancelLoading: () => void;\n\n  /** return true if it is a 4D volume or false if it is 3D volume */\n  public isDynamicVolume(): boolean {\n    return false;\n  }\n\n  /**\n   * Return the scalar data for 3D volumes or the active scalar data\n   * (current time point) for 4D volumes\n   */\n  public getScalarData(): VolumeScalarData {\n    if (isTypedArray(this.scalarData)) {\n      return <VolumeScalarData>this.scalarData;\n    }\n\n    throw new Error('Unknow scalar data type');\n  }\n\n  /**\n   * return the index of a given imageId\n   * @param imageId - imageId\n   * @returns imageId index\n   */\n  public getImageIdIndex(imageId: string): number {\n    return this._imageIdsIndexMap.get(imageId);\n  }\n\n  /**\n   * return the index of a given imageURI\n   * @param imageId - imageURI\n   * @returns imageURI index\n   */\n  public getImageURIIndex(imageURI: string): number {\n    return this._imageURIsIndexMap.get(imageURI);\n  }\n\n  /**\n   * destroy the volume and make it unusable\n   */\n  destroy(): void {\n    // TODO: GPU memory associated with volume is not cleared.\n    this.imageData.delete();\n    this.imageData = null;\n    this.scalarData = null;\n\n    this.vtkOpenGLTexture.releaseGraphicsResources();\n    this.vtkOpenGLTexture.delete();\n  }\n}\n\nexport default ImageVolume;\n","/**\n * checks if an object is an instance of a TypedArray\n *\n * @param obj - Object to check\n *\n * @returns True if the object is a TypedArray.\n */\nexport default function isTypedArray(obj: any): boolean {\n  return (\n    obj instanceof Int8Array ||\n    obj instanceof Uint8Array ||\n    obj instanceof Uint8ClampedArray ||\n    obj instanceof Int16Array ||\n    obj instanceof Uint16Array ||\n    obj instanceof Int32Array ||\n    obj instanceof Uint32Array ||\n    obj instanceof Float32Array ||\n    obj instanceof Float64Array\n  );\n}\n","/**\n * EventTarget - Provides the [EventTarget](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget) interface\n */\nclass CornerstoneEventTarget implements EventTarget {\n  private listeners;\n\n  constructor() {\n    this.listeners = {};\n  }\n\n  public reset() {\n    this.listeners = {};\n  }\n\n  public addEventListener(type, callback) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    // prevent multiple callbacks from firing\n    if (this.listeners[type].indexOf(callback) !== -1) {\n      return;\n    }\n\n    this.listeners[type].push(callback);\n  }\n\n  public removeEventListener(type, callback) {\n    if (!this.listeners[type]) {\n      return;\n    }\n\n    const stack = this.listeners[type];\n    const stackLength = stack.length;\n\n    for (let i = 0; i < stackLength; i++) {\n      if (stack[i] === callback) {\n        stack.splice(i, 1);\n\n        return;\n      }\n    }\n  }\n\n  dispatchEvent(event) {\n    if (!this.listeners[event.type]) {\n      //console.warn(`Skipping dispatch since there are no listeners for ${event.type}`);\n      return;\n    }\n\n    const stack = this.listeners[event.type].slice();\n    const stackLength = stack.length;\n\n    for (let i = 0; i < stackLength; i++) {\n      stack[i].call(this, event);\n    }\n\n    return !event.defaultPrevented;\n  }\n}\n\n/**\n * EventTarget - Provides the [EventTarget](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget) interface\n */\nconst eventTarget = new CornerstoneEventTarget();\n\nexport default eventTarget;\n","import eventTarget from '../eventTarget';\n\n/**\n * Small utility to trigger a custom event for a given EventTarget.\n *\n * @example\n *\n * ```javascript\n * triggerEvent(element, Events.IMAGE_RENDERED, { element })\n * ```\n * or it can trigger event on the eventTarget itself\n *\n * ```javascript\n * triggerEvent(eventTarget, CSTOOLS_EVENTS.ANNOTATION_MODIFIED, { viewportId, annotationUID })\n * ```\n *\n * @param el - The element or EventTarget to trigger the event upon\n * @param type - The event type name\n * @param detail - The event detail to be sent\n * @returns false if event is cancelable and at least one of the event handlers\n * which received event called Event.preventDefault(). Otherwise it returns true.\n */\nexport default function triggerEvent(\n  el: EventTarget = eventTarget,\n  type: string,\n  detail: unknown = null\n): boolean {\n  if (!type) {\n    throw new Error('Event type was not defined');\n  }\n\n  const event = new CustomEvent(type, {\n    detail,\n    cancelable: true,\n  });\n\n  return el.dispatchEvent(event);\n}\n","import {\n  ICache,\n  IImage,\n  IImageVolume,\n  IGeometry,\n  IImageLoadObject,\n  IVolumeLoadObject,\n  IGeometryLoadObject,\n  ICachedImage,\n  ICachedVolume,\n  ICachedGeometry,\n  EventTypes,\n} from '../types';\nimport { triggerEvent, imageIdToURI } from '../utilities';\nimport eventTarget from '../eventTarget';\nimport Events from '../enums/Events';\n\nconst MAX_CACHE_SIZE_1GB = 1073741824;\n\nclass Cache implements ICache {\n  private readonly _imageCache: Map<string, ICachedImage>; // volatile space\n  private readonly _volumeCache: Map<string, ICachedVolume>; // non-volatile space\n  // Todo: contour for now, but will be used for surface, etc.\n  private readonly _geometryCache: Map<string, ICachedGeometry>;\n  private _imageCacheSize: number;\n  private _volumeCacheSize: number;\n  private _maxCacheSize: number;\n\n  constructor() {\n    // used to store image data (2d)\n    this._imageCache = new Map();\n    // used to store volume data (3d)\n    this._volumeCache = new Map();\n    // used to store object data (contour, surface, etc.)\n    this._geometryCache = new Map();\n    this._imageCacheSize = 0;\n    this._volumeCacheSize = 0;\n    this._maxCacheSize = MAX_CACHE_SIZE_1GB; // Default 1GB\n  }\n\n  /**\n   * Set the maximum cache Size\n   *\n   * Maximum cache size should be set before adding the data; otherwise, it\n   * will throw an error.\n   *\n   * @param newMaxCacheSize -  new maximum cache size\n   *\n   */\n  public setMaxCacheSize = (newMaxCacheSize: number): void => {\n    if (!newMaxCacheSize || typeof newMaxCacheSize !== 'number') {\n      const errorMessage = `New max cacheSize ${this._maxCacheSize} should be defined and should be a number.`;\n      throw new Error(errorMessage);\n    }\n\n    this._maxCacheSize = newMaxCacheSize;\n  };\n\n  /**\n   * Checks if there is enough space in the cache for requested byte size\n   *\n   * It throws error, if the sum of volatile (image) cache and unallocated cache\n   * is less than the requested byteLength\n   *\n   * @param byteLength - byte length of requested byte size\n   *\n   * @returns - boolean indicating if there is enough space in the cache\n   */\n  public isCacheable = (byteLength: number): boolean => {\n    const unallocatedSpace = this.getBytesAvailable();\n    const imageCacheSize = this._imageCacheSize;\n    const availableSpace = unallocatedSpace + imageCacheSize;\n\n    return availableSpace > byteLength;\n  };\n\n  /**\n   * Returns maximum CacheSize allowed\n   *\n   * @returns maximum allowed cache size\n   */\n  public getMaxCacheSize = (): number => this._maxCacheSize;\n\n  /**\n   * Returns current size of the cache\n   *\n   * @returns current size of the cache\n   */\n  public getCacheSize = (): number =>\n    this._imageCacheSize + this._volumeCacheSize;\n\n  /**\n   * Returns the unallocated size of the cache\n   *\n   */\n  public getBytesAvailable(): number {\n    return this.getMaxCacheSize() - this.getCacheSize();\n  }\n\n  /**\n   * Deletes the imageId from the image cache\n   *\n   * @param imageId - imageId\n   *\n   */\n  private _decacheImage = (imageId: string) => {\n    const { imageLoadObject } = this._imageCache.get(imageId);\n\n    // Cancel any in-progress loading\n    if (imageLoadObject.cancelFn) {\n      imageLoadObject.cancelFn();\n    }\n\n    if (imageLoadObject.decache) {\n      imageLoadObject.decache();\n    }\n\n    this._imageCache.delete(imageId);\n  };\n\n  /**\n   * Deletes the volumeId from the volume cache\n   *\n   * @param volumeId - volumeId\n   *\n   */\n  private _decacheVolume = (volumeId: string) => {\n    const cachedVolume = this._volumeCache.get(volumeId);\n    const { volumeLoadObject, volume } = cachedVolume;\n\n    if (volume.cancelLoading) {\n      volume.cancelLoading();\n    }\n\n    if (volume.imageData) {\n      volume.imageData.delete();\n    }\n\n    if (volumeLoadObject.cancelFn) {\n      // Cancel any in-progress loading\n      volumeLoadObject.cancelFn();\n    }\n\n    if (volumeLoadObject.decache) {\n      volumeLoadObject.decache();\n    }\n\n    this._volumeCache.delete(volumeId);\n  };\n\n  /**\n   * Deletes all the images and volumes in the cache\n   *\n   * Relevant events are fired for each decached image (IMAGE_CACHE_IMAGE_REMOVED) and\n   * the decached volume (VOLUME_CACHE_VOLUME_REMOVED).\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   */\n  public purgeCache = (): void => {\n    const imageIterator = this._imageCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: imageId, done } = imageIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n    }\n\n    this.purgeVolumeCache();\n  };\n\n  /**\n   * Deletes all the volumes in the cache\n   */\n  public purgeVolumeCache = (): void => {\n    const volumeIterator = this._volumeCache.keys();\n\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      const { value: volumeId, done } = volumeIterator.next();\n\n      if (done) {\n        break;\n      }\n\n      this.removeVolumeLoadObject(volumeId);\n\n      triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, {\n        volumeId,\n      });\n    }\n  };\n\n  /**\n   * Purges the cache if necessary based on the requested number of bytes\n   *\n   * 1) it sorts the volatile (image) cache based on the most recent used images\n   * and starts purging from the oldest ones.\n   * Note: for a volume, if the volume-related image Ids is provided, it starts\n   * by purging the none-related image Ids (those that are not related to the\n   * current volume)\n   * 2) For a volume, if we purge all images that won't be included in this volume and still\n   * don't have enough unallocated space, purge images that will be included\n   * in this volume until we have enough space. These will need to be\n   * re-fetched, but we must do this not to straddle over the given memory\n   * limit, even for a short time, as this may crash the application.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param numBytes - Number of bytes for the image/volume that is\n   * going to be stored inside the cache\n   * @param volumeImageIds - list of imageIds that correspond to the\n   * volume whose numberOfBytes we want to store in the cache.\n   * @returns bytesAvailable or undefined in purging cache\n   * does not successfully make enough space for the requested number of bytes\n   */\n  public decacheIfNecessaryUntilBytesAvailable(\n    numBytes: number,\n    volumeImageIds?: Array<string>\n  ): number | undefined {\n    let bytesAvailable = this.getBytesAvailable();\n\n    // If max cache size has not been exceeded, do nothing\n    if (bytesAvailable >= numBytes) {\n      return bytesAvailable;\n    }\n\n    let cachedImages = Array.from(this._imageCache.values());\n\n    // Cache size has been exceeded, create list of images sorted by timeStamp\n    // So we can purge the least recently used image\n    function compare(a, b) {\n      if (a.timeStamp > b.timeStamp) {\n        return 1;\n      }\n      if (a.timeStamp < b.timeStamp) {\n        return -1;\n      }\n\n      return 0;\n    }\n\n    cachedImages.sort(compare);\n    let cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    let imageIdsToPurge = cachedImageIds;\n\n    // if we are making space for a volume, we start by purging the imageIds\n    // that are not related to the volume\n    if (volumeImageIds) {\n      imageIdsToPurge = cachedImageIds.filter(\n        (id) => !volumeImageIds.includes(id)\n      );\n    }\n\n    // Remove images (that are not related to the volume) from volatile cache\n    // until the requested number of bytes become available\n    for (const imageId of imageIdsToPurge) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Remove the imageIds (both volume related and not related)\n    cachedImages = Array.from(this._imageCache.values());\n    cachedImageIds = cachedImages.map((im) => im.imageId);\n\n    // Remove volume-image Ids from volatile cache until the requested number of bytes\n    // become available\n    for (const imageId of cachedImageIds) {\n      this.removeImageLoadObject(imageId);\n\n      triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, { imageId });\n\n      bytesAvailable = this.getBytesAvailable();\n      if (bytesAvailable >= numBytes) {\n        return bytesAvailable;\n      }\n    }\n\n    // Technically we should not reach here, since isCacheable will throw an\n    // error if unallocated + volatile (image) cache cannot fit the upcoming\n    // number of bytes\n  }\n\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedImage object and put it inside the imageCache for\n   * the imageId. After the imageLoadObject promise resolves to an image,\n   * it: 1) adds the image into the correct CachedImage object 2) increments the\n   * cache size, 3) triggers IMAGE_CACHE_IMAGE_ADDED  4) Purge the cache if\n   * necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache and decache them one by one until the cache\n   * size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_ADDED\n   * @fires Events.CACHE_SIZE_EXCEEDED if the cache size exceeds the maximum\n   *\n   * @param imageId - ImageId for the image\n   * @param imageLoadObject - The object that is loading or loaded the image\n   */\n  public putImageLoadObject(\n    imageId: string,\n    imageLoadObject: IImageLoadObject\n  ): Promise<any> {\n    if (imageId === undefined) {\n      throw new Error('putImageLoadObject: imageId must not be undefined');\n    }\n\n    if (imageLoadObject.promise === undefined) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.promise must not be undefined'\n      );\n    }\n\n    if (this._imageCache.has(imageId)) {\n      throw new Error('putImageLoadObject: imageId already in cache');\n    }\n\n    if (\n      imageLoadObject.cancelFn &&\n      typeof imageLoadObject.cancelFn !== 'function'\n    ) {\n      throw new Error(\n        'putImageLoadObject: imageLoadObject.cancel must be a function'\n      );\n    }\n\n    const cachedImage: ICachedImage = {\n      loaded: false,\n      imageId,\n      sharedCacheKey: undefined, // The sharedCacheKey for this imageId.  undefined by default\n      imageLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._imageCache.set(imageId, cachedImage);\n\n    return imageLoadObject.promise\n      .then((image: IImage) => {\n        if (!this._imageCache.get(imageId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (Number.isNaN(image.sizeInBytes)) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes must not be undefined'\n          );\n        }\n        if (image.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putImageLoadObject: image.sizeInBytes is not a number'\n          );\n        }\n\n        // check if there is enough space in unallocated + image Cache\n        if (!this.isCacheable(image.sizeInBytes)) {\n          throw new Error(Events.CACHE_SIZE_EXCEEDED);\n        }\n\n        // if there is, decache if necessary\n        this.decacheIfNecessaryUntilBytesAvailable(image.sizeInBytes);\n\n        cachedImage.loaded = true;\n        cachedImage.image = image;\n        cachedImage.sizeInBytes = image.sizeInBytes;\n        this._incrementImageCacheSize(cachedImage.sizeInBytes);\n\n        const eventDetails: EventTypes.ImageCacheImageAddedEventDetail = {\n          image: cachedImage,\n        };\n\n        triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_ADDED, eventDetails);\n\n        cachedImage.sharedCacheKey = image.sharedCacheKey;\n      })\n      .catch((error) => {\n        // console.warn(error)\n        this._imageCache.delete(imageId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given imageId\n   *\n   * @param imageId - Image ID\n   * @returns IImageLoadObject\n   */\n  public getImageLoadObject(imageId: string): IImageLoadObject {\n    if (imageId === undefined) {\n      throw new Error('getImageLoadObject: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached image\n    cachedImage.timeStamp = Date.now();\n\n    return cachedImage.imageLoadObject;\n  }\n\n  /**\n   * It checks the imageCache for the provided imageId, and returns true\n   * if the image is loaded, false otherwise. Note, this only checks the imageCache\n   * and does not check the volume cache.\n   * @param imageId - image Id to check\n   * @returns boolean\n   */\n  public isImageIdCached(imageId: string): boolean {\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (!cachedImage) {\n      return false;\n    }\n\n    return cachedImage.loaded;\n  }\n\n  /**\n   * Returns the volume that contains the requested imageId. It will check the\n   * imageIds inside the volume to find a match.\n   *\n   * @param imageId - ImageId\n   * @returns - Volume object\n   */\n  public getVolumeContainingImageId(imageId: string): {\n    volume: IImageVolume;\n    imageIdIndex: number;\n  } {\n    const volumeIds = Array.from(this._volumeCache.keys());\n    const imageIdToUse = imageIdToURI(imageId);\n\n    for (const volumeId of volumeIds) {\n      const cachedVolume = this._volumeCache.get(volumeId);\n      const { volume } = cachedVolume;\n\n      if (!volume?.imageIds?.length) {\n        return;\n      }\n\n      const imageIdIndex = volume.getImageURIIndex(imageIdToUse);\n\n      if (imageIdIndex > -1) {\n        return { volume, imageIdIndex };\n      }\n    }\n  }\n\n  /**\n   * Returns the cached image from the imageCache for the requested imageId.\n   * It first strips the imageId to remove the data loading scheme.\n   *\n   * @param imageId - Image ID\n   * @returns cached image\n   */\n  public getCachedImageBasedOnImageURI(\n    imageId: string\n  ): ICachedImage | undefined {\n    const imageURIToUse = imageIdToURI(imageId);\n\n    const cachedImageIds = Array.from(this._imageCache.keys());\n    const foundImageId = cachedImageIds.find((imageId) => {\n      return imageIdToURI(imageId) === imageURIToUse;\n    });\n\n    if (!foundImageId) {\n      return;\n    }\n\n    return this._imageCache.get(foundImageId);\n  }\n  /**\n   * Puts a new image load object into the cache\n   *\n   * First, it creates a CachedVolume object and put it inside the volumeCache for\n   * the volumeId. After the volumeLoadObject promise resolves to a volume,\n   * it: 1) adds the volume into the correct CachedVolume object inside volumeCache\n   * 2) increments the cache size, 3) triggers VOLUME_CACHE_VOLUME_ADDED  4) Purge\n   * the cache if necessary -- if the cache size is greater than the maximum cache size, it\n   * iterates over the imageCache (not volumeCache) and decache them one by one\n   * until the cache size becomes less than the maximum allowed cache size\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_ADDED\n   *\n   * @param volumeId - volumeId of the volume\n   * @param volumeLoadObject - The object that is loading or loaded the volume\n   */\n  public putVolumeLoadObject(\n    volumeId: string,\n    volumeLoadObject: IVolumeLoadObject\n  ): Promise<any> {\n    if (volumeId === undefined) {\n      throw new Error('putVolumeLoadObject: volumeId must not be undefined');\n    }\n    if (volumeLoadObject.promise === undefined) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.promise must not be undefined'\n      );\n    }\n    if (this._volumeCache.has(volumeId)) {\n      throw new Error(\n        `putVolumeLoadObject: volumeId:${volumeId} already in cache`\n      );\n    }\n    if (\n      volumeLoadObject.cancelFn &&\n      typeof volumeLoadObject.cancelFn !== 'function'\n    ) {\n      throw new Error(\n        'putVolumeLoadObject: volumeLoadObject.cancel must be a function'\n      );\n    }\n\n    // todo: @Erik there are two loaded flags, one inside cachedVolume and the other\n    // inside the volume.loadStatus.loaded, the actual all pixelData loaded is the\n    // loadStatus one. This causes confusion\n    const cachedVolume: ICachedVolume = {\n      loaded: false,\n      volumeId,\n      volumeLoadObject,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._volumeCache.set(volumeId, cachedVolume);\n\n    return volumeLoadObject.promise\n      .then((volume: IImageVolume) => {\n        if (!this._volumeCache.get(volumeId)) {\n          // If the image has been purged before being loaded, we stop here.\n          console.warn(\n            'The image was purged from the cache before it completed loading.'\n          );\n          return;\n        }\n\n        if (Number.isNaN(volume.sizeInBytes)) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes must not be undefined'\n          );\n        }\n        if (volume.sizeInBytes.toFixed === undefined) {\n          throw new Error(\n            'putVolumeLoadObject: volume.sizeInBytes is not a number'\n          );\n        }\n\n        // this.isCacheable is called at the volume loader, before requesting\n        // the images of the volume\n\n        this.decacheIfNecessaryUntilBytesAvailable(\n          volume.sizeInBytes,\n          // @ts-ignore: // todo ImageVolume does not have imageIds\n          volume.imageIds\n        );\n\n        // cachedVolume.loaded = true\n        cachedVolume.volume = volume;\n        cachedVolume.sizeInBytes = volume.sizeInBytes;\n        this._incrementVolumeCacheSize(cachedVolume.sizeInBytes);\n\n        const eventDetails: EventTypes.VolumeCacheVolumeAddedEventDetail = {\n          volume: cachedVolume,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.VOLUME_CACHE_VOLUME_ADDED,\n          eventDetails\n        );\n      })\n      .catch((error) => {\n        this._volumeCache.delete(volumeId);\n        throw error;\n      });\n  }\n\n  /**\n   * Returns the object that is loading a given volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns IVolumeLoadObject\n   */\n  public getVolumeLoadObject = (volumeId: string): IVolumeLoadObject => {\n    if (volumeId === undefined) {\n      throw new Error('getVolumeLoadObject: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volumeLoadObject;\n  };\n\n  public getGeometry = (geometryId: string): IGeometry => {\n    if (geometryId == null) {\n      throw new Error('getGeometry: geometryId must not be undefined');\n    }\n\n    const cachedGeometry = this._geometryCache.get(geometryId);\n\n    if (cachedGeometry === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached geometry (not used for anything for now)\n    cachedGeometry.timeStamp = Date.now();\n\n    return cachedGeometry.geometry;\n  };\n\n  /**\n   * Returns the volume associated with the volumeId\n   *\n   * @param volumeId - Volume ID\n   * @returns Volume\n   */\n  public getVolume = (volumeId: string): IImageVolume => {\n    if (volumeId === undefined) {\n      throw new Error('getVolume: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      return;\n    }\n\n    // Bump time stamp for cached volume (not used for anything for now)\n    cachedVolume.timeStamp = Date.now();\n\n    return cachedVolume.volume;\n  };\n\n  /**\n   * Removes the image loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.IMAGE_CACHE_IMAGE_REMOVED\n   *\n   * @param imageId - Image ID\n   */\n  public removeImageLoadObject = (imageId: string): void => {\n    if (imageId === undefined) {\n      throw new Error('removeImageLoadObject: imageId must not be undefined');\n    }\n    const cachedImage = this._imageCache.get(imageId);\n\n    if (cachedImage === undefined) {\n      throw new Error(\n        'removeImageLoadObject: imageId was not present in imageCache'\n      );\n    }\n\n    this._incrementImageCacheSize(-cachedImage.sizeInBytes);\n\n    const eventDetails = {\n      imageId,\n    };\n\n    triggerEvent(eventTarget, Events.IMAGE_CACHE_IMAGE_REMOVED, eventDetails);\n    this._decacheImage(imageId);\n  };\n\n  /**\n   * Removes the volume loader associated with a given Id from the cache\n   *\n   * It increases the cache size after removing the image.\n   *\n   * @fires Events.VOLUME_CACHE_VOLUME_REMOVED\n   *\n   * @param imageId - ImageId\n   */\n  public removeVolumeLoadObject = (volumeId: string): void => {\n    if (volumeId === undefined) {\n      throw new Error('removeVolumeLoadObject: volumeId must not be undefined');\n    }\n    const cachedVolume = this._volumeCache.get(volumeId);\n\n    if (cachedVolume === undefined) {\n      throw new Error(\n        'removeVolumeLoadObject: volumeId was not present in volumeCache'\n      );\n    }\n\n    this._incrementVolumeCacheSize(-cachedVolume.sizeInBytes);\n\n    const eventDetails = {\n      volume: cachedVolume,\n      volumeId,\n    };\n\n    triggerEvent(eventTarget, Events.VOLUME_CACHE_VOLUME_REMOVED, eventDetails);\n    this._decacheVolume(volumeId);\n  };\n\n  putGeometryLoadObject = (\n    geometryId: string,\n    geometryLoadObject: IGeometryLoadObject\n  ): Promise<void> => {\n    if (geometryId == undefined) {\n      throw new Error(\n        'putGeometryLoadObject: geometryId must not be undefined'\n      );\n    }\n\n    if (this._geometryCache.has(geometryId)) {\n      throw new Error(\n        'putGeometryLoadObject: geometryId already present in geometryCache'\n      );\n    }\n\n    const cachedGeometry: ICachedGeometry = {\n      geometryId,\n      geometryLoadObject,\n      loaded: false,\n      timeStamp: Date.now(),\n      sizeInBytes: 0,\n    };\n\n    this._geometryCache.set(geometryId, cachedGeometry);\n\n    return geometryLoadObject.promise\n      .then((geometry: IGeometry) => {\n        if (!this._geometryCache.has(geometryId)) {\n          console.warn(\n            'putGeometryLoadObject: geometryId was removed from geometryCache'\n          );\n          return;\n        }\n\n        if (Number.isNaN(geometry.sizeInBytes)) {\n          throw new Error(\n            'putGeometryLoadObject: geometry.sizeInBytes is not a number'\n          );\n        }\n\n        // Todo: fix is cacheable\n\n        cachedGeometry.loaded = true;\n        cachedGeometry.geometry = geometry;\n        cachedGeometry.sizeInBytes = geometry.sizeInBytes;\n\n        // this._incrementGeometryCacheSize(geometry.sizeInBytes);\n\n        const eventDetails = {\n          geometry,\n          geometryId,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Events.GEOMETRY_CACHE_GEOMETRY_ADDED,\n          eventDetails\n        );\n\n        return;\n      })\n      .catch((error) => {\n        this._geometryCache.delete(geometryId);\n        throw error;\n      });\n  };\n\n  /**\n   * Increases the image cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  private _incrementImageCacheSize = (increment: number) => {\n    this._imageCacheSize += increment;\n  };\n\n  /**\n   * Increases the cache size with the provided increment\n   *\n   * @param increment - bytes length\n   */\n  private _incrementVolumeCacheSize = (increment: number) => {\n    this._volumeCacheSize += increment;\n  };\n}\n\n/**\n * This module deals with Caching of images and volumes\n * The cache has two main components: a volatile portion for images and a\n * non-volatile portion for volumes. Individual 2D images are volatile and\n * will be replaced by new images hitting the cache. When you allocate volumes,\n * these are non-volatile and reserve a block of memory from the cache.\n * Volumes must be released manually.\n * We will have a shared block of memory allocated for the entire cache, e.g. 1GB\n * which will be shared for images and volumes.\n *\n * **When a new image is added:**\n * We check if there is enough unallocated + volatile space for the single image\n *\n * if so\n * - We allocate the image in image cache, and if necessary oldest images\n * are decached to match the maximumCacheSize criteria\n * - If a volume contains that imageId, copy it over using TypedArray's set method.\n * If no volumes contain the imageId, the image is fetched by image loaders\n *\n * If not (cache is mostly/completely full with volumes)\n * - throw that the cache does not have enough working space to allocate the image\n *\n *\n * **When a new volume is added:**\n * Check if there is enough unallocated + volatile space to allocate the volume:\n *\n * If so:\n * - Decache oldest images which won't be included in this volume until\n * we have enough free space for the volume\n * - If not enough space from previous space, decache images that will be included\n * in the volume until we have enough free space (These will need to be re-fetched,\n * but we must do this not to straddle over the given memory limit, even for a\n * short time, as this may crash the app)\n * - At this point, if any of the frames (indexed by imageId) are present in the volatile\n * image cache, copy these over to the volume now\n *\n * If not (cache is mostly/completely full with volumes),\n * - throw that the cache does not have enough working space to allocate the volume.\n *\n */\nconst cache = new Cache();\nexport default cache;\nexport { Cache }; // for documentation\n","// prettier-ignore\n// @ts-nocheck\n/**\n * Generates a unique id that has limited chance of collision\n *\n * @see {@link https://stackoverflow.com/a/2117523/1867984|StackOverflow: Source}\n * @returns a v4 compliant GUID\n */\nexport default function uuidv4(): string {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  );\n}\n","import '@kitware/vtk.js/Rendering/Profiles/Volume';\n\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport type { vtkImageData as vtkImageDataType } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport { ImageVolume } from '../cache/classes/ImageVolume';\nimport type * as Types from '../types';\nimport cache from '../cache/cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport triggerEvent from '../utilities/triggerEvent';\nimport { uuidv4 } from '../utilities';\nimport { Point3, Metadata, EventTypes, Mat3 } from '../types';\nimport { getConfiguration } from '../init';\n\ninterface VolumeLoaderOptions {\n  imageIds: Array<string>;\n}\n\ninterface DerivedVolumeOptions {\n  volumeId: string;\n  targetBuffer?: {\n    type: 'Float32Array' | 'Uint8Array' | 'Uint16Array' | 'Int16Array';\n    sharedArrayBuffer?: boolean;\n  };\n}\ninterface LocalVolumeOptions {\n  scalarData: Float32Array | Uint8Array | Uint16Array | Int16Array;\n  metadata: Metadata;\n  dimensions: Point3;\n  spacing: Point3;\n  origin: Point3;\n  direction: Mat3;\n}\n\n/**\n * Adds a single scalar data to a 3D volume\n */\nfunction addScalarDataToImageData(\n  imageData: vtkImageDataType,\n  scalarData: Types.VolumeScalarData,\n  dataArrayAttrs\n) {\n  const scalarArray = vtkDataArray.newInstance({\n    name: `Pixels`,\n    values: scalarData,\n    ...dataArrayAttrs,\n  });\n\n  imageData.getPointData().setScalars(scalarArray);\n}\n\n/**\n * Adds multiple scalar data (time points) to a 4D volume\n */\nfunction addScalarDataArraysToImageData(\n  imageData: vtkImageDataType,\n  scalarDataArrays: Types.VolumeScalarData[],\n  dataArrayAttrs\n) {\n  scalarDataArrays.forEach((scalarData, i) => {\n    const vtkScalarArray = vtkDataArray.newInstance({\n      name: `timePoint-${i}`,\n      values: scalarData,\n      ...dataArrayAttrs,\n    });\n\n    imageData.getPointData().addArray(vtkScalarArray);\n  });\n\n  // Set the first as active otherwise nothing is displayed on the screen\n  imageData.getPointData().setActiveScalars('timePoint-0');\n}\n\nfunction createInternalVTKRepresentation(\n  volume: Types.IImageVolume\n): vtkImageDataType {\n  const { dimensions, metadata, spacing, direction, origin } = volume;\n  const { PhotometricInterpretation } = metadata;\n\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n\n  const imageData = vtkImageData.newInstance();\n  const dataArrayAttrs = { numberOfComponents: numComponents };\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n\n  // Add scalar data to 3D or 4D volume\n  if (volume.isDynamicVolume()) {\n    const scalarDataArrays = (<Types.IDynamicImageVolume>(\n      volume\n    )).getScalarDataArrays();\n\n    addScalarDataArraysToImageData(imageData, scalarDataArrays, dataArrayAttrs);\n  } else {\n    const scalarData = volume.getScalarData();\n\n    addScalarDataToImageData(imageData, scalarData, dataArrayAttrs);\n  }\n\n  return imageData;\n}\n\n/**\n * This module deals with VolumeLoaders and loading volumes\n */\n\nconst volumeLoaders = {};\n\nlet unknownVolumeLoader;\n\n/**\n * Load a volume using a registered Cornerstone Volume Loader.\n *\n * The volume loader that is used will be\n * determined by the volume loader scheme matching against the volumeId.\n *\n * @param volumeId - A Cornerstone Volume Object's volumeId\n * @param options - Options to be passed to the Volume Loader. Options\n * contain the ImageIds that is passed to the loader\n *\n * @returns An Object which can be used to act after a volume is loaded or loading fails\n *\n */\nfunction loadVolumeFromVolumeLoader(\n  volumeId: string,\n  options: VolumeLoaderOptions\n): Types.IVolumeLoadObject {\n  const colonIndex = volumeId.indexOf(':');\n  const scheme = volumeId.substring(0, colonIndex);\n  const loader = volumeLoaders[scheme];\n\n  if (loader === undefined || loader === null) {\n    if (unknownVolumeLoader !== undefined) {\n      return unknownVolumeLoader(volumeId, options);\n    }\n\n    throw new Error(\n      'loadVolumeFromVolumeLoader: no volume loader for volumeId'\n    );\n  }\n\n  const volumeLoadObject = loader(volumeId, options);\n\n  // Broadcast a volume loaded event once the image is loaded\n  volumeLoadObject.promise.then(\n    function (volume) {\n      triggerEvent(eventTarget, Events.VOLUME_LOADED, { volume });\n    },\n    function (error) {\n      const errorObject: EventTypes.VolumeLoadedFailedEventDetail = {\n        volumeId,\n        error,\n      };\n\n      triggerEvent(eventTarget, Events.VOLUME_LOADED_FAILED, errorObject);\n    }\n  );\n\n  return volumeLoadObject;\n}\n\n/**\n * Loads a volume given a volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred.  The loaded image is not stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadVolume(\n  volumeId: string,\n  options: VolumeLoaderOptions = { imageIds: [] }\n): Promise<Types.IImageVolume> {\n  if (volumeId === undefined) {\n    throw new Error('loadVolume: parameter volumeId must not be undefined');\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  return volumeLoadObject.promise.then((volume: Types.IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n    return volume;\n  });\n}\n\n/**\n * Loads an image given an volumeId and optional priority and returns a promise which will resolve to\n * the loaded image object or fail if an error occurred. The image is stored in the cache.\n *\n * @param volumeId - A Cornerstone Image Object's volumeId\n * @param options - Options to be passed to the Volume Loader\n *\n * @returns Volume Loader Object\n */\nexport async function createAndCacheVolume(\n  volumeId: string,\n  options: VolumeLoaderOptions\n): Promise<Record<string, any>> {\n  if (volumeId === undefined) {\n    throw new Error(\n      'createAndCacheVolume: parameter volumeId must not be undefined'\n    );\n  }\n\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n\n  volumeLoadObject.promise.then((volume: Types.IImageVolume) => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n  });\n\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject).catch((err) => {\n    throw err;\n  });\n\n  return volumeLoadObject.promise;\n}\n\n/**\n * Based on a referencedVolumeId, it will build and cache a new volume. If\n * no scalarData is specified in the options, an empty derived volume will be\n * created that matches the image metadata of the referenceVolume. If scalarData\n * is given, it will be used to generate the intensity values for the derivedVolume.\n * Finally, it will save the volume in the cache.\n * @param referencedVolumeId - the volumeId from which the new volume will get its metadata\n * @param options - DerivedVolumeOptions {uid: derivedVolumeUID, targetBuffer: { type: Float32Array | Uint8Array |\n * Uint16Array | Uint32Array  }, scalarData: if provided}\n *\n * @returns ImageVolume\n */\nexport async function createAndCacheDerivedVolume(\n  referencedVolumeId: string,\n  options: DerivedVolumeOptions\n): Promise<ImageVolume> {\n  const referencedVolume = cache.getVolume(referencedVolumeId);\n\n  if (!referencedVolume) {\n    throw new Error(\n      `Cannot created derived volume: Referenced volume with id ${referencedVolumeId} does not exist.`\n    );\n  }\n\n  let { volumeId } = options;\n  const { targetBuffer } = options;\n\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const { metadata, dimensions, spacing, origin, direction } = referencedVolume;\n  const scalarData = referencedVolume.getScalarData();\n  const scalarLength = scalarData.length;\n\n  let numBytes, TypedArray;\n\n  const { useNorm16Texture } = getConfiguration().rendering;\n\n  // If target buffer is provided\n  if (targetBuffer) {\n    if (targetBuffer.type === 'Float32Array') {\n      numBytes = scalarLength * 4;\n      TypedArray = Float32Array;\n    } else if (targetBuffer.type === 'Uint8Array') {\n      numBytes = scalarLength;\n      TypedArray = Uint8Array;\n    } else if (useNorm16Texture && targetBuffer.type === 'Uint16Array') {\n      numBytes = scalarLength * 2;\n      TypedArray = Uint16Array;\n    } else if (useNorm16Texture && targetBuffer.type === 'Int16Array') {\n      numBytes = scalarLength * 2;\n      TypedArray = Uint16Array;\n    } else {\n      throw new Error('TargetBuffer should be Float32Array or Uint8Array');\n    }\n  } else {\n    // Use float32 if no targetBuffer is provided\n    numBytes = scalarLength * 4;\n    TypedArray = Float32Array;\n  }\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  let volumeScalarData;\n  if (targetBuffer?.sharedArrayBuffer) {\n    const buffer = new SharedArrayBuffer(numBytes);\n    volumeScalarData = new TypedArray(buffer);\n  } else {\n    volumeScalarData = new TypedArray(scalarLength);\n  }\n\n  // Todo: handle more than one component for segmentation (RGB)\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: volumeScalarData,\n  });\n\n  const derivedImageData = vtkImageData.newInstance();\n\n  derivedImageData.setDimensions(dimensions);\n  derivedImageData.setSpacing(spacing);\n  derivedImageData.setDirection(direction);\n  derivedImageData.setOrigin(origin);\n  derivedImageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: derivedImageData,\n    scalarData: volumeScalarData,\n    sizeInBytes: numBytes,\n    referencedVolumeId,\n  });\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n\n  await cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\n/**\n * Creates and cache a volume based on a set of provided properties including\n * dimensions, spacing, origin, direction, metadata, scalarData. It should be noted that\n * scalarData should be provided for this function to work. If a volume with the same\n * Id exists in the cache it returns it immediately.\n * @param options -  { scalarData, metadata, dimensions, spacing, origin, direction }\n * @param volumeId - Id of the generated volume\n *\n * @returns ImageVolume\n */\nexport function createLocalVolume(\n  options: LocalVolumeOptions,\n  volumeId: string,\n  preventCache = false\n): ImageVolume {\n  const { scalarData, metadata, dimensions, spacing, origin, direction } =\n    options;\n\n  if (\n    !scalarData ||\n    !(\n      scalarData instanceof Uint8Array ||\n      scalarData instanceof Float32Array ||\n      scalarData instanceof Uint16Array ||\n      scalarData instanceof Int16Array\n    )\n  ) {\n    throw new Error(\n      'To use createLocalVolume you should pass scalarData of type Uint8Array, Uint16Array, Int16Array or Float32Array'\n    );\n  }\n\n  // Todo: handle default values for spacing, origin, direction if not provided\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n\n  const cachedVolume = cache.getVolume(volumeId);\n\n  if (cachedVolume) {\n    return cachedVolume as ImageVolume;\n  }\n\n  const scalarLength = dimensions[0] * dimensions[1] * dimensions[2];\n\n  const numBytes = scalarData ? scalarData.buffer.byteLength : scalarLength * 4;\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: scalarData,\n  });\n\n  const imageData = vtkImageData.newInstance();\n\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n  imageData.getPointData().setScalars(scalarArray);\n\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: imageData,\n    scalarData,\n    sizeInBytes: numBytes,\n  });\n\n  if (preventCache) {\n    return derivedVolume;\n  }\n\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume),\n  };\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n\n  return derivedVolume;\n}\n\n/**\n * Registers an volumeLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this volume loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param volumeLoader - A Cornerstone Volume Loader function\n */\nexport function registerVolumeLoader(\n  scheme: string,\n  volumeLoader: Types.VolumeLoaderFn\n): void {\n  volumeLoaders[scheme] = volumeLoader;\n}\n\n/** Gets the array of volume loader schemes */\nexport function getVolumeLoaderSchemes(): string[] {\n  return Object.keys(volumeLoaders);\n}\n\n/**\n * Registers a new unknownVolumeLoader and returns the previous one\n *\n * @param volumeLoader - A Cornerstone Volume Loader\n *\n * @returns The previous Unknown Volume Loader\n */\nexport function registerUnknownVolumeLoader(\n  volumeLoader: Types.VolumeLoaderFn\n): Types.VolumeLoaderFn | undefined {\n  const oldVolumeLoader = unknownVolumeLoader;\n\n  unknownVolumeLoader = volumeLoader;\n\n  return oldVolumeLoader;\n}\n","import macro from '@kitware/vtk.js/macros';\nimport vtkVolumeMapper from '@kitware/vtk.js/Rendering/Core/VolumeMapper';\n\n/**\n * vtkSharedVolumeMapper - A derived class of the core vtkVolumeMapper class\n * the scalar texture in as an argument. This is so we can share the same texture\n * memory across different mappers/actors, so we don't duplicate memory usage.\n *\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n * @hidden\n */\nfunction vtkSharedVolumeMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkSharedVolumeMapper');\n\n  const superDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    model.scalarTexture = null;\n    superDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  scalarTexture: null,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkVolumeMapper.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, ['scalarTexture']);\n\n  // Object methods\n  vtkSharedVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkSharedVolumeMapper');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import { vtkSharedVolumeMapper } from '../vtkClasses';\nimport { getConfiguration } from '../../init';\n/**\n * Given an imageData and a vtkOpenGLTexture, it creates a \"shared\" vtk volume mapper\n * from which various volume actors can be created.\n *\n * @param imageData - the vtkImageData object that contains the data to\n * render.\n * @param vtkOpenGLTexture - The vtkOpenGLTexture that will be used to render\n * the volume.\n * @returns The volume mapper.\n */\nexport default function createVolumeMapper(\n  imageData: any,\n  vtkOpenGLTexture: any\n): any {\n  const volumeMapper = vtkSharedVolumeMapper.newInstance();\n\n  if (getConfiguration().rendering.preferSizeOverAccuracy) {\n    volumeMapper.setPreferSizeOverAccuracy(true);\n  }\n\n  volumeMapper.setInputData(imageData);\n\n  const spacing = imageData.getSpacing();\n  // Set the sample distance to half the mean length of one side. This is where the divide by 6 comes from.\n  // https://github.com/Kitware/VTK/blob/6b559c65bb90614fb02eb6d1b9e3f0fca3fe4b0b/Rendering/VolumeOpenGL2/vtkSmartVolumeMapper.cxx#L344\n  const sampleDistance = (spacing[0] + spacing[1] + spacing[2]) / 6;\n\n  // This is to allow for good pixel level image quality.\n  // Todo: why we are setting this to 4000? Is this a good number? it should be configurable\n  volumeMapper.setMaximumSamplesPerRay(4000);\n  volumeMapper.setSampleDistance(sampleDistance);\n  volumeMapper.setScalarTexture(vtkOpenGLTexture);\n\n  return volumeMapper;\n}\n","import RequestType from '../enums/RequestType';\nimport { IImage } from '../types';\nimport { uuidv4 } from '../utilities';\n\ntype AdditionalDetails = {\n  imageId?: string;\n  volumeId?: string;\n};\n\ntype RequestDetailsInterface = {\n  requestFn: () => Promise<IImage | void>;\n  type: RequestType;\n  additionalDetails: AdditionalDetails;\n};\n\ntype RequestPool = {\n  [name in RequestType]: { [key: number]: RequestDetailsInterface[] };\n};\n\n/**\n * RequestPool manager class is a base class that manages the request pools.\n * It is used imageRetrievalPoolManager, and imageLoadPoolManager to retrieve and load images.\n * Previously requestPoolManager was used to manage the retrieval and loading and decoding\n * of the images in a way that new requests were sent after the image was both loaded and decoded\n * which was not performant since it was waiting for the image to be loaded and decoded before\n * sending the next request which is a network request and can be done in parallel.\n * Now, we use separate imageRetrievalPoolManager and imageLoadPoolManager\n * to improve performance and both are extending the RequestPoolManager class which\n * is a basic queueing pool.\n *\n * A new requestPool can be created by instantiating a new RequestPoolManager class.\n *\n * ```javascript\n * const requestPoolManager = new RequestPoolManager()\n * ```\n *\n * ## ImageLoadPoolManager\n *\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *      enabled: true,\n *    },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n * ### ImageRetrievalPoolManager\n * You don't need to directly use the imageRetrievalPoolManager to load images\n * since the imageLoadPoolManager will automatically use it for retrieval. However,\n * maximum number of concurrent requests can be set by calling `setMaxConcurrentRequests`.\n */\nclass RequestPoolManager {\n  private id: string;\n  private awake: boolean;\n  private requestPool: RequestPool;\n  private numRequests = {\n    interaction: 0,\n    thumbnail: 0,\n    prefetch: 0,\n  };\n  /* maximum number of requests of each type. */\n  public maxNumRequests: {\n    interaction: number;\n    thumbnail: number;\n    prefetch: number;\n  };\n  /* A public property that is used to set the delay between requests. */\n  public grabDelay: number;\n  private timeoutHandle: number;\n\n  /**\n   * By default a request pool containing three priority groups, one for each\n   * of the request types, is created. Maximum number of requests of each type\n   * is set to 6.\n   */\n  constructor(id?: string) {\n    this.id = id ? id : uuidv4();\n\n    this.requestPool = {\n      interaction: { 0: [] },\n      thumbnail: { 0: [] },\n      prefetch: { 0: [] },\n    };\n\n    this.grabDelay = 5;\n    this.awake = false;\n\n    this.numRequests = {\n      interaction: 0,\n      thumbnail: 0,\n      prefetch: 0,\n    };\n\n    this.maxNumRequests = {\n      interaction: 6,\n      thumbnail: 6,\n      prefetch: 5,\n    };\n  }\n\n  /**\n   * This function sets the maximum number of requests for a given request type.\n   * @param type - The type of request you want to set the max number\n   * of requests for it can be either of interaction, prefetch, or thumbnail.\n   * @param maxNumRequests - The maximum number of requests that can be\n   * made at a time.\n   */\n  public setMaxSimultaneousRequests(\n    type: RequestType,\n    maxNumRequests: number\n  ): void {\n    this.maxNumRequests[type] = maxNumRequests;\n  }\n\n  /**\n   * It returns the maximum number of requests of a given type that can be made\n   * @param type - The type of request.\n   * @returns The maximum number of requests of a given type.\n   */\n  public getMaxSimultaneousRequests(type: RequestType): number {\n    return this.maxNumRequests[type];\n  }\n\n  /**\n   * Stops further fetching of the requests, all the ongoing requests will still\n   * be retrieved\n   */\n  public destroy(): void {\n    if (this.timeoutHandle) {\n      window.clearTimeout(this.timeoutHandle);\n    }\n  }\n\n  /**\n   * Adds the requests to the pool of requests.\n   *\n   * @param requestFn - A function that returns a promise which resolves in the image\n   * @param type - Priority category, it can be either of interaction, prefetch,\n   * or thumbnail.\n   * @param additionalDetails - Additional details that requests can contain.\n   * For instance the volumeId for the volume requests\n   * @param priority - Priority number for each category of requests. Its default\n   * value is priority 0. The lower the priority number, the higher the priority number\n   *\n   */\n  public addRequest(\n    requestFn: () => Promise<IImage | void>,\n    type: RequestType,\n    additionalDetails: Record<string, unknown>,\n    priority = 0\n  ): void {\n    // Describe the request\n    const requestDetails: RequestDetailsInterface = {\n      requestFn,\n      type,\n      additionalDetails,\n    };\n\n    // Check if the priority group exists on the request type\n    if (this.requestPool[type][priority] === undefined) {\n      this.requestPool[type][priority] = [];\n    }\n\n    // Adding the request to the correct priority group of the request type\n    this.requestPool[type][priority].push(requestDetails);\n\n    // Wake up\n    if (!this.awake) {\n      this.awake = true;\n      this.startGrabbing();\n    } else if (type === RequestType.Interaction) {\n      // Todo: this is a hack for interaction right now, we should separate\n      // the grabbing from the adding requests\n      this.startGrabbing();\n    }\n  }\n\n  /**\n   * Filter the requestPoolManager's pool of request based on the result of\n   * provided filter function. The provided filter function needs to return false or true\n   *\n   * @param filterFunction - The filter function for filtering of the requests to keep\n   */\n  public filterRequests(\n    filterFunction: (requestDetails: RequestDetailsInterface) => boolean\n  ): void {\n    Object.keys(this.requestPool).forEach((type: string) => {\n      const requestType = this.requestPool[type];\n      Object.keys(requestType).forEach((priority) => {\n        requestType[priority] = requestType[priority].filter(\n          (requestDetails: RequestDetailsInterface) => {\n            return filterFunction(requestDetails);\n          }\n        );\n      });\n    });\n  }\n\n  /**\n   * Clears the requests specific to the provided type. For instance, the\n   * pool of requests of type 'interaction' can be cleared via this function.\n   *\n   *\n   * @param type - category of the request (either interaction, prefetch or thumbnail)\n   */\n  public clearRequestStack(type: string): void {\n    if (!this.requestPool[type]) {\n      throw new Error(`No category for the type ${type} found`);\n    }\n    this.requestPool[type] = { 0: [] };\n  }\n\n  private sendRequests(type) {\n    const requestsToSend = this.maxNumRequests[type] - this.numRequests[type];\n\n    for (let i = 0; i < requestsToSend; i++) {\n      const requestDetails = this.getNextRequest(type);\n      if (requestDetails === null) {\n        return false;\n      } else if (requestDetails) {\n        this.numRequests[type]++;\n        this.awake = true;\n\n        requestDetails.requestFn().finally(() => {\n          this.numRequests[type]--;\n          this.startAgain();\n        });\n      }\n    }\n\n    return true;\n  }\n\n  private getNextRequest(type): RequestDetailsInterface | null {\n    const interactionPriorities = this.getSortedPriorityGroups(type);\n    for (const priority of interactionPriorities) {\n      if (this.requestPool[type][priority].length) {\n        return this.requestPool[type][priority].shift();\n      }\n    }\n\n    return null;\n  }\n\n  protected startGrabbing(): void {\n    const hasRemainingInteractionRequests = this.sendRequests(\n      RequestType.Interaction\n    );\n    const hasRemainingThumbnailRequests = this.sendRequests(\n      RequestType.Thumbnail\n    );\n    const hasRemainingPrefetchRequests = this.sendRequests(\n      RequestType.Prefetch\n    );\n\n    if (\n      !hasRemainingInteractionRequests &&\n      !hasRemainingThumbnailRequests &&\n      !hasRemainingPrefetchRequests\n    ) {\n      this.awake = false;\n    }\n  }\n\n  protected startAgain(): void {\n    if (!this.awake) {\n      return;\n    }\n\n    if (this.grabDelay !== undefined) {\n      // Prevents calling setTimeout hundreds of times when hundreds of requests\n      // are added which make it slower and works in an unexpected way when\n      // destroy/clearTimeout is called because only the last handle is stored.\n      if (!this.timeoutHandle) {\n        this.timeoutHandle = window.setTimeout(() => {\n          this.timeoutHandle = null;\n          this.startGrabbing();\n        }, this.grabDelay);\n      }\n    } else {\n      this.startGrabbing();\n    }\n  }\n\n  protected getSortedPriorityGroups(type: string): Array<number> {\n    const priorities = Object.keys(this.requestPool[type])\n      .map(Number)\n      .filter((priority) => this.requestPool[type][priority].length)\n      .sort((a, b) => a - b);\n    return priorities;\n  }\n\n  /**\n   * Returns the request pool containing different categories, their priority and\n   * the added request details.\n   *\n   * @returns the request pool which contains different categories, their priority and\n   * the added request details\n   */\n  getRequestPool(): RequestPool {\n    return this.requestPool;\n  }\n}\n\nconst requestPoolManager = new RequestPoolManager();\n\nexport { RequestPoolManager };\nexport default requestPoolManager;\n","import { RequestPoolManager } from './requestPoolManager';\nimport RequestType from '../enums/RequestType';\n\n/**\n * You can use the imageLoadPoolManager to load images, by providing a `requestFn`\n * that returns a promise for the image. You can provide a `type` to specify the type of\n * request (interaction, thumbnail, prefetch), and you can provide additional details\n * that will be passed to the requestFn. Below is an example of a requestFn that loads\n * an image from an imageId:\n *\n * ```javascript\n *\n * const priority = -5\n * const requestType = RequestType.Interaction\n * const additionalDetails = { imageId }\n * const options = {\n *   targetBuffer: {\n *     type: 'Float32Array',\n *     offset: null,\n *     length: null,\n *   },\n *   preScale: {\n *     enabled: true,\n *   },\n * }\n *\n * imageLoadPoolManager.addRequest(\n *   loadAndCacheImage(imageId, options).then(() => { // set on viewport}),\n *   requestType,\n *   additionalDetails,\n *   priority\n * )\n * ```\n */\nconst imageLoadPoolManager = new RequestPoolManager('imageLoadPool');\n\nimageLoadPoolManager.grabDelay = 0;\n\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Interaction, 1000);\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Thumbnail, 1000);\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.Prefetch, 1000);\n\nexport default imageLoadPoolManager;\n","import cache from '../cache/cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport { triggerEvent } from '../utilities';\nimport { IImage, ImageLoaderFn, IImageLoadObject, EventTypes } from '../types';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\n\nexport interface ImageLoaderOptions {\n  priority: number;\n  requestType: string;\n  additionalDetails?: Record<string, unknown>;\n}\n/**\n * This module deals with ImageLoaders, loading images and caching images\n */\nconst imageLoaders = {};\nlet unknownImageLoader;\n\n/**\n * Loads an image using a registered Cornerstone Image Loader.\n *\n * The image loader that is used will be\n * determined by the image loader scheme matching against the imageId.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param Options - to be passed to the Image Loader\n *\n * @returns - An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromImageLoader(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  // Extract the image loader scheme: wadors:https://image1 => wadors\n  const colonIndex = imageId.indexOf(':');\n  const scheme = imageId.substring(0, colonIndex);\n  const loader = imageLoaders[scheme];\n  if (loader === undefined || loader === null) {\n    if (unknownImageLoader !== undefined) {\n      return unknownImageLoader(imageId);\n    }\n    throw new Error('loadImageFromImageLoader: no image loader for imageId');\n  }\n  // Load using the registered loader\n  const imageLoadObject = loader(imageId, options);\n  // Broadcast an image loaded event once the image is loaded\n  imageLoadObject.promise.then(\n    function (image) {\n      triggerEvent(eventTarget, Events.IMAGE_LOADED, { image });\n    },\n    function (error) {\n      const errorObject: EventTypes.ImageLoadedFailedEventDetail = {\n        imageId,\n        error,\n      };\n      triggerEvent(eventTarget, Events.IMAGE_LOAD_FAILED, errorObject);\n    }\n  );\n  return imageLoadObject;\n}\n\n/**\n * Gets the imageLoadObject by 1) Looking in to the cache to see if the\n * imageLoadObject has already been cached, 2) Checks inside the volume cache\n * to see if there is a volume that contains the same imageURI for the requested\n * imageID 3) Checks inside the imageCache for similar imageURI that might have\n * been stored as a result of decaching a volume 4) Finally if none were found\n * it request it from the registered imageLoaders.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nfunction loadImageFromCacheOrVolume(\n  imageId: string,\n  options: ImageLoaderOptions\n): IImageLoadObject {\n  // 1. Check inside the image cache for imageId\n  let imageLoadObject = cache.getImageLoadObject(imageId);\n  if (imageLoadObject !== undefined) {\n    return imageLoadObject;\n  }\n  // 2. Check if there exists a volume in the cache containing the imageId,\n  // we copy the pixelData over.\n  const cachedVolumeInfo = cache.getVolumeContainingImageId(imageId);\n  if (cachedVolumeInfo && cachedVolumeInfo.volume.loadStatus.loaded) {\n    // 2.1 Convert the volume at the specific slice to a cornerstoneImage object.\n    // this will copy the pixel data over.\n    const { volume, imageIdIndex } = cachedVolumeInfo;\n    imageLoadObject = volume.convertToCornerstoneImage(imageId, imageIdIndex);\n    return imageLoadObject;\n  }\n  // 3. If no volume found, we search inside the imageCache for the imageId\n  // that has the same URI which had been cached if the volume was converted\n  // to an image\n  const cachedImage = cache.getCachedImageBasedOnImageURI(imageId);\n  if (cachedImage) {\n    imageLoadObject = cachedImage.imageLoadObject;\n    return imageLoadObject;\n  }\n  // 4. if not in image cache nor inside the volume cache, we request the\n  // image loaders to load it\n  imageLoadObject = loadImageFromImageLoader(imageId, options);\n\n  return imageLoadObject;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The loaded image is not stored in the cache.\n *\n *\n * @param imageId - A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns An Object which can be used to act after an image is loaded or loading fails\n */\nexport function loadImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error('loadImage: parameter imageId must not be undefined');\n  }\n\n  return loadImageFromCacheOrVolume(imageId, options).promise;\n}\n\n/**\n * Loads an image given an imageId and optional priority and returns a promise\n * which will resolve to the loaded image object or fail if an error occurred.\n * The image is stored in the cache.\n *\n * @param imageId -  A Cornerstone Image Object's imageId\n * @param options - Options to be passed to the Image Loader\n *\n * @returns Image Loader Object\n */\nexport function loadAndCacheImage(\n  imageId: string,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage> {\n  if (imageId === undefined) {\n    throw new Error(\n      'loadAndCacheImage: parameter imageId must not be undefined'\n    );\n  }\n  const imageLoadObject = loadImageFromCacheOrVolume(imageId, options);\n\n  // if not inside cache, store it\n  if (!cache.getImageLoadObject(imageId)) {\n    cache.putImageLoadObject(imageId, imageLoadObject).catch((err) => {\n      console.warn(err);\n    });\n  }\n\n  return imageLoadObject.promise;\n}\n\n/**\n * Load and cache a list of imageIds\n *\n * @param imageIds - list of imageIds\n * @param options - options for loader\n *\n */\nexport function loadAndCacheImages(\n  imageIds: Array<string>,\n  options: ImageLoaderOptions = { priority: 0, requestType: 'prefetch' }\n): Promise<IImage>[] {\n  if (!imageIds || imageIds.length === 0) {\n    throw new Error(\n      'loadAndCacheImages: parameter imageIds must be list of image Ids'\n    );\n  }\n\n  const allPromises = imageIds.map((imageId) => {\n    return loadAndCacheImage(imageId, options);\n  });\n\n  return allPromises;\n}\n\n/**\n * Removes the imageId from the request pool manager and executes the `cancel`\n * function if it exists.\n *\n * @param imageId - A Cornerstone Image Object's imageId\n *\n */\nexport function cancelLoadImage(imageId: string): void {\n  const filterFunction = ({ additionalDetails }) => {\n    if (additionalDetails.imageId) {\n      return additionalDetails.imageId !== imageId;\n    }\n\n    // for volumes\n    return true;\n  };\n\n  // Instruct the request pool manager to filter queued\n  // requests to ensure requests we no longer need are\n  // no longer sent.\n  imageLoadPoolManager.filterRequests(filterFunction);\n\n  // TODO: Cancel decoding and retrieval as well (somehow?)\n\n  // cancel image loading if in progress\n  const imageLoadObject = cache.getImageLoadObject(imageId);\n\n  if (imageLoadObject) {\n    imageLoadObject.cancelFn();\n  }\n}\n\n/**\n * Removes the imageIds from the request pool manager and calls the `cancel`\n * function if it exists.\n *\n * @param imageIds - Array of Cornerstone Image Object's imageIds\n *\n */\nexport function cancelLoadImages(imageIds: Array<string>): void {\n  imageIds.forEach((imageId) => cancelLoadImage(imageId));\n}\n\n/**\n * Removes all the ongoing image loads by calling the `cancel` method on each\n * imageLoadObject. If no `cancel` method is available, it will be ignored.\n *\n */\nexport function cancelLoadAll(): void {\n  const requestPool = imageLoadPoolManager.getRequestPool();\n\n  Object.keys(requestPool).forEach((type: string) => {\n    const requests = requestPool[type];\n\n    Object.keys(requests).forEach((priority) => {\n      const requestDetails = requests[priority].pop();\n      const { imageId, volumeId } = requestDetails.additionalDetails;\n\n      let loadObject;\n\n      if (imageId) {\n        loadObject = cache.getImageLoadObject(imageId);\n      } else if (volumeId) {\n        loadObject = cache.getVolumeLoadObject(volumeId);\n      }\n      if (loadObject) {\n        loadObject.cancel();\n      }\n    });\n    // resetting the pool types to be empty\n    imageLoadPoolManager.clearRequestStack(type);\n\n    // TODO: Clear retrieval and decoding queues as well\n  });\n}\n\n/**\n * Registers an imageLoader plugin with cornerstone for the specified scheme\n *\n * @param scheme - The scheme to use for this image loader (e.g. 'dicomweb', 'wadouri', 'http')\n * @param imageLoader - A Cornerstone Image Loader function\n */\nexport function registerImageLoader(\n  scheme: string,\n  imageLoader: ImageLoaderFn\n): void {\n  imageLoaders[scheme] = imageLoader;\n}\n/**\n * Registers a new unknownImageLoader and returns the previous one\n *\n * @param imageLoader - A Cornerstone Image Loader\n *\n * @returns The previous Unknown Image Loader\n */\nexport function registerUnknownImageLoader(\n  imageLoader: ImageLoaderFn\n): ImageLoaderFn {\n  const oldImageLoader = unknownImageLoader;\n  unknownImageLoader = imageLoader;\n  return oldImageLoader;\n}\n/**\n * Removes all registered and unknown image loaders. This should be called\n * when the application is unmounted to prevent memory leaks.\n *\n */\nexport function unregisterAllImageLoaders(): void {\n  Object.keys(imageLoaders).forEach(\n    (imageLoader) => delete imageLoaders[imageLoader]\n  );\n  unknownImageLoader = undefined;\n}\n","// This module defines a way to access various metadata about an imageId.  This layer of abstraction exists\n// So metadata can be provided in different ways (e.g. by parsing DICOM P10 or by a WADO-RS document)\n\nconst providers = [];\n\n/**\n * Adds a metadata provider with the specified priority\n * @param provider - Metadata provider function\n * @param priority - 0 is default/normal, > 0 is high, < 0 is low\n *\n * @category MetaData\n */\nexport function addProvider(\n  provider: (type: string, query: any) => any,\n  priority = 0\n): void {\n  let i;\n\n  // Find the right spot to insert this provider based on priority\n  for (i = 0; i < providers.length; i++) {\n    if (providers[i].priority <= priority) {\n      break;\n    }\n  }\n\n  // Insert the decode task at position i\n  providers.splice(i, 0, {\n    priority,\n    provider,\n  });\n}\n\n/**\n * Removes the specified provider\n *\n * @param provider - Metadata provider function\n *\n * @category MetaData\n */\nexport function removeProvider(\n  provider: (type: string, query: any) => { any }\n): void {\n  for (let i = 0; i < providers.length; i++) {\n    if (providers[i].provider === provider) {\n      providers.splice(i, 1);\n\n      break;\n    }\n  }\n}\n\n/**\n * Removes all providers\n *\n * @category MetaData\n */\nexport function removeAllProviders(): void {\n  while (providers.length > 0) {\n    providers.pop();\n  }\n}\n\n/**\n * Gets metadata from the registered metadata providers.  Will call each one from highest priority to lowest\n * until one responds\n *\n * @param type -  The type of metadata requested from the metadata store\n * @param query - The query for the metadata store, often imageId\n *\n * @returns The metadata retrieved from the metadata store\n * @category MetaData\n */\nfunction getMetaData(type: string, query: string): any {\n  // Invoke each provider in priority order until one returns something\n  for (let i = 0; i < providers.length; i++) {\n    const result = providers[i].provider(type, query);\n\n    if (result !== undefined) {\n      return result;\n    }\n  }\n}\n\nexport { getMetaData as get };\n","/**\n * Given a low and high window level, return the window width and window center\n * Formulas from note 4 in\n * https://dicom.nema.org/medical/dicom/current/output/html/part03.html#sect_C.11.2.1.2.1\n * extended to allow for low/high swapping\n * @param low - The low window level.\n * @param high - The high window level.\n * @returns a JavaScript object with two properties: windowWidth and windowCenter.\n */\nfunction toWindowLevel(\n  low: number,\n  high: number\n): {\n  windowWidth: number;\n  windowCenter: number;\n} {\n  // Allow for swapping high/low\n  const windowWidth = Math.abs(high - low) + 1;\n  const windowCenter = (low + high + 1) / 2;\n\n  return { windowWidth, windowCenter };\n}\n\n/**\n * Given a window width and center, return the lower and upper bounds of the window\n * The formulas for the calculation are specified in\n * https://dicom.nema.org/medical/dicom/current/output/html/part03.html#sect_C.11.2.1.2.1\n * if (x <= c - 0.5 - (w-1) /2), then y = ymin\n * else if (x > c - 0.5 + (w-1) /2), then y = ymax\n * else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax- ymin) + ymin\n * @param windowWidth - the width of the window in HU\n * @param windowCenter - The center of the window.\n * @returns a JavaScript object with two properties: lower and upper.\n */\nfunction toLowHighRange(\n  windowWidth: number,\n  windowCenter: number\n): {\n  lower: number;\n  upper: number;\n} {\n  const lower = windowCenter - 0.5 - (windowWidth - 1) / 2;\n  const upper = windowCenter - 0.5 + (windowWidth - 1) / 2;\n\n  return { lower, upper };\n}\n\nexport { toWindowLevel, toLowHighRange };\n","/**\n * Calculate the minimum and maximum values in an Array\n *\n * @param storedPixelData - The pixel data to calculate the min and max values for\n * @returns an object with two properties: min and max\n */\nexport default function getMinMax(storedPixelData: number[]): {\n  min: number;\n  max: number;\n} {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n\n  let max = storedPixelData[0];\n\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max,\n  };\n}\n","import {\n  VolumeActor,\n  IImageVolume,\n  VOIRange,\n  ScalingParameters,\n} from '../../types';\nimport { loadAndCacheImage } from '../../loaders/imageLoader';\nimport * as metaData from '../../metaData';\nimport { getMinMax, windowLevel } from '../../utilities';\nimport { RequestType } from '../../enums';\n\nconst PRIORITY = 0;\nconst REQUEST_TYPE = RequestType.Prefetch;\n\n/**\n * It sets the default window level of an image volume based on the VOI.\n * It first look for the VOI in the metadata and if it is not found, it\n * loads the middle slice image (middle imageId) and based on its min\n * and max pixel values, it calculates the VOI.\n * Finally it sets the VOI on the volumeActor transferFunction\n * @param volumeActor - The volume actor\n * @param imageVolume - The image volume that we want to set the VOI for.\n */\nasync function setDefaultVolumeVOI(\n  volumeActor: VolumeActor,\n  imageVolume: IImageVolume,\n  use16BitTexture: boolean\n): Promise<void> {\n  let voi = getVOIFromMetadata(imageVolume);\n\n  if (!voi) {\n    voi = await getVOIFromMinMax(imageVolume, use16BitTexture);\n  }\n\n  if (!voi || voi.lower === undefined || voi.upper === undefined) {\n    throw new Error(\n      'Could not get VOI from metadata, nor from the min max of the image middle slice'\n    );\n  }\n\n  voi = handlePreScaledVolume(imageVolume, voi);\n  const { lower, upper } = voi;\n\n  volumeActor\n    .getProperty()\n    .getRGBTransferFunction(0)\n    .setMappingRange(lower, upper);\n}\n\nfunction handlePreScaledVolume(imageVolume: IImageVolume, voi: VOIRange) {\n  const imageIds = imageVolume.imageIds;\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageIds[imageIdIndex];\n\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n\n  /**\n   * If the volume is prescaled and the modality is PT Sometimes you get super high\n   * values at the peak and it skews the min/max so nothing useful is displayed\n   * Therefore, we follow the majority of other viewers and we set the min/max\n   * for the scaled PT to be 0, 5\n   */\n  if (_isCurrentImagePTPrescaled(generalSeriesModule.modality, imageVolume)) {\n    return {\n      lower: 0,\n      upper: 5,\n    };\n  }\n\n  return voi;\n}\n\n/**\n * Get the VOI from the metadata of the middle slice of the image volume. It checks\n * the metadata for the VOI and if it is not found, it returns null\n *\n * @param imageVolume - The image volume that we want to get the VOI from.\n * @returns VOIRange with lower and upper values\n */\nfunction getVOIFromMetadata(imageVolume: IImageVolume): VOIRange {\n  const { imageIds } = imageVolume;\n\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageIds[imageIdIndex];\n\n  const voiLutModule = metaData.get('voiLutModule', imageId);\n\n  if (voiLutModule && voiLutModule.windowWidth && voiLutModule.windowCenter) {\n    const { windowWidth, windowCenter } = voiLutModule;\n\n    const voi = {\n      windowWidth: Array.isArray(windowWidth) ? windowWidth[0] : windowWidth,\n      windowCenter: Array.isArray(windowCenter)\n        ? windowCenter[0]\n        : windowCenter,\n    };\n\n    const { lower, upper } = windowLevel.toLowHighRange(\n      Number(voi.windowWidth),\n      Number(voi.windowCenter)\n    );\n\n    return {\n      lower,\n      upper,\n    };\n  }\n}\n\n/**\n * It loads the middle slice image (middle imageId) and based on its min\n * and max pixel values, it calculates the VOI.\n *\n * @param imageVolume - The image volume that we want to get the VOI from.\n * @returns The VOIRange with lower and upper values\n */\nasync function getVOIFromMinMax(\n  imageVolume: IImageVolume,\n  use16BitTexture: boolean\n): Promise<VOIRange> {\n  const { imageIds } = imageVolume;\n  const scalarData = imageVolume.getScalarData();\n\n  // Get the middle image from the list of imageIds\n  const imageIdIndex = Math.floor(imageIds.length / 2);\n  const imageId = imageVolume.imageIds[imageIdIndex];\n  const generalSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n  const { modality } = generalSeriesModule;\n  const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n\n  const numImages = imageIds.length;\n  const bytesPerImage = scalarData.byteLength / numImages;\n  const voxelsPerImage = scalarData.length / numImages;\n  const bytePerPixel = scalarData.BYTES_PER_ELEMENT;\n\n  const scalingParameters: ScalingParameters = {\n    rescaleSlope: modalityLutModule.rescaleSlope,\n    rescaleIntercept: modalityLutModule.rescaleIntercept,\n    modality,\n  };\n\n  let scalingParametersToUse;\n  if (modality === 'PT') {\n    const suvFactor = metaData.get('scalingModule', imageId);\n\n    if (suvFactor) {\n      scalingParametersToUse = {\n        ...scalingParameters,\n        suvbw: suvFactor.suvbw,\n      };\n    }\n  }\n\n  const byteOffset = imageIdIndex * bytesPerImage;\n\n  const options = {\n    targetBuffer: {\n      type: use16BitTexture ? undefined : 'Float32Array',\n    },\n    priority: PRIORITY,\n    requestType: REQUEST_TYPE,\n    preScale: {\n      enabled: true,\n      scalingParameters: scalingParametersToUse,\n    },\n  };\n\n  // Loading the middle slice image for a volume has two scenarios, the first one is that\n  // uses the same volumeLoader which might not resolve to an image (since for performance\n  // reasons volumes' pixelData is set via offset and length on the volume arrayBuffer\n  // when each slice is loaded). The second scenario is that the image might not reach\n  // to the volumeLoader, and an already cached image (with Image object) is used\n  // instead. For the first scenario, we use the arrayBuffer of the volume to get the correct\n  // slice for the imageScalarData, and for the second scenario we use the getPixelData\n  // on the Cornerstone IImage object to get the pixel data.\n  const image = await loadAndCacheImage(imageId, options);\n\n  let imageScalarData;\n  if (!image) {\n    imageScalarData = _getImageScalarDataFromImageVolume(\n      imageVolume,\n      byteOffset,\n      bytePerPixel,\n      voxelsPerImage\n    );\n  } else {\n    imageScalarData = image.getPixelData();\n  }\n\n  // Get the min and max pixel values of the middle slice\n  const { min, max } = getMinMax(imageScalarData);\n\n  return {\n    lower: min,\n    upper: max,\n  };\n}\n\nfunction _getImageScalarDataFromImageVolume(\n  imageVolume,\n  byteOffset,\n  bytePerPixel,\n  voxelsPerImage\n) {\n  const { scalarData } = imageVolume;\n  const { volumeBuffer } = scalarData;\n  if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n    byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n  }\n\n  const TypedArray = scalarData.constructor;\n  const imageScalarData = new TypedArray(voxelsPerImage);\n\n  const volumeBufferView = new TypedArray(\n    volumeBuffer,\n    byteOffset,\n    voxelsPerImage\n  );\n\n  imageScalarData.set(volumeBufferView);\n\n  return imageScalarData;\n}\n\nfunction _isCurrentImagePTPrescaled(modality, imageVolume) {\n  if (modality !== 'PT' || !imageVolume.isPreScaled) {\n    return false;\n  }\n\n  if (!imageVolume.scaling?.PT.suvbw) {\n    return false;\n  }\n\n  return true;\n}\n\nexport default setDefaultVolumeVOI;\n","import vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\n\nimport { VolumeActor } from './../../types/IActor';\nimport { VoiModifiedEventDetail } from './../../types/EventTypes';\nimport { loadVolume } from '../../loaders/volumeLoader';\nimport createVolumeMapper from './createVolumeMapper';\nimport BlendModes from '../../enums/BlendModes';\nimport { triggerEvent } from '../../utilities';\nimport { Events } from '../../enums';\nimport setDefaultVolumeVOI from './setDefaultVolumeVOI';\n\ninterface createVolumeActorInterface {\n  volumeId: string;\n  callback?: ({\n    volumeActor,\n    volumeId,\n  }: {\n    volumeActor: VolumeActor;\n    volumeId: string;\n  }) => void;\n  blendMode?: BlendModes;\n}\n\n/**\n * Given a volumeId, it creates a vtk volume actor and returns it. If\n * callback is provided, it will be called with the volume actor and the\n * volumeId. If blendMode is provided, it will be set on the volume actor.\n *\n * @param props - createVolumeActorInterface\n * @returns A promise that resolves to a VolumeActor.\n */\nasync function createVolumeActor(\n  props: createVolumeActorInterface,\n  element: HTMLDivElement,\n  viewportId: string,\n  suppressEvents = false,\n  use16BitTexture = false\n): Promise<VolumeActor> {\n  const { volumeId, callback, blendMode } = props;\n\n  const imageVolume = await loadVolume(volumeId);\n\n  if (!imageVolume) {\n    throw new Error(\n      `imageVolume with id: ${imageVolume.volumeId} does not exist`\n    );\n  }\n\n  const { imageData, vtkOpenGLTexture } = imageVolume;\n\n  const volumeMapper = createVolumeMapper(imageData, vtkOpenGLTexture);\n\n  if (blendMode) {\n    volumeMapper.setBlendMode(blendMode);\n  }\n\n  const volumeActor = vtkVolume.newInstance();\n  volumeActor.setMapper(volumeMapper);\n\n  const numberOfComponents = imageData\n    .getPointData()\n    .getScalars()\n    .getNumberOfComponents();\n\n  if (numberOfComponents === 3) {\n    volumeActor.getProperty().setIndependentComponents(false);\n  }\n\n  // If the volume is composed of imageIds, we can apply a default VOI based\n  // on either the metadata or the min/max of the middle slice. Example of other\n  // types of volumes which might not be composed of imageIds would be e.g., nrrd, nifti\n  // format volumes\n  if (imageVolume.imageIds) {\n    await setDefaultVolumeVOI(volumeActor, imageVolume, use16BitTexture);\n  }\n\n  if (callback) {\n    callback({ volumeActor, volumeId });\n  }\n\n  if (!suppressEvents) {\n    triggerVOIModified(element, viewportId, volumeActor, volumeId);\n  }\n\n  return volumeActor;\n}\n\nfunction triggerVOIModified(\n  element: HTMLDivElement,\n  viewportId: string,\n  volumeActor: VolumeActor,\n  volumeId: string\n) {\n  const voiRange = volumeActor\n    .getProperty()\n    .getRGBTransferFunction(0)\n    .getRange();\n\n  const voiModifiedEventDetail: VoiModifiedEventDetail = {\n    viewportId,\n    range: {\n      lower: voiRange[0],\n      upper: voiRange[1],\n    },\n    volumeId,\n  };\n\n  triggerEvent(element, Events.VOI_MODIFIED, voiModifiedEventDetail);\n}\n\nexport default createVolumeActor;\n","const VIEWPORT_ELEMENT = 'viewport-element';\nconst CANVAS_CSS_CLASS = 'cornerstone-canvas';\n\n/**\n * Create a canvas and append it to the element\n *\n * @param element - An HTML Element\n * @returns canvas - A Canvas DOM element\n */\nfunction createCanvas(element: Element | HTMLDivElement): HTMLCanvasElement {\n  const canvas = document.createElement('canvas');\n\n  canvas.style.position = 'absolute';\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.classList.add(CANVAS_CSS_CLASS);\n  element.appendChild(canvas);\n\n  return canvas;\n}\n\n/**\n * Creates an internal div that will contain canvas and SVG layer as children\n * @param element - An HTML Element\n * @returns div Cornerstone internal div that will include the canvas and SVG\n * as its children\n */\nexport function createViewportElement(element: HTMLDivElement): HTMLDivElement {\n  const div = document.createElement('div');\n  div.style.position = 'relative';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  div.classList.add(VIEWPORT_ELEMENT);\n  element.appendChild(div);\n\n  return div;\n}\n\n/**\n * Create a canvas or returns the one that already exists for a given element.\n * It first checks if the element has a canvas, if not it creates one and returns it.\n *\n * @param element - An HTML Element\n * @returns canvas a Canvas DOM element\n */\nexport default function getOrCreateCanvas(\n  element: HTMLDivElement\n): HTMLCanvasElement {\n  const canvasSelector = `canvas.${CANVAS_CSS_CLASS}`;\n  const viewportElement = `div.${VIEWPORT_ELEMENT}`;\n\n  // Internal div with `relative` positioning to enable absolute positioning\n  // of the canvas and svg layer.\n  const internalDiv =\n    element.querySelector(viewportElement) || createViewportElement(element);\n\n  return internalDiv.querySelector(canvasSelector) || createCanvas(internalDiv);\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { mat3, mat4, vec3 } from 'gl-matrix';\nimport macro from '@kitware/vtk.js/macros';\nimport vtkOpenGLVolumeMapper from '@kitware/vtk.js/Rendering/OpenGL/VolumeMapper';\nimport { Filter } from '@kitware/vtk.js/Rendering/OpenGL/Texture/Constants';\nimport { VtkDataTypes } from '@kitware/vtk.js/Common/Core/DataArray/Constants';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport { Representation } from '@kitware/vtk.js/Rendering/Core/Property/Constants';\n\nconst { vtkWarningMacro } = macro;\n/**\n * vtkStreamingOpenGLVolumeMapper - A dervied class of the core vtkOpenGLVolumeMapper class.\n * This class  replaces the buildBufferObjects function so that we progressively upload our textures\n * into GPU memory using the new methods on vtkStreamingOpenGLTexture.\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkStreamingOpenGLVolumeMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkStreamingOpenGLVolumeMapper');\n\n  /**\n   * buildBufferObjects - A fork of vtkOpenGLVolumeMapper's buildBufferObjects method.\n   * This fork performs most of the same actions, but builds the textures progressively using\n   * vtkStreamingOpenGLTexture's methods, and also prevents recomputation of the texture for each\n   * vtkStreamingOpenGLVolumeMapper using the texture.\n   *\n   *\n   * @param {*} ren The renderer.\n   * @param {*} actor The actor to build the buffer objects for.\n   */\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentInput;\n    if (!image) {\n      return;\n    }\n\n    const scalars = image.getPointData() && image.getPointData().getScalars();\n    if (!scalars) {\n      return;\n    }\n\n    const vprop = actor.getProperty();\n\n    if (!model.jitterTexture.getHandle()) {\n      const oTable = new Uint8Array(32 * 32);\n      for (let i = 0; i < 32 * 32; ++i) {\n        oTable[i] = 255.0 * Math.random();\n      }\n      model.jitterTexture.setMinificationFilter(Filter.LINEAR);\n      model.jitterTexture.setMagnificationFilter(Filter.LINEAR);\n      model.jitterTexture.create2DFromRaw(\n        32,\n        32,\n        1,\n        VtkDataTypes.UNSIGNED_CHAR,\n        oTable\n      );\n    }\n\n    const numComp = scalars.getNumberOfComponents();\n    const iComps = vprop.getIndependentComponents();\n    const numIComps = iComps ? numComp : 1;\n\n    // rebuild opacity tfun?\n    let toString = `${vprop.getMTime()}`;\n    if (model.opacityTextureString !== toString) {\n      const oWidth = 1024;\n      const oSize = oWidth * 2 * numIComps;\n      const ofTable = new Float32Array(oSize);\n      const tmpTable = new Float32Array(oWidth);\n\n      for (let c = 0; c < numIComps; ++c) {\n        const ofun = vprop.getScalarOpacity(c);\n        const opacityFactor =\n          model.renderable.getSampleDistance() /\n          vprop.getScalarOpacityUnitDistance(c);\n\n        const oRange = ofun.getRange();\n        ofun.getTable(oRange[0], oRange[1], oWidth, tmpTable, 1);\n        // adjust for sample distance etc\n        for (let i = 0; i < oWidth; ++i) {\n          ofTable[c * oWidth * 2 + i] =\n            1.0 - (1.0 - tmpTable[i]) ** opacityFactor;\n          ofTable[c * oWidth * 2 + i + oWidth] = ofTable[c * oWidth * 2 + i];\n        }\n      }\n\n      model.opacityTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.opacityTexture.setMinificationFilter(Filter.LINEAR);\n      model.opacityTexture.setMagnificationFilter(Filter.LINEAR);\n\n      // use float texture where possible because we really need the resolution\n      // for this table. Errors in low values of opacity accumulate to\n      // visible artifacts. High values of opacity quickly terminate without\n      // artifacts.\n      if (\n        model._openGLRenderWindow.getWebgl2() ||\n        (model.context.getExtension('OES_texture_float') &&\n          model.context.getExtension('OES_texture_float_linear'))\n      ) {\n        model.opacityTexture.create2DFromRaw(\n          oWidth,\n          2 * numIComps,\n          1,\n          VtkDataTypes.FLOAT,\n          ofTable\n        );\n      } else {\n        const oTable = new Uint8Array(oSize);\n        for (let i = 0; i < oSize; ++i) {\n          oTable[i] = 255.0 * ofTable[i];\n        }\n        model.opacityTexture.create2DFromRaw(\n          oWidth,\n          2 * numIComps,\n          1,\n          VtkDataTypes.UNSIGNED_CHAR,\n          oTable\n        );\n      }\n      model.opacityTextureString = toString;\n    }\n\n    // rebuild color tfun?\n    toString = `${vprop.getMTime()}`;\n\n    if (model.colorTextureString !== toString) {\n      const cWidth = 1024;\n      const cSize = cWidth * 2 * numIComps * 3;\n      const cTable = new Uint8Array(cSize);\n      const tmpTable = new Float32Array(cWidth * 3);\n\n      for (let c = 0; c < numIComps; ++c) {\n        const cfun = vprop.getRGBTransferFunction(c);\n        const cRange = cfun.getRange();\n        cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n          cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n        }\n      }\n\n      model.colorTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n\n      model.colorTexture.create2DFromRaw(\n        cWidth,\n        2 * numIComps,\n        3,\n        VtkDataTypes.UNSIGNED_CHAR,\n        cTable\n      );\n      model.colorTextureString = toString;\n    }\n\n    // rebuild the scalarTexture if the data has changed\n    toString = `${image.getMTime()}`;\n\n    if (model.scalarTextureString !== toString) {\n      // Build the textures\n      const dims = image.getDimensions();\n\n      const previousTextureParameters =\n        model.scalarTexture.getTextureParameters();\n\n      const dataType = image.getPointData().getScalars().getDataType();\n      const data = image.getPointData().getScalars().getData();\n\n      let shouldReset = true;\n\n      if (\n        previousTextureParameters.dataType &&\n        previousTextureParameters.dataType === dataType\n      ) {\n        const previousTextureSize =\n          previousTextureParameters.width *\n          previousTextureParameters.height *\n          previousTextureParameters.depth *\n          previousTextureParameters.numComps;\n        if (data.length === previousTextureSize) {\n          shouldReset = false;\n        }\n      }\n\n      if (shouldReset) {\n        model.scalarTexture.setOglNorm16Ext(\n          model.context.getExtension('EXT_texture_norm16')\n        );\n\n        model.scalarTexture.releaseGraphicsResources(model._openGLRenderWindow);\n        model.scalarTexture.resetFormatAndType();\n\n        model.scalarTexture.create3DFilterableFromRaw(\n          dims[0],\n          dims[1],\n          dims[2],\n          numComp,\n          scalars.getDataType(),\n          scalars.getData(),\n          model.renderable.getPreferSizeOverAccuracy()\n        );\n      } else {\n        model.scalarTexture.deactivate();\n        model.scalarTexture.update3DFromRaw(data);\n      }\n\n      model.scalarTextureString = toString;\n    }\n\n    if (!model.tris.getCABO().getElementCount()) {\n      // build the CABO\n      const ptsArray = new Float32Array(12);\n      for (let i = 0; i < 4; i++) {\n        ptsArray[i * 3] = (i % 2) * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = -1.0;\n      }\n\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray,\n      });\n      points.setName('points');\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray,\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        cellOffset: 0,\n      });\n    }\n\n    model.VBOBuildTime.modified();\n  };\n\n  // publicAPI.getRenderTargetSize = () => {\n  //   // https://github.com/Kitware/vtk-js/blob/master/Sources/Rendering/OpenGL/VolumeMapper/index.js#L952\n  //   if (model.lastXYF > 1.43) {\n  //     const sz = model.framebuffer.getSize()\n  //     return [model.fvp[0] * sz[0], model.fvp[1] * sz[1]]\n  //   }\n\n  //   // This seems wrong, it assumes the renderWindow only has one renderer\n  //   // but I don't know if this stuff is correct...\n\n  //   const { usize, vsize } = model.openGLRenderer.getTiledSizeAndOrigin()\n\n  //   return [usize, vsize]\n  // }\n\n  // publicAPI.getRenderTargetSize = () => {\n  //   if (model._useSmallViewport) {\n  //     return [model._smallViewportWidth, model._smallViewportHeight]\n  //   }\n\n  //   return model._openGLRenderWindow.getFramebufferSize()\n  // }\n\n  publicAPI.getRenderTargetSize = () => {\n    if (model._useSmallViewport) {\n      return [model._smallViewportWidth, model._smallViewportHeight];\n    }\n\n    const { usize, vsize } = model._openGLRenderer.getTiledSizeAndOrigin();\n\n    return [usize, vsize];\n  };\n\n  publicAPI.getRenderTargetOffset = () => {\n    const { lowerLeftU, lowerLeftV } =\n      model._openGLRenderer.getTiledSizeAndOrigin();\n\n    return [lowerLeftU, lowerLeftV];\n  };\n\n  // TODO: it seems like this may be needed to reset the GPU memory associated\n  // with a volume\n  // publicAPI.hardReset = () => {\n  //   model.opacityTexture.releaseGraphicsResources(model._openGLRenderWindow);\n  //   model.colorTexture.releaseGraphicsResources(model._openGLRenderWindow);\n  //   model.scalarTexture.setOglNorm16Ext(\n  //     model.context.getExtension('EXT_texture_norm16')\n  //   );\n  //   model.scalarTexture.releaseGraphicsResources(model._openGLRenderWindow);\n  //   model.scalarTexture.resetFormatAndType();\n  // };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkOpenGLVolumeMapper.extend(publicAPI, model, initialValues);\n\n  model.scalarTexture = initialValues.scalarTexture;\n  model.previousState = {};\n\n  // Object methods\n  vtkStreamingOpenGLVolumeMapper(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkStreamingOpenGLVolumeMapper'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from '@kitware/vtk.js/macros';\n// import vtkGenericWidgetRepresentation from '@kitware/vtk.js/Rendering/SceneGraph/GenericWidgetRepresentation'\nimport vtkOpenGLActor from '@kitware/vtk.js/Rendering/OpenGL/Actor';\nimport vtkOpenGLActor2D from '@kitware/vtk.js/Rendering/OpenGL/Actor2D';\nimport vtkOpenGLCamera from '@kitware/vtk.js/Rendering/OpenGL/Camera';\nimport vtkOpenGLGlyph3DMapper from '@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper';\nimport vtkOpenGLImageMapper from '@kitware/vtk.js/Rendering/OpenGL/ImageMapper';\nimport vtkOpenGLImageSlice from '@kitware/vtk.js/Rendering/OpenGL/ImageSlice';\nimport vtkOpenGLPixelSpaceCallbackMapper from '@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper';\nimport vtkOpenGLPolyDataMapper from '@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper';\nimport vtkOpenGLRenderer from '@kitware/vtk.js/Rendering/OpenGL/Renderer';\nimport vtkOpenGLSkybox from '@kitware/vtk.js/Rendering/OpenGL/Skybox';\nimport vtkOpenGLSphereMapper from '@kitware/vtk.js/Rendering/OpenGL/SphereMapper';\nimport vtkOpenGLStickMapper from '@kitware/vtk.js/Rendering/OpenGL/StickMapper';\nimport vtkOpenGLTexture from '@kitware/vtk.js/Rendering/OpenGL/Texture';\nimport vtkOpenGLVolume from '@kitware/vtk.js/Rendering/OpenGL/Volume';\nimport vtkOpenGLVolumeMapper from '@kitware/vtk.js/Rendering/OpenGL/VolumeMapper';\nimport vtkViewNodeFactory from '@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory';\nimport vtkStreamingOpenGLVolumeMapper from './vtkStreamingOpenGLVolumeMapper';\n\n/**\n * vtkStreamingOpenGLViewNodeFactory - A fork of the vtkOpenGLViewNodeFactory,\n * so that we can inject our custom derived \"Streaming\" classes.\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkStreamingOpenGLViewNodeFactory(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkStreamingOpenGLViewNodeFactory');\n\n  /**\n   * createNode - fork of createNode from vtkOpenGLViewNodeFactory.\n   * This fork is required to inject the properties from model.getModelInitialValues.\n   *\n   * @param {object} dataObject An instance of a vtk.js class.\n   */\n  publicAPI.createNode = (dataObject) => {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n\n    let cpt = 0;\n    let className = dataObject.getClassName(cpt++);\n    let isObject = false;\n    const keys = Object.keys(model.overrides);\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n\n    if (!isObject) {\n      return null;\n    }\n\n    const initialValues = model.getModelInitialValues(dataObject);\n\n    const vn = model.overrides[className](initialValues);\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n\n  /**\n   * getModelInitialValues - This function allows us to pass textures down from our\n   * vtkSharedVolumeMapper to new instances of vtkStreamingOpenGLVolumeMapper.\n   * The prevents us from sharing memory.\n   *\n   * TODO: It would be beneficial to push similar, but generalized, functionality\n   * back to vtk.js in the future.\n   *\n   * @param {object} dataObject An instance of a vtk.js class.\n   */\n  model.getModelInitialValues = (dataObject) => {\n    const initialValues = {};\n\n    const className = dataObject.getClassName();\n\n    if (className === 'vtkSharedVolumeMapper') {\n      initialValues.scalarTexture = dataObject.getScalarTexture();\n    }\n\n    return initialValues;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNodeFactory.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkStreamingOpenGLViewNodeFactory(publicAPI, model);\n\n  // Initialization\n  publicAPI.registerOverride('vtkActor', vtkOpenGLActor.newInstance);\n  publicAPI.registerOverride('vtkActor2D', vtkOpenGLActor2D.newInstance);\n  publicAPI.registerOverride('vtkCamera', vtkOpenGLCamera.newInstance);\n  publicAPI.registerOverride(\n    'vtkGlyph3DMapper',\n    vtkOpenGLGlyph3DMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkImageMapper',\n    vtkOpenGLImageMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkImageSlice', vtkOpenGLImageSlice.newInstance);\n  publicAPI.registerOverride('vtkMapper', vtkOpenGLPolyDataMapper.newInstance);\n  publicAPI.registerOverride(\n    'vtkPixelSpaceCallbackMapper',\n    vtkOpenGLPixelSpaceCallbackMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkRenderer', vtkOpenGLRenderer.newInstance);\n  publicAPI.registerOverride('vtkSkybox', vtkOpenGLSkybox.newInstance);\n  publicAPI.registerOverride(\n    'vtkSphereMapper',\n    vtkOpenGLSphereMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkStickMapper',\n    vtkOpenGLStickMapper.newInstance\n  );\n  publicAPI.registerOverride('vtkTexture', vtkOpenGLTexture.newInstance);\n  publicAPI.registerOverride('vtkVolume', vtkOpenGLVolume.newInstance);\n  publicAPI.registerOverride(\n    'vtkVolumeMapper',\n    vtkOpenGLVolumeMapper.newInstance\n  );\n  publicAPI.registerOverride(\n    'vtkSharedVolumeMapper',\n    vtkStreamingOpenGLVolumeMapper.newInstance\n  );\n  // publicAPI.registerOverride(\n  //   'vtkWidgetRepresentation',\n  //   vtkGenericWidgetRepresentation.newInstance\n  // )\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkStreamingOpenGLViewNodeFactory'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from '@kitware/vtk.js/macros';\nimport vtkOpenGLRenderWindow from '@kitware/vtk.js/Rendering/OpenGL/RenderWindow';\nimport vtkStreamingOpenGLViewNodeFactory from './vtkStreamingOpenGLViewNodeFactory';\n\n/**\n * vtkStreamingOpenGLRenderWindow - A dervied class of the core vtkOpenGLRenderWindow class.\n * The main purpose for this class extension is to add in our own node factory, so we can use\n * our extended \"streaming\" classes for progressive texture loading.\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkStreamingOpenGLRenderWindow(publicAPI, model) {\n  model.classHierarchy.push('vtkStreamingOpenGLRenderWindow');\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, initialValues);\n\n  vtkOpenGLRenderWindow.extend(publicAPI, model, initialValues);\n\n  model.myFactory = vtkStreamingOpenGLViewNodeFactory.newInstance();\n  /* eslint-disable no-use-before-define */\n  model.myFactory.registerOverride('vtkRenderWindow', newInstance);\n  /* eslint-enable no-use-before-define */\n\n  // Object methods\n  vtkStreamingOpenGLRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(\n  extend,\n  'vtkStreamingOpenGLRenderWindow'\n);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from '@kitware/vtk.js/macros';\nimport vtkStreamingOpenGLRenderWindow from './vtkStreamingOpenGLRenderWindow';\nimport vtkRenderer from '@kitware/vtk.js/Rendering/Core/Renderer';\nimport vtkRenderWindow from '@kitware/vtk.js/Rendering/Core/RenderWindow';\nimport vtkRenderWindowInteractor from '@kitware/vtk.js/Rendering/Core/RenderWindowInteractor';\n\n// Load basic classes for vtk() factory\nimport '@kitware/vtk.js/Common/Core/Points';\nimport '@kitware/vtk.js/Common/Core/DataArray';\nimport '@kitware/vtk.js/Common/DataModel/PolyData';\nimport '@kitware/vtk.js/Rendering/Core/Actor';\nimport '@kitware/vtk.js/Rendering/Core/Mapper';\n\n/**\n * vtkOffscreenMultiRenderWindow - A class to deal with offscreen rendering with multiple renderers.\n *\n * This class is based on the vtkGenericRenderWindow with two key differences:\n * - the vtkGenericRenderWindow had a renderer at the top level, with helpers to get it from the renderWindow.\n *   although you could add more renderers, this gave special status to the first viewport. Which was confusing.\n * - When checking the size of the container element we no longer check the client size, as the canvas is offscreen.\n * - We aren't using interactor styles, so don't set one up.\n *\n * Additionally this class has some new helpers to easily add/associate renderers to different viewportIds.\n *\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkOffscreenMultiRenderWindow(publicAPI, model) {\n  // Capture resize trigger method to remove from publicAPI\n  const invokeResize = publicAPI.invokeResize;\n  delete publicAPI.invokeResize;\n\n  // VTK renderWindow. No renderers set by default\n  model.renderWindow = vtkRenderWindow.newInstance();\n  model.rendererMap = {};\n\n  // OpenGLRenderWindow\n  model.openGLRenderWindow = vtkStreamingOpenGLRenderWindow.newInstance();\n  model.renderWindow.addView(model.openGLRenderWindow);\n\n  // Interactor\n  model.interactor = vtkRenderWindowInteractor.newInstance();\n  model.interactor.setView(model.openGLRenderWindow);\n  model.interactor.initialize();\n\n  publicAPI.addRenderer = ({ viewport, id, background }) => {\n    const renderer = vtkRenderer.newInstance({\n      viewport,\n      background: background || model.background,\n    });\n\n    model.renderWindow.addRenderer(renderer);\n    model.rendererMap[id] = renderer;\n  };\n\n  publicAPI.destroy = () => {\n    const rwi = model.renderWindow.getInteractor();\n    rwi.delete();\n  };\n\n  publicAPI.removeRenderer = (id) => {\n    const renderer = publicAPI.getRenderer(id);\n    model.renderWindow.removeRenderer(renderer);\n    renderer.delete();\n    delete model.rendererMap[id];\n  };\n\n  publicAPI.getRenderer = (id) => {\n    return model.rendererMap[id];\n  };\n\n  publicAPI.getRenderers = () => {\n    const { rendererMap } = model;\n\n    const renderers = Object.keys(rendererMap).map((id) => {\n      return { id, renderer: rendererMap[id] };\n    });\n\n    return renderers;\n  };\n\n  // Handle window resize\n  publicAPI.resize = () => {\n    if (model.container) {\n      // Don't use getBoundingClientRect() as in vtkGenericRenderWindow as is an offscreen canvas.\n      const { width, height } = model.container;\n\n      // Note: we do not scale by devicePixelRatio here because it has already\n      // been done when adding the offscreenCanvas viewport representations\n      model.openGLRenderWindow.setSize(Math.floor(width), Math.floor(height));\n      invokeResize();\n      model.renderWindow.render();\n    }\n  };\n\n  // Handle DOM container relocation\n  publicAPI.setContainer = (el) => {\n    // Switch container\n    model.container = el;\n    model.openGLRenderWindow.setContainer(model.container);\n  };\n\n  // Properly release GL context\n  publicAPI.delete = macro.chain(\n    publicAPI.setContainer,\n    publicAPI.destroy,\n    model.openGLRenderWindow.delete,\n    publicAPI.delete\n  );\n\n  publicAPI.resize();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  background: [0.0, 0.0, 0.0],\n  container: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, [\n    'renderWindow',\n    'openGLRenderWindow',\n    'interactor',\n    'container',\n  ]);\n  macro.event(publicAPI, model, 'resize');\n\n  // Object specific methods\n  vtkOffscreenMultiRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import cache, { Cache } from './cache';\nimport ImageVolume from './classes/ImageVolume';\n\nexport { ImageVolume, Cache };\nexport default cache;\n","import { Types } from '..';\n\ntype actorTypes = 'vtkActor' | 'vtkVolume' | 'vtkImageSlice';\n\n/**\n * Checks if a vtk Actor is an image actor (vtkVolume or vtkImageSlice) otherwise returns false.\n *\n * @param actor - actor\n * @returns A boolean value.\n */\nexport function isImageActor(actorEntry: Types.ActorEntry): boolean {\n  return (\n    actorIsA(actorEntry, 'vtkVolume') || actorIsA(actorEntry, 'vtkImageSlice')\n  );\n}\n\nexport function actorIsA(\n  actorEntry: Types.ActorEntry,\n  actorType: actorTypes\n): boolean {\n  const actor = actorEntry.actor;\n\n  return !!actor.isA(actorType);\n}\n","import { vec3 } from 'gl-matrix';\nimport { IImageVolume, Point3 } from '../types';\n\n/**\n * Given an `imageVolume` and a normal direction (`viewPlaneNormal`), calculates\n * the spacing between voxels in the normal direction. If (`viewPlaneNormal`) is\n * parallel to one of the directions you will obtain the spacing in that direction.\n * Otherwise each of the `imageVolume`'s directions are projected onto the volume,\n * so that you obtain a spacing of the order of \"seeing a new set of voxels if the camera where to dolly\".\n *\n * @param imageVolume - The image volume to calculate the spacing in the normal direction.\n * @param viewPlaneNormal - The normal direction of the view plane.\n * @returns\n */\nexport default function getSpacingInNormalDirection(\n  imageVolume: IImageVolume,\n  viewPlaneNormal: Point3\n): number {\n  const { direction, spacing } = imageVolume;\n\n  // Calculate size of spacing vector in normal direction\n  const iVector = direction.slice(0, 3) as Point3;\n  const jVector = direction.slice(3, 6) as Point3;\n  const kVector = direction.slice(6, 9) as Point3;\n\n  const dotProducts = [\n    vec3.dot(iVector, <vec3>viewPlaneNormal),\n    vec3.dot(jVector, <vec3>viewPlaneNormal),\n    vec3.dot(kVector, <vec3>viewPlaneNormal),\n  ];\n\n  const projectedSpacing = vec3.create();\n\n  vec3.set(\n    projectedSpacing,\n    dotProducts[0] * spacing[0],\n    dotProducts[1] * spacing[1],\n    dotProducts[2] * spacing[2]\n  );\n\n  const spacingInNormalDirection = vec3.length(projectedSpacing);\n\n  return spacingInNormalDirection;\n}\n","import { vec3 } from 'gl-matrix';\nimport * as metaData from '../metaData';\nimport type { IImageVolume, Point3 } from '../types';\n\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection';\nimport { EPSILON } from '../constants';\n\n/**\n * Given an image, a point in space and the viewPlaneNormal it returns the\n * closest imageId of the image volume that is within half voxel spacing\n * of the point in space.\n * @param imageVolume - The image volume\n * @param worldPos - The position in the world coordinate system (from mouse click)\n * @param viewPlaneNormal - The normal vector of the viewport\n *\n * @returns The imageId for the tool.\n */\nexport default function getClosestImageId(\n  imageVolume: IImageVolume,\n  worldPos: Point3,\n  viewPlaneNormal: Point3\n): string {\n  if (!imageVolume) {\n    return;\n  }\n\n  const { direction, imageIds } = imageVolume;\n\n  if (!imageIds || !imageIds.length) {\n    return;\n  }\n\n  // 1. Get ScanAxis vector\n  const kVector = direction.slice(6, 9);\n\n  // 2. Check if scanAxis is not parallel to camera viewPlaneNormal\n  const dotProducts = vec3.dot(kVector as Point3, <vec3>viewPlaneNormal);\n\n  // 2.a if imagePlane is not parallel to the camera: tool is not drawn on an\n  // imaging plane, return\n  if (Math.abs(dotProducts) < 1 - EPSILON) {\n    return;\n  }\n\n  // 3. Calculate Spacing the in the normal direction, this will get used to\n  // check whether we are withing a slice\n  const spacingInNormalDirection = getSpacingInNormalDirection(\n    imageVolume,\n    viewPlaneNormal\n  );\n\n  const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n\n  // 4. Iterate over all imageIds and check if the tool point (worldPos) is\n  // withing one of the slices defined by an imageId\n  let imageIdForTool;\n  for (let i = 0; i < imageIds.length; i++) {\n    const imageId = imageIds[i];\n\n    // 4.a Get metadata for the imageId\n    const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n\n    // 4.b Calculate the direction vector from annotation. point to the first voxel\n    // of this image defined by imageId\n    const dir = vec3.create();\n    vec3.sub(dir, worldPos, imagePositionPatient);\n\n    // 4.c Calculate the distance between the vector above and the viewplaneNormal\n    // i.e., projected distance\n    const dot = vec3.dot(dir, viewPlaneNormal);\n\n    // 4.d If the distance is withing range, return the imageId\n    if (Math.abs(dot) < halfSpacingInNormalDirection) {\n      imageIdForTool = imageId;\n    }\n  }\n\n  return imageIdForTool;\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\n\nexport default function getVoiFromSigmoidRGBTransferFunction(\n  cfun: vtkColorTransferFunction\n): [number, number] {\n  let cfunRange = [];\n  // @ts-ignore: vtk d ts problem\n  const [lower, upper] = cfun.getRange();\n  cfun.getTable(lower, upper, 1024, cfunRange);\n  cfunRange = cfunRange.filter((v, k) => k % 3 === 0);\n  const cfunDomain = [...Array(1024).keys()].map((v, k) => {\n    return lower + ((upper - lower) / (1024 - 1)) * k;\n  });\n  const y1 = cfunRange[256];\n  const logy1 = Math.log((1 - y1) / y1);\n  const x1 = cfunDomain[256];\n  const y2 = cfunRange[256 * 3];\n  const logy2 = Math.log((1 - y2) / y2);\n  const x2 = cfunDomain[256 * 3];\n  const ww = Math.round((4 * (x2 - x1)) / (logy1 - logy2));\n  const wc = Math.round(x1 + (ww * logy1) / 4);\n  return [Math.round(wc - ww / 2), Math.round(wc + ww / 2)];\n}\n","import { ColormapRegistration } from '../types';\n\nconst _colormaps = new Map();\n\n/**\n * Register a colormap\n * @param name - name of the colormap\n * @param colormap - colormap object\n */\nfunction registerColormap(colormap: ColormapRegistration) {\n  _colormaps.set(colormap.Name, colormap);\n}\n\n/**\n * Get a colormap by name\n * @param name - name of the colormap\n * @returns colormap object\n */\nfunction getColormap(name) {\n  return _colormaps.get(name);\n}\n\n/**\n * Get all registered colormap names\n * @returns array of colormap names\n *\n */\nfunction getColormapNames() {\n  return Array.from(_colormaps.keys());\n}\n\nexport { getColormap, getColormapNames, registerColormap };\n","/**\n * A utility that can be used to invert (in place) an RgbTransferFunction.\n *\n * @example\n * Grabbing a reference to the RGB Transfer function from the viewport:\n * ```\n * const rgbTransferFunction = viewport\n *   .getActor()\n *   .getProperty()\n *   .getRGBTransferFunction(0);\n *\n * rgbTransferFunction.setRange(0, 5);\n *\n * invertRgbTransferFunction(rgbTransferFunction);\n * ```\n *\n * @see {@link https://kitware.github.io/vtk-js/api/Rendering_Core_ColorTransferFunction.html|VTK.js: ColorTransferFunction}\n * @param rgbTransferFunction\n */\nexport default function invertRgbTransferFunction(\n  rgbTransferFunction: any\n): void {\n  // cut in case there is no function at all\n  if (!rgbTransferFunction) {\n    return;\n  }\n\n  const size = rgbTransferFunction.getSize();\n\n  for (let index = 0; index < size; index++) {\n    const nodeValue1 = [];\n\n    rgbTransferFunction.getNodeValue(index, nodeValue1);\n\n    nodeValue1[1] = 1 - nodeValue1[1];\n    nodeValue1[2] = 1 - nodeValue1[2];\n    nodeValue1[3] = 1 - nodeValue1[3];\n\n    rgbTransferFunction.setNodeValue(index, nodeValue1);\n  }\n}\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport { VOIRange } from '../types';\nimport { windowLevel as windowLevelUtil } from '.';\n\n/**\n * A utility that can be used to generate an Sigmoid RgbTransferFunction.\n * Sigmoid transfer functions are used in the dicom specification:\n * https://dicom.nema.org/medical/dicom/2018b/output/chtml/part03/sect_C.11.2.html\n *\n * @example\n * Setting an RGB Transfer function from the viewport:\n * ```\n * const sigmoidRGBTransferFunction = createSigmoidRGBTransferFunction(0, 255, { lower: 0, upper: 255} );\n * viewport\n *   .getActor()\n *   .getProperty()\n *   .setRGBTransferFunction(0, sigmoidRGBTransferFunction);\n * ```\n *\n * @see {@link https://kitware.github.io/vtk-js/api/Rendering_Core_ColorTransferFunction.html|VTK.js: ColorTransferFunction}\n * @param rgbTransferFunction\n */\nexport default function createSigmoidRGBTransferFunction(\n  voiRange: VOIRange,\n  approximationNodes = 1024 // humans can precieve no more than 900 shades of gray doi: 10.1007/s10278-006-1052-3\n): vtkColorTransferFunction {\n  const { windowWidth, windowCenter } = windowLevelUtil.toWindowLevel(\n    voiRange.lower,\n    voiRange.upper\n  );\n\n  // Function is defined by dicom spec\n  // https://dicom.nema.org/medical/dicom/2018b/output/chtml/part03/sect_C.11.2.html\n  const sigmoid = (x: number, wc: number, ww: number) => {\n    return 1 / (1 + Math.exp((-4 * (x - wc)) / ww));\n  };\n\n  // This function is the analytical inverse of the dicom spec sigmoid function\n  // for values y = [0, 1] exclusive. We use this to perform better sampling of\n  // points for the LUT as some images can have 2^16 unique values. This method\n  // can be deprecated if vtk supports LUTFunctions rather than look up tables\n  // or if vtk supports logistic scale. It currently only supports linear and\n  // log10 scaling which can be set on the vtkColorTransferFunction\n  const logit = (y: number, wc: number, ww: number) => {\n    return wc - (ww / 4) * Math.log((1 - y) / y);\n  };\n\n  // we slice out the first and last value to avoid 0 and 1 Infinity values\n  const range = [...Array(approximationNodes + 2).keys()]\n    .map((v) => v / (approximationNodes + 2))\n    .slice(1, -1);\n  const table = range.reduce((res, y) => {\n    const x = logit(y, windowCenter, windowWidth);\n    return res.concat(x, y, y, y, 0.5, 0.0);\n  }, []);\n\n  const cfun = vtkColorTransferFunction.newInstance();\n  cfun.buildFunctionFromArray(\n    vtkDataArray.newInstance({ values: table, numberOfComponents: 6 })\n  );\n  return cfun;\n}\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport vtkPiecewiseFunction from '@kitware/vtk.js/Common/DataModel/PiecewiseFunction';\nimport { ViewportPreset } from '../types';\nimport { VolumeActor } from '../types/IActor';\n\n/**\n * Applies a preset to a volume actor.\n *\n * @param actor - The volume actor to apply the preset to.\n * @param preset - The preset to apply.\n */\nexport default function applyPreset(\n  actor: VolumeActor,\n  preset: ViewportPreset\n) {\n  // Create color transfer function\n  const colorTransferArray = preset.colorTransfer\n    .split(' ')\n    .splice(1)\n    .map(parseFloat);\n\n  const { shiftRange } = getShiftRange(colorTransferArray);\n  const min = shiftRange[0];\n  const width = shiftRange[1] - shiftRange[0];\n  const cfun = vtkColorTransferFunction.newInstance();\n  const normColorTransferValuePoints = [];\n  for (let i = 0; i < colorTransferArray.length; i += 4) {\n    let value = colorTransferArray[i];\n    const r = colorTransferArray[i + 1];\n    const g = colorTransferArray[i + 2];\n    const b = colorTransferArray[i + 3];\n\n    value = (value - min) / width;\n    normColorTransferValuePoints.push([value, r, g, b]);\n  }\n\n  applyPointsToRGBFunction(normColorTransferValuePoints, shiftRange, cfun);\n\n  actor.getProperty().setRGBTransferFunction(0, cfun);\n\n  // Create scalar opacity function\n  const scalarOpacityArray = preset.scalarOpacity\n    .split(' ')\n    .splice(1)\n    .map(parseFloat);\n\n  const ofun = vtkPiecewiseFunction.newInstance();\n  const normPoints = [];\n  for (let i = 0; i < scalarOpacityArray.length; i += 2) {\n    let value = scalarOpacityArray[i];\n    const opacity = scalarOpacityArray[i + 1];\n\n    value = (value - min) / width;\n\n    normPoints.push([value, opacity]);\n  }\n\n  applyPointsToPiecewiseFunction(normPoints, shiftRange, ofun);\n\n  actor.getProperty().setScalarOpacity(0, ofun);\n\n  const [\n    gradientMinValue,\n    gradientMinOpacity,\n    gradientMaxValue,\n    gradientMaxOpacity,\n  ] = preset.gradientOpacity.split(' ').splice(1).map(parseFloat);\n\n  actor.getProperty().setUseGradientOpacity(0, true);\n  actor.getProperty().setGradientOpacityMinimumValue(0, gradientMinValue);\n  actor.getProperty().setGradientOpacityMinimumOpacity(0, gradientMinOpacity);\n  actor.getProperty().setGradientOpacityMaximumValue(0, gradientMaxValue);\n  actor.getProperty().setGradientOpacityMaximumOpacity(0, gradientMaxOpacity);\n\n  if (preset.interpolation === '1') {\n    actor.getProperty().setInterpolationTypeToFastLinear();\n    //actor.getProperty().setInterpolationTypeToLinear()\n  }\n\n  const ambient = parseFloat(preset.ambient);\n  const diffuse = parseFloat(preset.diffuse);\n  const specular = parseFloat(preset.specular);\n  const specularPower = parseFloat(preset.specularPower);\n\n  actor.getProperty().setAmbient(ambient);\n  actor.getProperty().setDiffuse(diffuse);\n  actor.getProperty().setSpecular(specular);\n  actor.getProperty().setSpecularPower(specularPower);\n}\n\nfunction getShiftRange(colorTransferArray) {\n  // Credit to paraview-glance\n  // https://github.com/Kitware/paraview-glance/blob/3fec8eeff31e9c19ad5b6bff8e7159bd745e2ba9/src/components/controls/ColorBy/script.js#L133\n\n  // shift range is original rgb/opacity range centered around 0\n  let min = Infinity;\n  let max = -Infinity;\n  for (let i = 0; i < colorTransferArray.length; i += 4) {\n    min = Math.min(min, colorTransferArray[i]);\n    max = Math.max(max, colorTransferArray[i]);\n  }\n\n  const center = (max - min) / 2;\n\n  return {\n    shiftRange: [-center, center],\n    min,\n    max,\n  };\n}\n\nfunction applyPointsToRGBFunction(points, range, cfun) {\n  const width = range[1] - range[0];\n  const rescaled = points.map(([x, r, g, b]) => [\n    x * width + range[0],\n    r,\n    g,\n    b,\n  ]);\n\n  cfun.removeAllPoints();\n  rescaled.forEach(([x, r, g, b]) => cfun.addRGBPoint(x, r, g, b));\n\n  return rescaled;\n}\n\nfunction applyPointsToPiecewiseFunction(points, range, pwf) {\n  const width = range[1] - range[0];\n  const rescaled = points.map(([x, y]) => [x * width + range[0], y]);\n\n  pwf.removeAllPoints();\n  rescaled.forEach(([x, y]) => pwf.addPoint(x, y));\n\n  return rescaled;\n}\n","import { Point3 } from '../types';\n\n/**\n * Converts `vtkVolumeActor` bounds to corners in world space.\n *\n * @param volumeActor - The `vtkVolumeActor`.\n *\n * @returns An array of the corners of the `volumeActor` in world space.\n */\nexport default function getVolumeActorCorners(volumeActor): Array<Point3> {\n  const imageData = volumeActor.getMapper().getInputData();\n  const bounds = imageData.extentToBounds(imageData.getExtent());\n\n  return [\n    [bounds[0], bounds[2], bounds[4]],\n    [bounds[0], bounds[2], bounds[5]],\n    [bounds[0], bounds[3], bounds[4]],\n    [bounds[0], bounds[3], bounds[5]],\n    [bounds[1], bounds[2], bounds[4]],\n    [bounds[1], bounds[2], bounds[5]],\n    [bounds[1], bounds[3], bounds[4]],\n    [bounds[1], bounds[3], bounds[5]],\n  ];\n}\n","import vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\nimport getVolumeActorCorners from './getVolumeActorCorners';\nimport type { VolumeActor, Point3, ActorSliceRange } from '../types';\nimport { EPSILON } from '../constants';\n\nconst SMALL_EPSILON = EPSILON * EPSILON;\nconst isOne = (v) => Math.abs(Math.abs(v) - 1) < SMALL_EPSILON;\nconst isUnit = (v, off) =>\n  isOne(v[off]) || isOne(v[off + 1]) || isOne(v[off + 2]);\n\nconst isOrthonormal = (v) => isUnit(v, 0) && isUnit(v, 3) && isUnit(v, 6);\n\n/**\n * Given a `vtkVolumeActor`, and a normal direction,\n * calculate the range of slices in the focal normal direction that encapsulate\n * the volume. Also project the `focalPoint` onto this range.\n *\n * @param volumeActor - The `vtkVolumeActor`.\n * @param viewPlaneNormal - The normal to the camera view.\n * @param focalPoint - The focal point of the camera.\n *\n * @returns an object containing the `min`, `max` and `current`\n * positions in the normal direction.\n */\nexport default function getSliceRange(\n  volumeActor: VolumeActor,\n  viewPlaneNormal: Point3,\n  focalPoint: Point3\n): ActorSliceRange {\n  const imageData = volumeActor.getMapper().getInputData();\n  let corners;\n  const direction = imageData.getDirection();\n\n  if (isOrthonormal(direction)) {\n    // This logic is only valid when the IJK vectors are unit vectors\n    corners = getVolumeActorCorners(volumeActor);\n  } else {\n    // This logic works for both unit and non-unit vectors, but is slower\n    const [dx, dy, dz] = imageData.getDimensions();\n    const cornersIdx = [\n      [0, 0, 0],\n      [dx - 1, 0, 0],\n      [0, dy - 1, 0],\n      [dx - 1, dy - 1, 0],\n      [0, 0, dz - 1],\n      [dx - 1, 0, dz - 1],\n      [0, dy - 1, dz - 1],\n      [dx - 1, dy - 1, dz - 1],\n    ];\n    corners = cornersIdx.map((it) => imageData.indexToWorld(it));\n  }\n  // Get rotation matrix from normal to +X (since bounds is aligned to XYZ)\n  const transform = vtkMatrixBuilder\n    .buildFromDegree()\n    .identity()\n    .rotateFromDirections(viewPlaneNormal, [1, 0, 0]);\n\n  corners.forEach((pt) => transform.apply(pt));\n\n  const transformedFocalPoint = [...focalPoint];\n  transform.apply(transformedFocalPoint);\n\n  const currentSlice = transformedFocalPoint[0];\n\n  // range is now maximum X distance\n  let minX = Infinity;\n  let maxX = -Infinity;\n  for (let i = 0; i < 8; i++) {\n    const x = corners[i][0];\n    if (x > maxX) {\n      maxX = x;\n    }\n    if (x < minX) {\n      minX = x;\n    }\n  }\n\n  return {\n    min: minX,\n    max: maxX,\n    current: currentSlice,\n    actor: volumeActor,\n    viewPlaneNormal,\n    focalPoint,\n  };\n}\n","import cache from '../cache/cache';\nimport { EPSILON } from '../constants';\n// import type { VolumeViewport } from '../RenderingEngine'\nimport { ICamera, IImageVolume, IVolumeViewport } from '../types';\nimport getSpacingInNormalDirection from './getSpacingInNormalDirection';\nimport { getVolumeLoaderSchemes } from '../loaders/volumeLoader';\n\n// One EPSILON part larger multiplier\nconst EPSILON_PART = 1 + EPSILON;\n\nconst startsWith = (str, starts) =>\n  starts === str.substring(0, Math.min(str.length, starts.length));\n\n// Check if this is a primary volume\n// For now, that means it came from some sort of image loader, but\n// should be specifically designated.\nconst isPrimaryVolume = (volume): boolean =>\n  !!getVolumeLoaderSchemes().find((scheme) =>\n    startsWith(volume.volumeId, scheme)\n  );\n\n/**\n * Given a volume viewport and camera, find the target volume.\n * The imageVolume is retrieved from cache for the specified targetVolumeId or\n * in case it is not provided, it chooses the volumeId on the viewport (there\n * might be more than one in case of fusion) that has the finest resolution in the\n * direction of view (normal).\n *\n * @param viewport - volume viewport\n * @param camera - current camera\n * @param targetVolumeId - If a target volumeId is given that volume\n * is forced to be used.\n *\n * @returns An object containing the imageVolume and spacingInNormalDirection.\n *\n */\nexport default function getTargetVolumeAndSpacingInNormalDir(\n  viewport: IVolumeViewport,\n  camera: ICamera,\n  targetVolumeId?: string\n): {\n  imageVolume: IImageVolume;\n  spacingInNormalDirection: number;\n  actorUID: string;\n} {\n  const { viewPlaneNormal } = camera;\n  const volumeActors = viewport.getActors();\n\n  if (!volumeActors || !volumeActors.length) {\n    return {\n      spacingInNormalDirection: null,\n      imageVolume: null,\n      actorUID: null,\n    };\n  }\n\n  const imageVolumes = volumeActors\n    .map((va) => {\n      // prefer the referenceUID if it is set, since it can be a derived actor\n      // and the uid does not necessarily match the volumeId\n      const actorUID = va.referenceId ?? va.uid;\n      return cache.getVolume(actorUID);\n    })\n    .filter((iv) => !!iv);\n\n  // If a volumeId is defined, set that volume as the target\n  if (targetVolumeId) {\n    const imageVolumeIndex = imageVolumes.findIndex(\n      (iv) => iv.volumeId === targetVolumeId\n    );\n\n    const imageVolume = imageVolumes[imageVolumeIndex];\n    const { uid: actorUID } = volumeActors[imageVolumeIndex];\n    const spacingInNormalDirection = getSpacingInNormalDirection(\n      imageVolume,\n      viewPlaneNormal\n    );\n\n    return { imageVolume, spacingInNormalDirection, actorUID };\n  }\n\n  if (!imageVolumes.length) {\n    return {\n      spacingInNormalDirection: null,\n      imageVolume: null,\n      actorUID: null,\n    };\n  }\n\n  // Fetch volume actor with finest resolution in direction of projection.\n  const smallest = {\n    spacingInNormalDirection: Infinity,\n    imageVolume: null,\n    actorUID: null,\n  };\n\n  const hasPrimaryVolume = imageVolumes.find(isPrimaryVolume);\n\n  for (let i = 0; i < imageVolumes.length; i++) {\n    const imageVolume = imageVolumes[i];\n\n    if (hasPrimaryVolume && !isPrimaryVolume(imageVolume)) {\n      // Secondary volumes like segmentation don't count towards spacing\n      continue;\n    }\n\n    const spacingInNormalDirection = getSpacingInNormalDirection(\n      imageVolume,\n      viewPlaneNormal\n    );\n\n    // Allow for EPSILON part larger requirement to prefer earlier volumes\n    // when the spacing is within a factor of EPSILON.  Use a factor because\n    // that deals with very small or very large volumes effectively.\n    if (\n      spacingInNormalDirection * EPSILON_PART <\n      smallest.spacingInNormalDirection\n    ) {\n      smallest.spacingInNormalDirection = spacingInNormalDirection;\n      smallest.imageVolume = imageVolume;\n      smallest.actorUID = volumeActors[i].uid;\n    }\n  }\n\n  return smallest;\n}\n","import { ImageSliceData, IVolumeViewport, VolumeActor } from '../types';\nimport getSliceRange from './getSliceRange';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\n\n/**\n * It calculates the number of slices and the current slice index for a given\n * Volume viewport\n * @param viewport - volume viewport\n * @returns An object with two properties: numberOfSlices and imageIndex.\n */\nfunction getImageSliceDataForVolumeViewport(\n  viewport: IVolumeViewport\n): ImageSliceData {\n  const camera = viewport.getCamera();\n\n  const { spacingInNormalDirection, imageVolume } =\n    getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n\n  if (!imageVolume) {\n    return;\n  }\n\n  const { viewPlaneNormal, focalPoint } = camera;\n\n  const actorEntry = viewport\n    .getActors()\n    .find(\n      (a) =>\n        a.referenceId === imageVolume.volumeId || a.uid === imageVolume.volumeId\n    );\n\n  if (!actorEntry) {\n    console.warn('No actor found for with actorUID of', imageVolume.volumeId);\n  }\n\n  const volumeActor = actorEntry.actor as VolumeActor;\n  const sliceRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint);\n\n  const { min, max, current } = sliceRange;\n\n  // calculate number of steps from min to max with current normal spacing in direction\n  const numberOfSlices = Math.round((max - min) / spacingInNormalDirection) + 1;\n\n  // calculate the imageIndex based on min, max, current\n  let imageIndex = ((current - min) / (max - min)) * numberOfSlices;\n  imageIndex = Math.floor(imageIndex);\n\n  // Clamp imageIndex\n  if (imageIndex > numberOfSlices - 1) {\n    imageIndex = numberOfSlices - 1;\n  } else if (imageIndex < 0) {\n    imageIndex = 0;\n  }\n\n  return {\n    numberOfSlices,\n    imageIndex,\n  };\n}\n\nexport default getImageSliceDataForVolumeViewport;\n","import {\n  getImageSliceDataForVolumeViewport,\n  triggerEvent,\n} from '../../utilities';\nimport { EventTypes } from '../../types';\nimport { Events } from '../../enums';\nimport { getRenderingEngine } from '../getRenderingEngine';\nimport BaseVolumeViewport from '../BaseVolumeViewport';\n\n// Keeping track of previous imageIndex for each viewportId\ntype VolumeImageState = Record<string, number>;\n\nconst state: VolumeImageState = {};\n\nexport function resetVolumeNewImageState(viewportId: string): void {\n  if (state[viewportId] !== undefined) {\n    delete state[viewportId];\n  }\n}\n\n/**\n * It captures the camera modified event and with the camera focal point and viewPlaneNomad\n * it calculates the image index in the view direction. Finally it triggers\n * a VOLUME_NEW_IMAGE event with the image index.\n *\n * @internal\n *\n * @param cameraEvent - The camera modified event\n * @param viewportImageData - The image data of the viewport\n */\nfunction volumeNewImageEventDispatcher(\n  cameraEvent: EventTypes.CameraModifiedEvent\n): void {\n  const { renderingEngineId, viewportId } = cameraEvent.detail;\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n  const viewport = renderingEngine.getViewport(viewportId);\n\n  if (!(viewport instanceof BaseVolumeViewport)) {\n    throw new Error(\n      `volumeNewImageEventDispatcher: viewport is not a BaseVolumeViewport`\n    );\n  }\n\n  if (state[viewport.id] === undefined) {\n    state[viewport.id] = 0;\n  }\n\n  const sliceData = getImageSliceDataForVolumeViewport(viewport);\n\n  if (!sliceData) {\n    console.warn(\n      `volumeNewImageEventDispatcher: sliceData is undefined for viewport ${viewport.id}`\n    );\n    return;\n  }\n\n  const { numberOfSlices, imageIndex } = sliceData;\n\n  if (state[viewport.id] === imageIndex) {\n    return;\n  }\n\n  state[viewport.id] = imageIndex;\n\n  const eventDetail: EventTypes.VolumeNewImageEventDetail = {\n    imageIndex,\n    viewportId,\n    renderingEngineId,\n    numberOfSlices,\n  };\n\n  triggerEvent(viewport.element, Events.VOLUME_NEW_IMAGE, eventDetail);\n}\n\nexport default volumeNewImageEventDispatcher;\n","import { Point3, Plane } from '../types';\nimport { vec3, mat3 } from 'gl-matrix';\n\n/**\n * It calculates the intersection of a line and a plane.\n * Plane equation is Ax+By+Cz=D\n * @param p0 - [x,y,z] of the first point of the line\n * @param p1 - [x,y,z] of the second point of the line\n * @param plane - [A, B, C, D] Plane parameter: Ax+By+Cz=D\n * @returns - [X,Y,Z] coordinates of the intersection\n */\nfunction linePlaneIntersection(p0: Point3, p1: Point3, plane: Plane): Point3 {\n  const [x0, y0, z0] = p0;\n  const [x1, y1, z1] = p1;\n  const [A, B, C, D] = plane;\n  const a = x1 - x0;\n  const b = y1 - y0;\n  const c = z1 - z0;\n  const t = (-1 * (A * x0 + B * y0 + C * z0 - D)) / (A * a + B * b + C * c);\n  const X = a * t + x0;\n  const Y = b * t + y0;\n  const Z = c * t + z0;\n\n  return [X, Y, Z];\n}\n\n/**\n * It returns the plane equation defined by a point and a normal vector.\n * @param normal - normal vector\n * @param point - a point on the plane\n * @returns - [A, B,C, D] of plane equation A*X + B*Y + C*Z = D\n */\nfunction planeEquation(normal: Point3, point: Point3 | vec3): Plane {\n  const [A, B, C] = normal;\n  const D = A * point[0] + B * point[1] + C * point[2];\n  return [A, B, C, D];\n}\n\n/**\n * Computes the intersection of three planes in 3D space with equations:\n * A1*X + B1*Y + C1*Z = D1\n * A2*X + B2*Y + C2*Z = D2\n * A3*X + B3*Y + C3*Z = D3\n * @returns - [x, y, z] the intersection in the world coordinate\n */\nfunction threePlaneIntersection(\n  firstPlane: Plane,\n  secondPlane: Plane,\n  thirdPlane: Plane\n): Point3 {\n  const [A1, B1, C1, D1] = firstPlane;\n  const [A2, B2, C2, D2] = secondPlane;\n  const [A3, B3, C3, D3] = thirdPlane;\n  const m0 = mat3.fromValues(A1, A2, A3, B1, B2, B3, C1, C2, C3);\n  const m1 = mat3.fromValues(D1, D2, D3, B1, B2, B3, C1, C2, C3);\n  const m2 = mat3.fromValues(A1, A2, A3, D1, D2, D3, C1, C2, C3);\n  const m3 = mat3.fromValues(A1, A2, A3, B1, B2, B3, D1, D2, D3);\n\n  // TODO: handle no intersection scenario\n  const x = mat3.determinant(m1) / mat3.determinant(m0);\n  const y = mat3.determinant(m2) / mat3.determinant(m0);\n  const z = mat3.determinant(m3) / mat3.determinant(m0);\n  return [x, y, z];\n}\n\n/**\n * Computes the distance of a point in 3D space to a plane\n * @param plane - [A, B, C, D] of plane equation A*X + B*Y + C*Z = D\n * @param point - [A, B, C] the plane in World coordinate\n * @param signed - if true, the distance is signed\n * @returns - the distance of the point to the plane\n * */\nfunction planeDistanceToPoint(\n  plane: Plane,\n  point: Point3,\n  signed = false\n): number {\n  const [A, B, C, D] = plane;\n  const [x, y, z] = point;\n  const numerator = A * x + B * y + C * z - D;\n  const distance = Math.abs(numerator) / Math.sqrt(A * A + B * B + C * C);\n  const sign = signed ? Math.sign(numerator) : 1;\n  return sign * distance;\n}\n\nexport {\n  linePlaneIntersection,\n  planeEquation,\n  threePlaneIntersection,\n  planeDistanceToPoint,\n};\n","/**\n * A function that checks if there is a value in the array that is NaN.\n * or if the input is a number it just checks if it is NaN.\n * @param input - The input to check if it is NaN.\n * @returns - True if the input is NaN, false otherwise.\n */\nexport default function hasNaNValues(input: number[] | number): boolean {\n  if (Array.isArray(input)) {\n    return input.some((value) => Number.isNaN(value));\n  }\n  return Number.isNaN(input);\n}\n","import type { vtkCamera } from '@kitware/vtk.js/Rendering/Core/Camera';\nimport vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport vtkPlane from '@kitware/vtk.js/Common/DataModel/Plane';\n\nimport { vec2, vec3 } from 'gl-matrix';\nimport _cloneDeep from 'lodash.clonedeep';\n\nimport Events from '../enums/Events';\nimport ViewportStatus from '../enums/ViewportStatus';\nimport ViewportType from '../enums/ViewportType';\nimport renderingEngineCache from './renderingEngineCache';\nimport { triggerEvent, planar, isImageActor, actorIsA } from '../utilities';\nimport hasNaNValues from '../utilities/hasNaNValues';\nimport { RENDERING_DEFAULTS } from '../constants';\nimport type {\n  ICamera,\n  ActorEntry,\n  IRenderingEngine,\n  ViewportInputOptions,\n  Point2,\n  Point3,\n  FlipDirection,\n  EventTypes,\n  DisplayArea,\n} from '../types';\nimport type { ViewportInput, IViewport } from '../types/IViewport';\nimport type { vtkSlabCamera } from './vtkClasses/vtkSlabCamera';\nimport { getConfiguration } from '../init';\nimport IImageCalibration from '../types/IImageCalibration';\n\n/**\n * An object representing a single viewport, which is a camera\n * looking into a viewport, and an associated target output `HTMLDivElement`.\n * Viewport is a base class that can be extended to create a specific\n * viewport type. Both VolumeViewport and StackViewport are subclasses\n * of Viewport. Common logic for all viewports is contained in Viewport class\n * which is camera properties/methods, vtk.js actors, and other common\n * logic.\n */\nclass Viewport implements IViewport {\n  /** unique identifier for the viewport */\n  readonly id: string;\n  /** HTML element in DOM that is used for rendering the viewport */\n  readonly element: HTMLDivElement;\n  /** an internal canvas that is created on the provided HTML element */\n  readonly canvas: HTMLCanvasElement;\n  /** RenderingEngine id that the viewport belongs to */\n  readonly renderingEngineId: string;\n  /** Type of viewport */\n  readonly type: ViewportType;\n  protected flipHorizontal = false;\n  protected flipVertical = false;\n  public isDisabled: boolean;\n  /** Record the renddering status, mostly for testing purposes, but can also\n   * be useful for knowing things like whether the viewport is initialized\n   */\n  public viewportStatus: ViewportStatus = ViewportStatus.NO_DATA;\n\n  /** sx of viewport on the offscreen canvas */\n  sx: number;\n  /** sy of viewport on the offscreen canvas */\n  sy: number;\n  /** sWidth of viewport on the offscreen canvas */\n  sWidth: number;\n  /** sHeight of viewport on the offscreen canvas */\n  sHeight: number;\n  /** a Map containing the actor uid and actors */\n  _actors: Map<string, any>;\n  /** Default options for the viewport which includes orientation, viewPlaneNormal and backgroundColor */\n  readonly defaultOptions: any;\n  /** options for the viewport which includes orientation axis, backgroundColor and displayArea */\n  options: ViewportInputOptions;\n  private _suppressCameraModifiedEvents = false;\n  /** A flag representing if viewport methods should fire events or not */\n  readonly suppressEvents: boolean;\n  protected hasPixelSpacing = true;\n  protected calibration: IImageCalibration;\n  /** The camera that is initially defined on the reset for\n   * the relative pan/zoom\n   */\n  protected initialCamera: ICamera;\n  /** The camera that is defined for resetting displayArea to ensure absolute displayArea\n   * settings\n   */\n  private fitToCanvasCamera: ICamera;\n\n  constructor(props: ViewportInput) {\n    this.id = props.id;\n    this.renderingEngineId = props.renderingEngineId;\n    this.type = props.type;\n    this.element = props.element;\n    this.canvas = props.canvas;\n    this.sx = props.sx;\n    this.sy = props.sy;\n    this.sWidth = props.sWidth;\n    this.sHeight = props.sHeight;\n    this._actors = new Map();\n    // Set data attributes for render events\n    this.element.setAttribute('data-viewport-uid', this.id);\n    this.element.setAttribute(\n      'data-rendering-engine-uid',\n      this.renderingEngineId\n    );\n\n    this.defaultOptions = _cloneDeep(props.defaultOptions);\n    this.suppressEvents = props.defaultOptions.suppressEvents\n      ? props.defaultOptions.suppressEvents\n      : false;\n    this.options = _cloneDeep(props.defaultOptions);\n    this.isDisabled = false;\n  }\n\n  getRotation: () => number;\n  getFrameOfReferenceUID: () => string;\n  canvasToWorld: (canvasPos: Point2) => Point3;\n  worldToCanvas: (worldPos: Point3) => Point2;\n  customRenderViewportToCanvas: () => unknown;\n  resize: () => void;\n  getProperties: () => void;\n  updateRenderingPipeline: () => void;\n\n  static get useCustomRenderingPipeline(): boolean {\n    return false;\n  }\n\n  /**\n   * Indicate that the image has been rendered.\n   * This will set hte viewportStatus to RENDERED if there is image data\n   * available to actually be rendered - otherwise, the rendering simply showed\n   * the background image.\n   */\n  public setRendered() {\n    if (\n      this.viewportStatus === ViewportStatus.NO_DATA ||\n      this.viewportStatus === ViewportStatus.LOADING\n    ) {\n      return;\n    }\n    this.viewportStatus = ViewportStatus.RENDERED;\n  }\n\n  /**\n   * Returns the rendering engine driving the `Viewport`.\n   *\n   * @returns The RenderingEngine instance.\n   */\n  public getRenderingEngine(): IRenderingEngine {\n    return renderingEngineCache.get(this.renderingEngineId);\n  }\n\n  /**\n   * Returns the `vtkRenderer` responsible for rendering the `Viewport`.\n   *\n   * @returns The `vtkRenderer` for the `Viewport`.\n   */\n  public getRenderer(): any {\n    const renderingEngine = this.getRenderingEngine();\n\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      throw new Error('Rendering engine has been destroyed');\n    }\n\n    return renderingEngine.offscreenMultiRenderWindow.getRenderer(this.id);\n  }\n\n  /**\n   * Renders the `Viewport` using the `RenderingEngine`.\n   */\n  public render(): void {\n    const renderingEngine = this.getRenderingEngine();\n\n    renderingEngine.renderViewport(this.id);\n  }\n\n  /**\n   * Sets new options and (TODO) applies them.\n   *\n   * @param options - The viewport options to set.\n   * @param immediate - If `true`, renders the viewport after the options are set.\n   */\n  public setOptions(options: ViewportInputOptions, immediate = false): void {\n    this.options = <ViewportInputOptions>_cloneDeep(options);\n\n    // TODO When this is needed we need to move the camera position.\n    // We can steal some logic from the tools we build to do this.\n    if (this.options?.displayArea) {\n      this.setDisplayArea(this.options?.displayArea);\n    }\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  /**\n   * Resets the options the `Viewport`'s `defaultOptions`\n   *\n   * @param immediate - If `true`, renders the viewport after the options are reset.\n   */\n  public reset(immediate = false) {\n    this.options = _cloneDeep(this.defaultOptions);\n\n    // TODO When this is needed we need to move the camera position.\n    // We can steal some logic from the tools we build to do this.\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  /**\n   * Flip the viewport on horizontal or vertical axis, this method\n   * works with vtk-js backed rendering pipeline.\n   *\n   * @param flipOptions - Flip options specifying the axis of flip\n   * @param flipOptions.flipHorizontal - Flip the viewport on horizontal axis\n   * @param flipOptions.flipVertical - Flip the viewport on vertical axis\n   */\n  protected flip({ flipHorizontal, flipVertical }: FlipDirection): void {\n    const imageData = this.getDefaultImageData();\n\n    if (!imageData) {\n      return;\n    }\n\n    const camera = this.getCamera();\n    const { viewPlaneNormal, viewUp, focalPoint, position } = camera;\n\n    const viewRight = vec3.cross(vec3.create(), viewPlaneNormal, viewUp);\n    let viewUpToSet = vec3.copy(vec3.create(), viewUp);\n    const viewPlaneNormalToSet = vec3.negate(vec3.create(), viewPlaneNormal);\n\n    // for both flip horizontal and vertical we need to move the camera to the\n    // other side of the image\n    const distance = vec3.distance(position, focalPoint);\n\n    // If the pan has been applied, we need to be able\n    // apply the pan back\n    const dimensions = imageData.getDimensions();\n    const middleIJK = dimensions.map((d) => Math.floor(d / 2));\n\n    const idx = [middleIJK[0], middleIJK[1], middleIJK[2]];\n    const centeredFocalPoint = imageData.indexToWorld(idx, vec3.create());\n\n    const resetFocalPoint = this._getFocalPointForResetCamera(\n      centeredFocalPoint as Point3,\n      camera,\n      { resetPan: true, resetToCenter: false }\n    );\n\n    const panDir = vec3.subtract(vec3.create(), focalPoint, resetFocalPoint);\n    const panValue = vec3.length(panDir);\n\n    const getPanDir = (mirrorVec) => {\n      const panDirMirror = vec3.scale(\n        vec3.create(),\n        mirrorVec,\n        2 * vec3.dot(panDir, mirrorVec)\n      );\n      vec3.subtract(panDirMirror, panDirMirror, panDir);\n      vec3.normalize(panDirMirror, panDirMirror);\n\n      return panDirMirror;\n    };\n\n    // Flipping horizontal mean that the camera should move\n    // to the other side of the image but looking at the\n    // same direction and same focal point\n    if (flipHorizontal) {\n      // we need to apply the pan value to the new focal point but in the direction\n      // that is mirrored on the viewUp for the flip horizontal and\n      // viewRight for the flip vertical\n\n      // mirror the pan direction based on the viewUp\n      const panDirMirror = getPanDir(viewUpToSet);\n\n      // move focal point from the resetFocalPoint to the newFocalPoint\n      // based on the panDirMirror and panValue\n      const newFocalPoint = vec3.scaleAndAdd(\n        vec3.create(),\n        resetFocalPoint,\n        panDirMirror,\n        panValue\n      );\n\n      // move the camera position also the same way as the focal point\n      const newPosition = vec3.scaleAndAdd(\n        vec3.create(),\n        newFocalPoint,\n        viewPlaneNormalToSet,\n        distance\n      );\n\n      this.setCamera({\n        viewPlaneNormal: viewPlaneNormalToSet as Point3,\n        position: newPosition as Point3,\n        focalPoint: newFocalPoint as Point3,\n      });\n\n      this.flipHorizontal = !this.flipHorizontal;\n    }\n\n    // Flipping vertical mean that the camera should negate the view up\n    // and also move to the other side of the image but looking at the\n    if (flipVertical) {\n      viewUpToSet = vec3.negate(viewUpToSet, viewUp);\n\n      // we need to apply the pan value to the new focal point but in the direction\n      const panDirMirror = getPanDir(viewRight);\n\n      const newFocalPoint = vec3.scaleAndAdd(\n        vec3.create(),\n        resetFocalPoint,\n        panDirMirror,\n        panValue\n      );\n\n      const newPosition = vec3.scaleAndAdd(\n        vec3.create(),\n        newFocalPoint,\n        viewPlaneNormalToSet,\n        distance\n      );\n\n      this.setCamera({\n        focalPoint: newFocalPoint as Point3,\n        viewPlaneNormal: viewPlaneNormalToSet as Point3,\n        viewUp: viewUpToSet as Point3,\n        position: newPosition as Point3,\n      });\n\n      this.flipVertical = !this.flipVertical;\n    }\n\n    this.render();\n  }\n\n  private getDefaultImageData(): any {\n    const actorEntry = this.getDefaultActor();\n\n    if (actorEntry && isImageActor(actorEntry)) {\n      return actorEntry.actor.getMapper().getInputData();\n    }\n  }\n\n  /**\n   * Get the default actor\n   * @returns An actor entry.\n   */\n  public getDefaultActor(): ActorEntry {\n    return this.getActors()[0];\n  }\n\n  /**\n   * Get all the actors in the viewport\n   * @returns An array of ActorEntry objects.\n   */\n  public getActors(): Array<ActorEntry> {\n    return Array.from(this._actors.values());\n  }\n\n  /**\n   * Get an actor by its UID\n   * @param actorUID - The unique ID of the actor.\n   * @returns An ActorEntry object.\n   */\n  public getActor(actorUID: string): ActorEntry {\n    return this._actors.get(actorUID);\n  }\n\n  /**\n   * Get an actor UID by its index\n   * @param index - array index.\n   * @returns actorUID\n   */\n  public getActorUIDByIndex(index: number): string {\n    const actor = this.getActors()[index];\n    if (actor) {\n      return actor.uid;\n    }\n  }\n\n  /**\n   * Get an actor by its index\n   * @param index - array index.\n   * @returns actorUID\n   */\n  public getActorByIndex(index: number): ActorEntry {\n    return this.getActors()[index];\n  }\n\n  /**\n   * It removes all actors from the viewport and then adds the actors from the array.\n   * @param actors - An array of ActorEntry objects.\n   */\n  public setActors(actors: Array<ActorEntry>): void {\n    this.removeAllActors();\n    const resetCameraPanAndZoom = true;\n    // when we set the actor we need to reset the camera to initialize the\n    // camera focal point with the bounds of the actors.\n    this.addActors(actors, resetCameraPanAndZoom);\n  }\n\n  /**\n   * Remove the actor from the viewport\n   * @param actorUID - The unique identifier for the actor.\n   */\n  _removeActor(actorUID: string): void {\n    const actorEntry = this.getActor(actorUID);\n    if (!actorEntry) {\n      console.warn(`Actor ${actorUID} does not exist for this viewport`);\n      return;\n    }\n    const renderer = this.getRenderer();\n    renderer.removeViewProp(actorEntry.actor); // removeActor not implemented in vtk?\n    this._actors.delete(actorUID);\n  }\n\n  /**\n   * Remove the actors with the given UIDs from the viewport\n   * @param actorUIDs - An array of actor UIDs to remove.\n   */\n  public removeActors(actorUIDs: Array<string>): void {\n    actorUIDs.forEach((actorUID) => {\n      this._removeActor(actorUID);\n    });\n  }\n\n  /**\n   * Add a list of actors (actor entries) to the viewport\n   * @param resetCameraPanAndZoom - force reset pan and zoom of the camera,\n   *        default value is false.\n   * @param actors - An array of ActorEntry objects.\n   */\n  public addActors(\n    actors: Array<ActorEntry>,\n    resetCameraPanAndZoom = false\n  ): void {\n    const renderingEngine = this.getRenderingEngine();\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      console.warn(\n        'Viewport::addActors::Rendering engine has not been initialized or has been destroyed'\n      );\n      return;\n    }\n\n    actors.forEach((actor) => this.addActor(actor));\n\n    // set the clipping planes for the actors\n    this.resetCamera(resetCameraPanAndZoom, resetCameraPanAndZoom);\n  }\n\n  /**\n   * Add an actor to the viewport including its id, its actor and slabThickness\n   * if defined\n   * @param actorEntry - ActorEntry\n   * @param actorEntry.uid - The unique identifier for the actor.\n   * @param actorEntry.actor - The volume actor.\n   * @param actorEntry.slabThickness - The slab thickness.\n   */\n  public addActor(actorEntry: ActorEntry): void {\n    const { uid: actorUID, actor } = actorEntry;\n    const renderingEngine = this.getRenderingEngine();\n\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      console.warn(\n        `Cannot add actor UID of ${actorUID} Rendering Engine has been destroyed`\n      );\n      return;\n    }\n\n    if (!actorUID || !actor) {\n      throw new Error('Actors should have uid and vtk Actor properties');\n    }\n\n    if (this.getActor(actorUID)) {\n      console.warn(`Actor ${actorUID} already exists for this viewport`);\n      return;\n    }\n\n    const renderer = this.getRenderer();\n    renderer.addActor(actor);\n    this._actors.set(actorUID, Object.assign({}, actorEntry));\n  }\n\n  /**\n   * Remove all actors from the renderer\n   */\n  public removeAllActors(): void {\n    this.getRenderer().removeAllViewProps();\n    this._actors = new Map();\n    return;\n  }\n\n  /**\n   * Reset the camera to the default viewport camera without firing events\n   */\n  protected resetCameraNoEvent(): void {\n    this._suppressCameraModifiedEvents = true;\n    this.resetCamera();\n    this._suppressCameraModifiedEvents = false;\n  }\n\n  /**\n   * Sets the camera to the default viewport camera without firing events\n   * @param camera - The camera to use for the viewport.\n   */\n  protected setCameraNoEvent(camera: ICamera): void {\n    this._suppressCameraModifiedEvents = true;\n    this.setCamera(camera);\n    this._suppressCameraModifiedEvents = false;\n  }\n\n  /**\n   * Calculates the intersections between the volume's boundaries and the viewplane.\n   * 1) Determine the viewplane using the camera's ViewplaneNormal and focalPoint.\n   * 2) Using volumeBounds, calculate the line equation for the 3D volume's 12 edges.\n   * 3) Intersect each edge to the viewPlane and see whether the intersection point is inside the volume bounds.\n   * 4) Return list of intersection points\n   * It should be noted that intersection points may range from 3 to 6 points.\n   * Orthogonal views have four points of intersection.\n   *\n   * @param imageData - vtkImageData\n   * @param focalPoint - camera focal point\n   * @param normal - view plane normal\n   * @returns intersections list\n   */\n  private _getViewImageDataIntersections(imageData, focalPoint, normal) {\n    // Viewplane equation: Ax+By+Cz=D\n    const A = normal[0];\n    const B = normal[1];\n    const C = normal[2];\n    const D = A * focalPoint[0] + B * focalPoint[1] + C * focalPoint[2];\n\n    // Computing the edges of the 3D cube\n    const bounds = imageData.getBounds();\n    const edges = this._getEdges(bounds);\n\n    const intersections = [];\n\n    for (const edge of edges) {\n      // start point: [x0, y0, z0], end point: [x1, y1, z1]\n      const [[x0, y0, z0], [x1, y1, z1]] = edge;\n      // Check if the edge is parallel to plane\n      if (A * (x1 - x0) + B * (y1 - y0) + C * (z1 - z0) === 0) {\n        continue;\n      }\n      const intersectionPoint = planar.linePlaneIntersection(\n        [x0, y0, z0],\n        [x1, y1, z1],\n        [A, B, C, D]\n      );\n\n      if (this._isInBounds(intersectionPoint, bounds)) {\n        intersections.push(intersectionPoint);\n      }\n    }\n\n    return intersections;\n  }\n\n  /**\n   * Sets the camera to an initial bounds. If\n   * resetPan and resetZoom are true it places the focal point at the center of\n   * the volume (or slice); otherwise, only the camera zoom and camera Pan or Zoom\n   * is reset for the current view.\n   * @param displayArea - The display area of interest.\n   * @param suppressEvents - If true, don't fire displayArea event.\n   */\n  public setDisplayArea(\n    displayArea: DisplayArea,\n    suppressEvents = false\n  ): void {\n    const { storeAsInitialCamera } = displayArea;\n\n    // make calculations relative to the fitToCanvasCamera view\n    this.setCamera(this.fitToCanvasCamera, false);\n\n    const { imageArea, imageCanvasPoint } = displayArea;\n\n    if (imageArea) {\n      const [areaX, areaY] = imageArea;\n      const zoom = Math.min(this.getZoom() / areaX, this.getZoom() / areaY);\n      this.setZoom(zoom, storeAsInitialCamera);\n    }\n\n    // getting the image info\n    const imageData = this.getDefaultImageData();\n    if (imageCanvasPoint && imageData) {\n      const { imagePoint, canvasPoint } = imageCanvasPoint;\n      const [canvasX, canvasY] = canvasPoint;\n      const devicePixelRatio = window?.devicePixelRatio || 1;\n      const validateCanvasPanX = this.sWidth / devicePixelRatio;\n      const validateCanvasPanY = this.sHeight / devicePixelRatio;\n      const canvasPanX = validateCanvasPanX * (canvasX - 0.5);\n      const canvasPanY = validateCanvasPanY * (canvasY - 0.5);\n\n      const dimensions = imageData.getDimensions();\n      const canvasZero = this.worldToCanvas([0, 0, 0]);\n      const canvasEdge = this.worldToCanvas(dimensions);\n      const canvasImage = [\n        canvasEdge[0] - canvasZero[0],\n        canvasEdge[1] - canvasZero[1],\n      ];\n      const [imgWidth, imgHeight] = canvasImage;\n      const [imageX, imageY] = imagePoint;\n      const imagePanX = imgWidth * (0.5 - imageX);\n      const imagePanY = imgHeight * (0.5 - imageY);\n\n      const newPositionX = imagePanX + canvasPanX;\n      const newPositionY = imagePanY + canvasPanY;\n\n      const deltaPoint2: Point2 = [newPositionX, newPositionY];\n      this.setPan(deltaPoint2, storeAsInitialCamera);\n    }\n\n    if (storeAsInitialCamera) {\n      this.options.displayArea = displayArea;\n    }\n\n    if (!suppressEvents) {\n      const eventDetail: EventTypes.DisplayAreaModifiedEventDetail = {\n        viewportId: this.id,\n        displayArea: displayArea,\n        storeAsInitialCamera: storeAsInitialCamera,\n      };\n\n      triggerEvent(this.element, Events.DISPLAY_AREA_MODIFIED, eventDetail);\n    }\n  }\n\n  public getDisplayArea(): DisplayArea | undefined {\n    return this.options?.displayArea;\n  }\n\n  /**\n   * Resets the camera based on the rendering volume(s) bounds. If\n   * resetPan and resetZoom are true it places the focal point at the center of\n   * the volume (or slice); otherwise, only the camera zoom and camera Pan or Zoom\n   * is reset for the current view.\n   * @param resetPan - If true, the camera focal point is reset to the center of the volume (slice)\n   * @param resetZoom - If true, the camera zoom is reset to the default zoom\n   * @param storeAsInitialCamera - If true, reset camera is stored as the initial camera (to allow differences to\n   *   be detected for pan/zoom values)\n   * @returns boolean\n   */\n  public resetCamera(\n    resetPan = true,\n    resetZoom = true,\n    resetToCenter = true,\n    storeAsInitialCamera = true\n  ): boolean {\n    const renderer = this.getRenderer();\n\n    // fix the flip right away, since we rely on the viewPlaneNormal and\n    // viewUp for later. Basically, we need to flip back if flipHorizontal\n    // is true or flipVertical is true\n    this.setCamera({\n      flipHorizontal: false,\n      flipVertical: false,\n    });\n\n    const previousCamera = _cloneDeep(this.getCamera());\n    const bounds = renderer.computeVisiblePropBounds();\n    const focalPoint = <Point3>[0, 0, 0];\n    const imageData = this.getDefaultImageData();\n\n    // Todo: remove this, this is just for tests passing\n    if (imageData) {\n      const spc = imageData.getSpacing();\n\n      bounds[0] = bounds[0] + spc[0] / 2;\n      bounds[1] = bounds[1] - spc[0] / 2;\n      bounds[2] = bounds[2] + spc[1] / 2;\n      bounds[3] = bounds[3] - spc[1] / 2;\n      bounds[4] = bounds[4] + spc[2] / 2;\n      bounds[5] = bounds[5] - spc[2] / 2;\n    }\n\n    const activeCamera = this.getVtkActiveCamera();\n    const viewPlaneNormal = <Point3>activeCamera.getViewPlaneNormal();\n    const viewUp = <Point3>activeCamera.getViewUp();\n\n    // Reset the perspective zoom factors, otherwise subsequent zooms will cause\n    // the view angle to become very small and cause bad depth sorting.\n    // todo: parallel projection only\n\n    focalPoint[0] = (bounds[0] + bounds[1]) / 2.0;\n    focalPoint[1] = (bounds[2] + bounds[3]) / 2.0;\n    focalPoint[2] = (bounds[4] + bounds[5]) / 2.0;\n\n    if (imageData) {\n      const dimensions = imageData.getDimensions();\n      const middleIJK = dimensions.map((d) => Math.floor(d / 2));\n\n      const idx = [middleIJK[0], middleIJK[1], middleIJK[2]];\n      imageData.indexToWorld(idx, focalPoint);\n    }\n\n    const { widthWorld, heightWorld } =\n      this._getWorldDistanceViewUpAndViewRight(bounds, viewUp, viewPlaneNormal);\n\n    const canvasSize = [this.sWidth, this.sHeight];\n\n    const boundsAspectRatio = widthWorld / heightWorld;\n    const canvasAspectRatio = canvasSize[0] / canvasSize[1];\n\n    let radius;\n\n    if (boundsAspectRatio < canvasAspectRatio) {\n      // can fit full height, so use it.\n      radius = heightWorld / 2;\n    } else {\n      const scaleFactor = boundsAspectRatio / canvasAspectRatio;\n\n      radius = (heightWorld * scaleFactor) / 2;\n    }\n\n    //const angle = vtkMath.radiansFromDegrees(activeCamera.getViewAngle())\n    const parallelScale = 1.1 * radius;\n\n    let w1 = bounds[1] - bounds[0];\n    let w2 = bounds[3] - bounds[2];\n    let w3 = bounds[5] - bounds[4];\n    w1 *= w1;\n    w2 *= w2;\n    w3 *= w3;\n    radius = w1 + w2 + w3;\n\n    // If we have just a single point, pick a radius of 1.0\n    radius = radius === 0 ? 1.0 : radius;\n\n    // compute the radius of the enclosing sphere\n    radius = Math.sqrt(radius) * 0.5;\n\n    const distance = 1.1 * radius;\n\n    const viewUpToSet: Point3 =\n      Math.abs(vtkMath.dot(viewUp, viewPlaneNormal)) > 0.999\n        ? [-viewUp[2], viewUp[0], viewUp[1]]\n        : viewUp;\n\n    const focalPointToSet = this._getFocalPointForResetCamera(\n      focalPoint,\n      previousCamera,\n      { resetPan, resetToCenter }\n    );\n\n    const positionToSet: Point3 = [\n      focalPointToSet[0] + distance * viewPlaneNormal[0],\n      focalPointToSet[1] + distance * viewPlaneNormal[1],\n      focalPointToSet[2] + distance * viewPlaneNormal[2],\n    ];\n\n    renderer.resetCameraClippingRange(bounds);\n\n    const clippingRangeToUse: Point2 = [\n      -RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE,\n      RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE,\n    ];\n\n    activeCamera.setPhysicalScale(radius);\n    activeCamera.setPhysicalTranslation(\n      -focalPointToSet[0],\n      -focalPointToSet[1],\n      -focalPointToSet[2]\n    );\n\n    this.setCamera({\n      parallelScale: resetZoom ? parallelScale : previousCamera.parallelScale,\n      focalPoint: focalPointToSet,\n      position: positionToSet,\n      viewAngle: 90,\n      viewUp: viewUpToSet,\n      clippingRange: clippingRangeToUse,\n    });\n\n    const modifiedCamera = _cloneDeep(this.getCamera());\n\n    this.setFitToCanvasCamera(_cloneDeep(this.getCamera()));\n\n    if (storeAsInitialCamera) {\n      this.setInitialCamera(modifiedCamera);\n    }\n\n    const RESET_CAMERA_EVENT = {\n      type: 'ResetCameraEvent',\n      renderer,\n    };\n\n    // Here to let parallel/distributed compositing intercept\n    // and do the right thing.\n    renderer.invokeEvent(RESET_CAMERA_EVENT);\n\n    this.triggerCameraModifiedEventIfNecessary(previousCamera, modifiedCamera);\n\n    if (\n      imageData &&\n      this.options?.displayArea &&\n      resetZoom &&\n      resetPan &&\n      resetToCenter\n    ) {\n      this.setDisplayArea(this.options?.displayArea);\n    }\n\n    return true;\n  }\n\n  /**\n   * Sets the provided camera as the initial camera.\n   * This allows computing differences applied later as compared to the initial\n   * position, for things like zoom and pan.\n   * @param camera - to store as the initial value.\n   */\n  protected setInitialCamera(camera: ICamera): void {\n    this.initialCamera = camera;\n  }\n\n  /**\n   * Sets the provided camera as the displayArea camera.\n   * This allows computing differences applied later as compared to the initial\n   * position, for things like zoom and pan.\n   * @param camera - to store as the initial value.\n   */\n  protected setFitToCanvasCamera(camera: ICamera): void {\n    this.fitToCanvasCamera = camera;\n  }\n\n  /**\n   * Helper function to return the current canvas pan value.\n   *\n   * @returns a Point2 containing the current pan values\n   * on the canvas,\n   * computed from the current camera, where the initial pan\n   * value is [0,0].\n   */\n  public getPan(): Point2 {\n    const activeCamera = this.getVtkActiveCamera();\n    const focalPoint = activeCamera.getFocalPoint() as Point3;\n\n    const zero3 = this.canvasToWorld([0, 0]);\n    const initialCanvasFocal = this.worldToCanvas(\n      <Point3>vec3.subtract(vec3.create(), this.initialCamera.focalPoint, zero3)\n    );\n    const currentCanvasFocal = this.worldToCanvas(\n      <Point3>vec3.subtract(vec3.create(), focalPoint, zero3)\n    );\n    const result = <Point2>(\n      vec2.subtract(vec2.create(), initialCanvasFocal, currentCanvasFocal)\n    );\n    return result;\n  }\n\n  /**\n   * Sets the canvas pan value relative to the initial view position of 0,0\n   * Modifies the camera to perform the pan.\n   */\n  public setPan(pan: Point2, storeAsInitialCamera = false): void {\n    const previousCamera = this.getCamera();\n    const { focalPoint, position } = previousCamera;\n    const zero3 = this.canvasToWorld([0, 0]);\n    const delta2 = vec2.subtract(vec2.create(), pan, this.getPan());\n    if (\n      Math.abs(delta2[0]) < 1 &&\n      Math.abs(delta2[1]) < 1 &&\n      !storeAsInitialCamera\n    ) {\n      return;\n    }\n    const delta = vec3.subtract(\n      vec3.create(),\n      this.canvasToWorld(<Point2>delta2),\n      zero3\n    );\n    const newFocal = vec3.subtract(vec3.create(), focalPoint, delta);\n    const newPosition = vec3.subtract(vec3.create(), position, delta);\n    this.setCamera(\n      {\n        ...previousCamera,\n        focalPoint: newFocal as Point3,\n        position: newPosition as Point3,\n      },\n      storeAsInitialCamera\n    );\n  }\n\n  /**\n   * Returns a current zoom level relative to the initial parallel scale\n   * originally applied to the image.  That is, on initial display,\n   * the zoom level is 1.  Computed as a function of the camera.\n   */\n  public getZoom(): number {\n    const activeCamera = this.getVtkActiveCamera();\n    const { parallelScale: initialParallelScale } = this.initialCamera;\n    return initialParallelScale / activeCamera.getParallelScale();\n  }\n\n  /** Zooms the image using parallel scale by updating the camera value.\n   * @param value - The relative parallel scale to apply.  It is relative\n   * to the initial offsets value.\n   * @param storeAsInitialCamera - can be set to true to reset the camera\n   *   after applying this zoom as the initial camera.  A subsequent getZoom\n   *   call will return \"1\", but the zoom will have been applied.\n   */\n  public setZoom(value: number, storeAsInitialCamera = false): void {\n    const camera = this.getCamera();\n    const { parallelScale: initialParallelScale } = this.initialCamera;\n    const parallelScale = initialParallelScale / value;\n    if (camera.parallelScale === parallelScale && !storeAsInitialCamera) {\n      return;\n    }\n    this.setCamera(\n      {\n        ...camera,\n        parallelScale,\n      },\n      storeAsInitialCamera\n    );\n  }\n\n  /**\n   * Because the focalPoint is always in the centre of the viewport,\n   * we must do planar computations if the frame (image \"slice\") is to be preserved.\n   * 1. Calculate the intersection of the view plane with the imageData\n   * which results in points of intersection (minimum of 3, maximum of 6)\n   * 2. Calculate average of the intersection points to get newFocalPoint\n   * 3. Set the new focalPoint\n   * @param imageData - imageData\n   * @returns focalPoint\n   */\n  private _getFocalPointForViewPlaneReset(imageData) {\n    // Todo: move some where else\n    const { focalPoint, viewPlaneNormal: normal } = this.getCamera();\n    const intersections = this._getViewImageDataIntersections(\n      imageData,\n      focalPoint,\n      normal\n    );\n\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\n    intersections.forEach(([point_x, point_y, point_z]) => {\n      x += point_x;\n      y += point_y;\n      z += point_z;\n    });\n\n    const newFocalPoint = <Point3>[\n      x / intersections.length,\n      y / intersections.length,\n      z / intersections.length,\n    ];\n    // Set the focal point on the average of the intersection points\n    return newFocalPoint;\n  }\n\n  /**\n   * Gets the target output canvas for the `Viewport`.\n   *\n   * @returns an HTMLCanvasElement.\n   */\n  public getCanvas(): HTMLCanvasElement {\n    return <HTMLCanvasElement>this.canvas;\n  }\n  /**\n   * Gets the active vtkCamera for the viewport.\n   *\n   * @returns vtk driven camera\n   */\n  protected getVtkActiveCamera(): vtkCamera | vtkSlabCamera {\n    const renderer = this.getRenderer();\n\n    return renderer.getActiveCamera();\n  }\n\n  /**\n   * Get the camera's current state\n   * @returns The camera object.\n   */\n  public getCamera(): ICamera {\n    const vtkCamera = this.getVtkActiveCamera();\n\n    return {\n      viewUp: <Point3>vtkCamera.getViewUp(),\n      viewPlaneNormal: <Point3>vtkCamera.getViewPlaneNormal(),\n      position: <Point3>vtkCamera.getPosition(),\n      focalPoint: <Point3>vtkCamera.getFocalPoint(),\n      parallelProjection: vtkCamera.getParallelProjection(),\n      parallelScale: vtkCamera.getParallelScale(),\n      viewAngle: vtkCamera.getViewAngle(),\n      flipHorizontal: this.flipHorizontal,\n      flipVertical: this.flipVertical,\n    };\n  }\n\n  /**\n   * Set the camera parameters\n   * @param cameraInterface - ICamera\n   * @param storeAsInitialCamera - to set the provided camera as the initial one,\n   *    used to compute differences for things like pan and zoom.\n   */\n  public setCamera(\n    cameraInterface: ICamera,\n    storeAsInitialCamera = false\n  ): void {\n    const vtkCamera = this.getVtkActiveCamera();\n    const previousCamera = _cloneDeep(this.getCamera());\n    const updatedCamera = Object.assign({}, previousCamera, cameraInterface);\n    const {\n      viewUp,\n      viewPlaneNormal,\n      position,\n      focalPoint,\n      parallelScale,\n      viewAngle,\n      flipHorizontal,\n      flipVertical,\n      clippingRange,\n    } = cameraInterface;\n\n    // Note: Flip camera should be two separate calls since\n    // for flip, we need to flip the viewportNormal, and if\n    // flipHorizontal, and flipVertical are both true, that would\n    // the logic would be incorrect. So instead, we handle flip Horizontal\n    // and flipVertical separately.\n    if (flipHorizontal !== undefined) {\n      // flip if not flipped but requested to flip OR if flipped but requested to\n      // not flip\n      const flipH =\n        (flipHorizontal && !this.flipHorizontal) ||\n        (!flipHorizontal && this.flipHorizontal);\n\n      if (flipH) {\n        this.flip({ flipHorizontal: flipH });\n      }\n    }\n\n    if (flipVertical !== undefined) {\n      const flipV =\n        (flipVertical && !this.flipVertical) ||\n        (!flipVertical && this.flipVertical);\n\n      if (flipV) {\n        this.flip({ flipVertical: flipV });\n      }\n    }\n\n    if (viewUp !== undefined) {\n      vtkCamera.setViewUp(viewUp);\n    }\n\n    if (viewPlaneNormal !== undefined) {\n      vtkCamera.setDirectionOfProjection(\n        -viewPlaneNormal[0],\n        -viewPlaneNormal[1],\n        -viewPlaneNormal[2]\n      );\n    }\n\n    if (position !== undefined) {\n      vtkCamera.setPosition(...position);\n    }\n\n    if (focalPoint !== undefined) {\n      vtkCamera.setFocalPoint(...focalPoint);\n    }\n\n    if (parallelScale !== undefined) {\n      vtkCamera.setParallelScale(parallelScale);\n    }\n\n    if (viewAngle !== undefined) {\n      vtkCamera.setViewAngle(viewAngle);\n    }\n\n    if (clippingRange !== undefined) {\n      vtkCamera.setClippingRange(clippingRange);\n    }\n\n    // update clippingPlanes if volume viewports\n    const actorEntry = this.getDefaultActor();\n\n    if (!actorEntry || !actorEntry.actor) {\n      return;\n    }\n\n    const isImageSlice = actorIsA(actorEntry, 'vtkImageSlice');\n\n    if (!isImageSlice) {\n      this.updateClippingPlanesForActors(updatedCamera);\n    } else {\n      const renderer = this.getRenderer();\n      renderer.resetCameraClippingRange();\n    }\n\n    if (storeAsInitialCamera) {\n      this.setInitialCamera(updatedCamera);\n    }\n\n    this.triggerCameraModifiedEventIfNecessary(\n      previousCamera,\n      this.getCamera()\n    );\n  }\n\n  /**\n   * Trigger camera modified event\n   * @param cameraInterface - ICamera\n   * @param cameraInterface - ICamera\n   */\n  public triggerCameraModifiedEventIfNecessary(\n    previousCamera: ICamera,\n    updatedCamera: ICamera\n  ): void {\n    if (!this._suppressCameraModifiedEvents && !this.suppressEvents) {\n      const eventDetail: EventTypes.CameraModifiedEventDetail = {\n        previousCamera,\n        camera: updatedCamera,\n        element: this.element,\n        viewportId: this.id,\n        renderingEngineId: this.renderingEngineId,\n        rotation: this.getRotation(),\n      };\n\n      triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n    }\n  }\n\n  /**\n   * Updates the actors clipping planes orientation from the camera properties\n   * @param updatedCamera - ICamera\n   */\n  protected updateClippingPlanesForActors(updatedCamera: ICamera): void {\n    const actorEntries = this.getActors();\n    actorEntries.forEach((actorEntry) => {\n      // we assume that the first two clipping plane of the mapper are always\n      // the 'camera' clipping. Update clipping planes only if the actor is\n      // a vtkVolume\n      if (!actorEntry.actor) {\n        return;\n      }\n\n      const mapper = actorEntry.actor.getMapper();\n      const vtkPlanes = mapper.getClippingPlanes();\n\n      let slabThickness = RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS;\n      if (actorEntry.slabThickness) {\n        slabThickness = actorEntry.slabThickness;\n      }\n\n      const { viewPlaneNormal, focalPoint } = updatedCamera;\n\n      this.setOrientationOfClippingPlanes(\n        vtkPlanes,\n        slabThickness,\n        viewPlaneNormal,\n        focalPoint\n      );\n    });\n  }\n\n  public setOrientationOfClippingPlanes(\n    vtkPlanes: Array<vtkPlane>,\n    slabThickness: number,\n    viewPlaneNormal: Point3,\n    focalPoint: Point3\n  ): void {\n    if (vtkPlanes.length < 2) {\n      return;\n    }\n\n    const scaledDistance = <Point3>[\n      viewPlaneNormal[0],\n      viewPlaneNormal[1],\n      viewPlaneNormal[2],\n    ];\n    vtkMath.multiplyScalar(scaledDistance, slabThickness);\n\n    vtkPlanes[0].setNormal(viewPlaneNormal);\n    const newOrigin1 = <Point3>[0, 0, 0];\n    vtkMath.subtract(focalPoint, scaledDistance, newOrigin1);\n    vtkPlanes[0].setOrigin(newOrigin1);\n\n    vtkPlanes[1].setNormal(\n      -viewPlaneNormal[0],\n      -viewPlaneNormal[1],\n      -viewPlaneNormal[2]\n    );\n    const newOrigin2 = <Point3>[0, 0, 0];\n    vtkMath.add(focalPoint, scaledDistance, newOrigin2);\n    vtkPlanes[1].setOrigin(newOrigin2);\n  }\n\n  private _getWorldDistanceViewUpAndViewRight(bounds, viewUp, viewPlaneNormal) {\n    const viewUpCorners = this._getCorners(bounds);\n    const viewRightCorners = this._getCorners(bounds);\n\n    const viewRight = vec3.cross(vec3.create(), viewUp, viewPlaneNormal);\n\n    let transform = vtkMatrixBuilder\n      .buildFromDegree()\n      .identity()\n      .rotateFromDirections(viewUp, [1, 0, 0]);\n\n    viewUpCorners.forEach((pt) => transform.apply(pt));\n\n    // range is now maximum X distance\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0; i < 8; i++) {\n      const y = viewUpCorners[i][0];\n      if (y > maxY) {\n        maxY = y;\n      }\n      if (y < minY) {\n        minY = y;\n      }\n    }\n\n    transform = vtkMatrixBuilder\n      .buildFromDegree()\n      .identity()\n      .rotateFromDirections(\n        [viewRight[0], viewRight[1], viewRight[2]],\n        [1, 0, 0]\n      );\n\n    viewRightCorners.forEach((pt) => transform.apply(pt));\n\n    // range is now maximum Y distance\n    let minX = Infinity;\n    let maxX = -Infinity;\n    for (let i = 0; i < 8; i++) {\n      const x = viewRightCorners[i][0];\n      if (x > maxX) {\n        maxX = x;\n      }\n      if (x < minX) {\n        minX = x;\n      }\n    }\n\n    return { widthWorld: maxX - minX, heightWorld: maxY - minY };\n  }\n\n  protected _shouldUseNativeDataType() {\n    const { useNorm16Texture, preferSizeOverAccuracy } =\n      getConfiguration().rendering;\n    return useNorm16Texture || preferSizeOverAccuracy;\n  }\n\n  _getCorners(bounds: Array<number>): Array<number>[] {\n    return [\n      [bounds[0], bounds[2], bounds[4]],\n      [bounds[0], bounds[2], bounds[5]],\n      [bounds[0], bounds[3], bounds[4]],\n      [bounds[0], bounds[3], bounds[5]],\n      [bounds[1], bounds[2], bounds[4]],\n      [bounds[1], bounds[2], bounds[5]],\n      [bounds[1], bounds[3], bounds[4]],\n      [bounds[1], bounds[3], bounds[5]],\n    ];\n  }\n\n  _getFocalPointForResetCamera(\n    centeredFocalPoint: Point3,\n    previousCamera: ICamera,\n    { resetPan = true, resetToCenter = true }\n  ): Point3 {\n    if (resetToCenter && resetPan) {\n      return centeredFocalPoint;\n    }\n\n    if (resetToCenter && !resetPan) {\n      return hasNaNValues(previousCamera.focalPoint)\n        ? centeredFocalPoint\n        : previousCamera.focalPoint;\n    }\n\n    if (!resetToCenter && resetPan) {\n      // this is an interesting case that means the reset camera should not\n      // change the slice (default behavior is to go to the center of the\n      // image), and rather just reset the pan on the slice that is currently\n      // being viewed\n      const oldCamera = previousCamera;\n      const oldFocalPoint = oldCamera.focalPoint;\n      const oldViewPlaneNormal = oldCamera.viewPlaneNormal;\n\n      const vectorFromOldFocalPointToCenteredFocalPoint = vec3.subtract(\n        vec3.create(),\n        centeredFocalPoint,\n        oldFocalPoint\n      );\n\n      const distanceFromOldFocalPointToCenteredFocalPoint = vec3.dot(\n        vectorFromOldFocalPointToCenteredFocalPoint,\n        oldViewPlaneNormal\n      );\n\n      const newFocalPoint = vec3.scaleAndAdd(\n        vec3.create(),\n        centeredFocalPoint,\n        oldViewPlaneNormal,\n        -1 * distanceFromOldFocalPointToCenteredFocalPoint\n      );\n\n      return [newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]];\n    }\n\n    if (!resetPan && !resetToCenter) {\n      // this means the reset camera should not change the slice and should not\n      // touch the pan either.\n      return hasNaNValues(previousCamera.focalPoint)\n        ? centeredFocalPoint\n        : previousCamera.focalPoint;\n    }\n  }\n\n  /**\n   * Determines whether or not the 3D point position is inside the boundaries of the 3D imageData.\n   * @param point - 3D coordinate\n   * @param bounds - Bounds of the image\n   * @returns boolean\n   */\n  _isInBounds(point: Point3, bounds: number[]): boolean {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n    const [x, y, z] = point;\n    if (x < xMin || x > xMax || y < yMin || y > yMax || z < zMin || z > zMax) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Returns a list of edges for the imageData bounds, which are\n   * the cube edges in the case of volumeViewport edges.\n   * p1: front, bottom, left\n   * p2: front, top, left\n   * p3: back, bottom, left\n   * p4: back, top, left\n   * p5: front, bottom, right\n   * p6: front, top, right\n   * p7: back, bottom, right\n   * p8: back, top, right\n   * @param bounds - Bounds of the renderer\n   * @returns Edges of the containing bounds\n   */\n  _getEdges(bounds: Array<number>): Array<[number[], number[]]> {\n    const [p1, p2, p3, p4, p5, p6, p7, p8] = this._getCorners(bounds);\n    return [\n      [p1, p2],\n      [p1, p5],\n      [p1, p3],\n      [p2, p4],\n      [p2, p6],\n      [p3, p4],\n      [p3, p7],\n      [p4, p8],\n      [p5, p7],\n      [p5, p6],\n      [p6, p8],\n      [p7, p8],\n    ];\n  }\n}\n\nexport default Viewport;\n","import macro from '@kitware/vtk.js/macros';\nimport vtkCamera from '@kitware/vtk.js/Rendering/Core/Camera';\nimport { vec3, mat4 } from 'gl-matrix';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\n\n/**\n * vtkSlabCamera - A derived class of the core vtkCamera class\n *\n * This customization is necesssary because when we do coordinate transformations\n * we need to set the cRange between [d, d + 0.1],\n * where d is distance between the camera position and the focal point.\n * While when we render we set to the clippingRange [0.01, d * 2],\n * where d is the calculated from the bounds of all the actors.\n *\n * @param {*} publicAPI The public API to extend\n * @param {*} model The private model to extend.\n */\nfunction vtkSlabCamera(publicAPI, model) {\n  model.classHierarchy.push('vtkSlabCamera');\n\n  // Set up private variables and methods\n  const tmpMatrix = mat4.identity(new Float64Array(16));\n  const tmpvec1 = new Float64Array(3);\n\n  /**\n   * getProjectionMatrix - A fork of vtkCamera's getProjectionMatrix method.\n   * This fork performs most of the same actions, but define crange around\n   * model.distance when doing coordinate transformations.\n   */\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\n    const result = mat4.create();\n\n    if (model.projectionMatrix) {\n      const scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n\n    mat4.identity(tmpMatrix);\n\n    let cRange0 = model.clippingRange[0];\n    let cRange1 = model.clippingRange[1];\n    if (model.isPerformingCoordinateTransformation) {\n      /**\n       * NOTE: this is necessary because we want the coordinate transformation\n       * respect to the view plane (plane orthogonal to the camera and passing to\n       * the focal point).\n       *\n       * When vtk.js computes the coordinate transformations, it simply uses the\n       * camera matrix (no ray casting).\n       *\n       * However for the volume viewport the clipping range is set to be\n       * (-RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE, RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE).\n       * The clipping range is used in the camera method getProjectionMatrix().\n       * The projection matrix is used then for viewToWorld/worldToView methods of\n       * the renderer. This means that vkt.js will not return the coordinates of\n       * the point on the view plane (i.e. the depth coordinate will corresponded\n       * to the focal point).\n       *\n       * Therefore the clipping range has to be set to (distance, distance + 0.01),\n       * where now distance is the distance between the camera position and focal\n       * point. This is done internally, in our camera customization when the flag\n       * isPerformingCoordinateTransformation is set to true.\n       */\n      cRange0 = model.distance;\n      cRange1 = model.distance + 0.1;\n    }\n\n    const cWidth = cRange1 - cRange0;\n    const cRange = [\n      cRange0 + ((nearz + 1) * cWidth) / 2.0,\n      cRange0 + ((farz + 1) * cWidth) / 2.0,\n    ];\n\n    if (model.parallelProjection) {\n      // set up a rectangular parallelipiped\n      const width = model.parallelScale * aspect;\n      const height = model.parallelScale;\n\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      const tmp = Math.tan(vtkMath.radiansFromDegrees(model.viewAngle) / 2.0);\n      let width;\n      let height;\n      if (model.useHorizontalViewAngle === true) {\n        width = cRange0 * tmp;\n        height = (cRange0 * tmp) / aspect;\n      } else {\n        width = cRange0 * tmp * aspect;\n        height = cRange0 * tmp;\n      }\n\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      const znear = cRange[0];\n      const zfar = cRange[1];\n\n      tmpMatrix[0] = (2.0 * znear) / (xmax - xmin);\n      tmpMatrix[5] = (2.0 * znear) / (ymax - ymin);\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = (-2.0 * znear * zfar) / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n\n    mat4.copy(result, tmpMatrix);\n\n    return result;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  isPerformingCoordinateTransformation: false,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkCamera.extend(publicAPI, model, initialValues);\n\n  macro.setGet(publicAPI, model, ['isPerformingCoordinateTransformation']);\n\n  // Object methods\n  vtkSlabCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkSlabCamera');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import type Point3 from '../types/Point3';\n\n/**\n * Given an imageData object and a point in physical space, return the index of the\n * voxel that contains the point. TODO: this should be pushed to vtk upstream.\n * @param imageData - The image data object.\n * @param physicalPoint - The point in physical space that you want to transform to\n * index space.\n * @returns An array of integers.\n */\nexport default function transformWorldToIndex(imageData, worldPos: Point3) {\n  const continuousIndex = imageData.worldToIndex(worldPos);\n  const index = continuousIndex.map(Math.round);\n\n  return index;\n}\n","import vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\nimport vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport vtkColorMaps from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\nimport vtkPiecewiseFunction from '@kitware/vtk.js/Common/DataModel/PiecewiseFunction';\n\nimport cache from '../cache';\nimport {\n  MPR_CAMERA_VALUES,\n  RENDERING_DEFAULTS,\n  VIEWPORT_PRESETS,\n} from '../constants';\nimport {\n  BlendModes,\n  Events,\n  OrientationAxis,\n  ViewportStatus,\n  VOILUTFunctionType,\n} from '../enums';\nimport ViewportType from '../enums/ViewportType';\nimport eventTarget from '../eventTarget';\nimport { getShouldUseCPURendering } from '../init';\nimport { loadVolume } from '../loaders/volumeLoader';\nimport type {\n  ActorEntry,\n  ColormapPublic,\n  FlipDirection,\n  IImageData,\n  IVolumeInput,\n  OrientationVectors,\n  Point2,\n  Point3,\n  VOIRange,\n  VolumeViewportProperties,\n} from '../types';\nimport { VoiModifiedEventDetail } from '../types/EventTypes';\nimport type { ViewportInput } from '../types/IViewport';\nimport type IVolumeViewport from '../types/IVolumeViewport';\nimport {\n  actorIsA,\n  applyPreset,\n  createSigmoidRGBTransferFunction,\n  getVoiFromSigmoidRGBTransferFunction,\n  imageIdToURI,\n  invertRgbTransferFunction,\n  triggerEvent,\n  colormap as colormapUtils,\n} from '../utilities';\nimport { createVolumeActor } from './helpers';\nimport volumeNewImageEventDispatcher, {\n  resetVolumeNewImageState,\n} from './helpers/volumeNewImageEventDispatcher';\nimport Viewport from './Viewport';\nimport type { vtkSlabCamera as vtkSlabCameraType } from './vtkClasses/vtkSlabCamera';\nimport vtkSlabCamera from './vtkClasses/vtkSlabCamera';\nimport transformWorldToIndex from '../utilities/transformWorldToIndex';\n\n/**\n * Abstract base class for volume viewports. VolumeViewports are used to render\n * 3D volumes from which various orientations can be viewed. Since VolumeViewports\n * use SharedVolumeMappers behind the scene, memory footprint of visualizations\n * of the same volume in different orientations is very small.\n *\n * For setting volumes on viewports you need to use {@link addVolumesToViewports}\n * which will add volumes to the specified viewports.\n */\nabstract class BaseVolumeViewport extends Viewport implements IVolumeViewport {\n  useCPURendering = false;\n  use16BitTexture = false;\n  private _FrameOfReferenceUID: string;\n  private inverted = false;\n\n  // Viewport Properties\n  // TODO: similar to setVoi, this is only applicable to first volume\n  private VOILUTFunction: VOILUTFunctionType;\n\n  constructor(props: ViewportInput) {\n    super(props);\n\n    this.useCPURendering = getShouldUseCPURendering();\n    this.use16BitTexture = this._shouldUseNativeDataType();\n\n    if (this.useCPURendering) {\n      throw new Error(\n        'VolumeViewports cannot be used whilst CPU Fallback Rendering is enabled.'\n      );\n    }\n\n    const renderer = this.getRenderer();\n\n    const camera = vtkSlabCamera.newInstance();\n    renderer.setActiveCamera(camera);\n\n    switch (this.type) {\n      case ViewportType.ORTHOGRAPHIC:\n        camera.setParallelProjection(true);\n        break;\n      case ViewportType.VOLUME_3D:\n        camera.setParallelProjection(true);\n        break;\n      case ViewportType.PERSPECTIVE:\n        camera.setParallelProjection(false);\n        break;\n      default:\n        throw new Error(`Unrecognized viewport type: ${this.type}`);\n    }\n\n    this.initializeVolumeNewImageEventDispatcher();\n  }\n\n  static get useCustomRenderingPipeline(): boolean {\n    return false;\n  }\n\n  protected applyViewOrientation(\n    orientation: OrientationAxis | OrientationVectors\n  ) {\n    const { viewPlaneNormal, viewUp } =\n      this._getOrientationVectors(orientation);\n    const camera = this.getVtkActiveCamera();\n    camera.setDirectionOfProjection(\n      -viewPlaneNormal[0],\n      -viewPlaneNormal[1],\n      -viewPlaneNormal[2]\n    );\n    camera.setViewUpFrom(viewUp);\n\n    this.resetCamera();\n  }\n\n  private initializeVolumeNewImageEventDispatcher(): void {\n    const volumeNewImageHandlerBound = volumeNewImageHandler.bind(this);\n    const volumeNewImageCleanUpBound = volumeNewImageCleanUp.bind(this);\n\n    function volumeNewImageHandler(cameraEvent) {\n      const { viewportId } = cameraEvent.detail;\n\n      if (viewportId !== this.id || this.isDisabled) {\n        return;\n      }\n\n      const viewportImageData = this.getImageData();\n\n      if (!viewportImageData) {\n        return;\n      }\n\n      volumeNewImageEventDispatcher(cameraEvent);\n    }\n\n    function volumeNewImageCleanUp(evt) {\n      const { viewportId } = evt.detail;\n\n      if (viewportId !== this.id) {\n        return;\n      }\n\n      this.element.removeEventListener(\n        Events.CAMERA_MODIFIED,\n        volumeNewImageHandlerBound\n      );\n\n      eventTarget.removeEventListener(\n        Events.ELEMENT_DISABLED,\n        volumeNewImageCleanUpBound\n      );\n\n      resetVolumeNewImageState(viewportId);\n    }\n\n    this.element.removeEventListener(\n      Events.CAMERA_MODIFIED,\n      volumeNewImageHandlerBound\n    );\n    this.element.addEventListener(\n      Events.CAMERA_MODIFIED,\n      volumeNewImageHandlerBound\n    );\n\n    eventTarget.addEventListener(\n      Events.ELEMENT_DISABLED,\n      volumeNewImageCleanUpBound\n    );\n  }\n\n  protected resetVolumeViewportClippingRange() {\n    const activeCamera = this.getVtkActiveCamera();\n\n    if (activeCamera.getParallelProjection()) {\n      activeCamera.setClippingRange(\n        -RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE,\n        RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE\n      );\n    } else {\n      activeCamera.setClippingRange(\n        RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS,\n        RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE\n      );\n    }\n  }\n\n  /**\n   * Sets the properties for the volume viewport on the volume\n   * Sets the VOILUTFunction property for the volume viewport on the volume\n   *\n   * @param VOILUTFunction - Sets the voi mode (LINEAR or SAMPLED_SIGMOID)\n   * @param volumeId - The volume id to set the properties for (if undefined, the first volume)\n   * @param suppressEvents - If true, the viewport will not emit events\n   */\n  private setVOILUTFunction(\n    voiLUTFunction: VOILUTFunctionType,\n    volumeId?: string,\n    suppressEvents?: boolean\n  ): void {\n    // make sure the VOI LUT function is valid in the VOILUTFunctionType which is enum\n    if (Object.values(VOILUTFunctionType).indexOf(voiLUTFunction) === -1) {\n      voiLUTFunction = VOILUTFunctionType.LINEAR;\n    }\n    const { voiRange } = this.getProperties();\n    this.VOILUTFunction = voiLUTFunction;\n    this.setVOI(voiRange, volumeId, suppressEvents);\n  }\n\n  /**\n   * Sets the colormap for the volume with the given ID and optionally suppresses events.\n   *\n   * @param colormap - The colormap to apply (e.g., \"hsv\").\n   * @param volumeId - The ID of the volume to set the colormap for.\n   * @param suppressEvents - If `true`, events will not be emitted during the colormap a\n   *\n   * @returns void\n   */\n  private setColormap(\n    colormap: ColormapPublic,\n    volumeId: string,\n    suppressEvents?: boolean\n  ) {\n    const applicableVolumeActorInfo = this._getApplicableVolumeActor(volumeId);\n\n    if (!applicableVolumeActorInfo) {\n      return;\n    }\n\n    const { volumeActor } = applicableVolumeActorInfo;\n\n    const mapper = volumeActor.getMapper();\n    mapper.setSampleDistance(1.0);\n\n    const cfun = vtkColorTransferFunction.newInstance();\n    let colormapObj = colormapUtils.getColormap(colormap.name);\n\n    const { name } = colormap;\n\n    if (!colormapObj) {\n      colormapObj = vtkColorMaps.getPresetByName(name);\n    }\n\n    if (!colormapObj) {\n      throw new Error(`Colormap ${colormap} not found`);\n    }\n\n    const range = volumeActor\n      .getProperty()\n      .getRGBTransferFunction(0)\n      .getRange();\n\n    cfun.applyColorMap(colormapObj);\n    cfun.setMappingRange(range[0], range[1]);\n    volumeActor.getProperty().setRGBTransferFunction(0, cfun);\n  }\n\n  /**\n   * Sets the opacity for the volume with the given ID.\n   *\n   * @param colormap - An object containing opacity that can be a number or an array of OpacityMapping\n   * @param volumeId - The ID of the volume to set the opacity for.\n   *\n   * @returns void\n   */\n  private setOpacity(colormap: ColormapPublic, volumeId: string) {\n    const applicableVolumeActorInfo = this._getApplicableVolumeActor(volumeId);\n    if (!applicableVolumeActorInfo) {\n      return;\n    }\n    const { volumeActor } = applicableVolumeActorInfo;\n    const ofun = vtkPiecewiseFunction.newInstance();\n    if (typeof colormap.opacity === 'number') {\n      const range = volumeActor\n        .getProperty()\n        .getRGBTransferFunction(0)\n        .getRange();\n\n      ofun.addPoint(range[0], colormap.opacity);\n      ofun.addPoint(range[1], colormap.opacity);\n    } else {\n      colormap.opacity.forEach(({ opacity, value }) => {\n        ofun.addPoint(value, opacity);\n      });\n    }\n    volumeActor.getProperty().setScalarOpacity(0, ofun);\n  }\n\n  /**\n   * Sets the inversion for the volume transfer function\n   *\n   * @param invert - Should the transfer function be inverted?\n   * @param volumeId - volumeId\n   * @param suppressEvents - If `true`, events will not be published\n   *\n   * @returns void\n   */\n  private setInvert(\n    invert: boolean,\n    volumeId?: string,\n    suppressEvents?: boolean\n  ) {\n    const applicableVolumeActorInfo = this._getApplicableVolumeActor(volumeId);\n\n    if (!applicableVolumeActorInfo) {\n      return;\n    }\n\n    const volumeIdToUse = applicableVolumeActorInfo.volumeId;\n\n    const cfun = this._getOrCreateColorTransferFunction(volumeIdToUse);\n    invertRgbTransferFunction(cfun);\n\n    this.inverted = invert;\n\n    const { voiRange } = this.getProperties();\n\n    if (!suppressEvents) {\n      const eventDetail: VoiModifiedEventDetail = {\n        viewportId: this.id,\n        range: voiRange,\n        volumeId: volumeIdToUse,\n        VOILUTFunction: this.VOILUTFunction,\n        invert: this.inverted,\n        invertStateChanged: true,\n      };\n\n      triggerEvent(this.element, Events.VOI_MODIFIED, eventDetail);\n    }\n  }\n\n  private _getOrCreateColorTransferFunction(\n    volumeId: string\n  ): vtkColorTransferFunction {\n    const applicableVolumeActorInfo = this._getApplicableVolumeActor(volumeId);\n\n    if (!applicableVolumeActorInfo) {\n      return null;\n    }\n\n    const { volumeActor } = applicableVolumeActorInfo;\n\n    const rgbTransferFunction = volumeActor\n      .getProperty()\n      .getRGBTransferFunction(0);\n\n    if (rgbTransferFunction) {\n      return rgbTransferFunction;\n    }\n\n    const newRGBTransferFunction = vtkColorTransferFunction.newInstance();\n    volumeActor.getProperty().setRGBTransferFunction(0, newRGBTransferFunction);\n\n    return newRGBTransferFunction;\n  }\n\n  /**\n   * Sets the properties for the volume viewport on the volume\n   * (if fusion, it sets it for the first volume in the fusion)\n   *\n   * @param voiRange - Sets the lower and upper voi\n   * @param volumeId - The volume id to set the properties for (if undefined, the first volume)\n   * @param suppressEvents - If true, the viewport will not emit events\n   */\n  private setVOI(\n    voiRange: VOIRange,\n    volumeId?: string,\n    suppressEvents = false\n  ): void {\n    const applicableVolumeActorInfo = this._getApplicableVolumeActor(volumeId);\n\n    if (!applicableVolumeActorInfo) {\n      return;\n    }\n\n    const { volumeActor } = applicableVolumeActorInfo;\n    const volumeIdToUse = applicableVolumeActorInfo.volumeId;\n\n    let voiRangeToUse = voiRange;\n    if (typeof voiRangeToUse === 'undefined') {\n      const imageData = volumeActor.getMapper().getInputData();\n      const range = imageData.getPointData().getScalars().getRange();\n      const maxVoiRange = { lower: range[0], upper: range[1] };\n      voiRangeToUse = maxVoiRange;\n    }\n\n    // scaling logic here\n    // https://github.com/Kitware/vtk-js/blob/c6f2e12cddfe5c0386a73f0793eb6d9ab20d573e/Sources/Rendering/OpenGL/VolumeMapper/index.js#L957-L972\n    if (this.VOILUTFunction === VOILUTFunctionType.SAMPLED_SIGMOID) {\n      const cfun = createSigmoidRGBTransferFunction(voiRangeToUse);\n      volumeActor.getProperty().setRGBTransferFunction(0, cfun);\n    } else {\n      // TODO: refactor and make it work for PET series (inverted/colormap)\n      // const cfun = createLinearRGBTransferFunction(voiRangeToUse);\n      // volumeActor.getProperty().setRGBTransferFunction(0, cfun);\n\n      // Todo: Moving from LINEAR to SIGMOID and back to LINEAR will not\n      // work until we implement it in a different way because the\n      // LINEAR transfer function is not recreated.\n      const { lower, upper } = voiRangeToUse;\n      volumeActor\n        .getProperty()\n        .getRGBTransferFunction(0)\n        .setRange(lower, upper);\n    }\n\n    if (!suppressEvents) {\n      const eventDetail: VoiModifiedEventDetail = {\n        viewportId: this.id,\n        range: voiRange,\n        volumeId: volumeIdToUse,\n        VOILUTFunction: this.VOILUTFunction,\n      };\n\n      triggerEvent(this.element, Events.VOI_MODIFIED, eventDetail);\n    }\n  }\n\n  /**\n   * Sets the properties for the volume viewport on the volume\n   * (if fusion, it sets it for the first volume in the fusion)\n   *\n   * @param VolumeViewportProperties - The properties to set\n   * @param [VolumeViewportProperties.voiRange] - Sets the lower and upper voi\n   * @param [VolumeViewportProperties.VOILUTFunction] - Sets the voi mode (LINEAR, or SAMPLED_SIGMOID)\n   * @param [VolumeViewportProperties.invert] - Inverts the color transfer function\n   * @param [VolumeViewportProperties.colormap] - Sets the colormap\n   * @param [VolumeViewportProperties.preset] - Sets the colormap\n   * @param volumeId - The volume id to set the properties for (if undefined, the first volume)\n   * @param suppressEvents - If true, the viewport will not emit events\n   */\n  public setProperties(\n    {\n      voiRange,\n      VOILUTFunction,\n      invert,\n      colormap,\n      preset,\n    }: VolumeViewportProperties = {},\n    volumeId?: string,\n    suppressEvents = false\n  ): void {\n    // Note: colormap should always be done first, since we can then\n    // modify the voiRange\n\n    if (colormap?.name) {\n      this.setColormap(colormap, volumeId, suppressEvents);\n    }\n    if (colormap?.opacity != null) {\n      this.setOpacity(colormap, volumeId);\n    }\n\n    if (voiRange !== undefined) {\n      this.setVOI(voiRange, volumeId, suppressEvents);\n    }\n\n    if (VOILUTFunction !== undefined) {\n      this.setVOILUTFunction(VOILUTFunction, volumeId, suppressEvents);\n    }\n\n    if (invert !== undefined && this.inverted !== invert) {\n      this.setInvert(invert, volumeId, suppressEvents);\n    }\n\n    if (preset !== undefined) {\n      this.setPreset(preset, volumeId, suppressEvents);\n    }\n  }\n\n  /**\n   * Sets the specified preset for the volume with the given ID\n   *\n   * @param presetName - The name of the preset to apply (e.g., \"CT-Bone\").\n   * @param volumeId - The ID of the volume to set the preset for.\n   * @param suppressEvents - If `true`, events will not be emitted during the preset application.\n   *\n   * @returns void\n   */\n  private setPreset(presetName, volumeId, suppressEvents) {\n    const applicableVolumeActorInfo = this._getApplicableVolumeActor(volumeId);\n\n    if (!applicableVolumeActorInfo) {\n      return;\n    }\n\n    const { volumeActor } = applicableVolumeActorInfo;\n\n    const preset = VIEWPORT_PRESETS.find((preset) => {\n      return preset.name === presetName;\n    });\n\n    if (!preset) {\n      return;\n    }\n\n    applyPreset(volumeActor, preset);\n  }\n\n  /**\n   * Retrieve the viewport properties\n   * @returns viewport properties including voi, interpolation type: TODO: slabThickness, invert, rotation, flip\n   */\n  public getProperties = (): VolumeViewportProperties => {\n    const voiRanges = this.getActors()\n      .map((actorEntry) => {\n        const volumeActor = actorEntry.actor as vtkVolume;\n        const volumeId = actorEntry.uid;\n        const volume = cache.getVolume(volumeId);\n        if (!volume) {\n          return null;\n        }\n        const cfun = volumeActor.getProperty().getRGBTransferFunction(0);\n        const [lower, upper] =\n          this.VOILUTFunction === 'SIGMOID'\n            ? getVoiFromSigmoidRGBTransferFunction(cfun)\n            : cfun.getRange();\n        return { volumeId, voiRange: { lower, upper } };\n      })\n      .filter(Boolean);\n\n    const voiRange = voiRanges.length ? voiRanges[0].voiRange : null;\n    const VOILUTFunction = this.VOILUTFunction;\n\n    return { voiRange, VOILUTFunction, invert: this.inverted };\n  };\n\n  /**\n   * Creates volume actors for all volumes defined in the `volumeInputArray`.\n   * For each entry, if a `callback` is supplied, it will be called with the new volume actor as input.\n   * For each entry, if a `blendMode` and/or `slabThickness` is defined, this will be set on the actor's\n   * `VolumeMapper`.\n   *\n   * @param volumeInputArray - The array of `VolumeInput`s which define the volumes to add.\n   * @param immediate - Whether the `Viewport` should be rendered as soon as volumes are added.\n   */\n  public async setVolumes(\n    volumeInputArray: Array<IVolumeInput>,\n    immediate = false,\n    suppressEvents = false\n  ): Promise<void> {\n    const firstImageVolume = cache.getVolume(volumeInputArray[0].volumeId);\n\n    if (!firstImageVolume) {\n      throw new Error(\n        `imageVolume with id: ${firstImageVolume.volumeId} does not exist`\n      );\n    }\n\n    const FrameOfReferenceUID = firstImageVolume.metadata.FrameOfReferenceUID;\n\n    await this._isValidVolumeInputArray(volumeInputArray, FrameOfReferenceUID);\n\n    this._FrameOfReferenceUID = FrameOfReferenceUID;\n\n    const volumeActors = [];\n\n    // One actor per volume\n    for (let i = 0; i < volumeInputArray.length; i++) {\n      const { volumeId, actorUID, slabThickness } = volumeInputArray[i];\n\n      const actor = await createVolumeActor(\n        volumeInputArray[i],\n        this.element,\n        this.id,\n        suppressEvents,\n        this.use16BitTexture\n      );\n\n      // We cannot use only volumeId since then we cannot have for instance more\n      // than one representation of the same volume (since actors would have the\n      // same name, and we don't allow that) AND We cannot use only any uid, since\n      // we rely on the volume in the cache for mapper. So we prefer actorUID if\n      // it is defined, otherwise we use volumeId for the actor name.\n      const uid = actorUID || volumeId;\n      volumeActors.push({\n        uid,\n        actor,\n        slabThickness,\n        referenceId: volumeId,\n      });\n    }\n\n    this._setVolumeActors(volumeActors);\n    this.viewportStatus = ViewportStatus.PRE_RENDER;\n\n    triggerEvent(this.element, Events.VOLUME_VIEWPORT_NEW_VOLUME, {\n      viewportId: this.id,\n      volumeActors,\n    });\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  /**\n   * Creates and adds volume actors for all volumes defined in the `volumeInputArray`.\n   * For each entry, if a `callback` is supplied, it will be called with the new volume actor as input.\n   *\n   * @param volumeInputArray - The array of `VolumeInput`s which define the volumes to add.\n   * @param immediate - Whether the `Viewport` should be rendered as soon as volumes are added.\n   */\n  public async addVolumes(\n    volumeInputArray: Array<IVolumeInput>,\n    immediate = false,\n    suppressEvents = false\n  ): Promise<void> {\n    const firstImageVolume = cache.getVolume(volumeInputArray[0].volumeId);\n\n    if (!firstImageVolume) {\n      throw new Error(\n        `imageVolume with id: ${firstImageVolume.volumeId} does not exist`\n      );\n    }\n    const volumeActors = [];\n\n    await this._isValidVolumeInputArray(\n      volumeInputArray,\n      this._FrameOfReferenceUID\n    );\n\n    // One actor per volume\n    for (let i = 0; i < volumeInputArray.length; i++) {\n      const { volumeId, visibility, actorUID, slabThickness } =\n        volumeInputArray[i];\n\n      const actor = await createVolumeActor(\n        volumeInputArray[i],\n        this.element,\n        this.id,\n        suppressEvents,\n        this.use16BitTexture\n      );\n\n      if (visibility === false) {\n        actor.setVisibility(false);\n      }\n\n      // We cannot use only volumeId since then we cannot have for instance more\n      // than one representation of the same volume (since actors would have the\n      // same name, and we don't allow that) AND We cannot use only any uid, since\n      // we rely on the volume in the cache for mapper. So we prefer actorUID if\n      // it is defined, otherwise we use volumeId for the actor name.\n      const uid = actorUID || volumeId;\n      volumeActors.push({\n        uid,\n        actor,\n        slabThickness,\n        // although the actor UID is defined, we need to use the volumeId for the\n        // referenceId, since the actor UID is used to reference the actor in the\n        // viewport, however, the actor is created from its volumeId\n        // and if later we need to grab the referenced volume from cache,\n        // we can use the referenceId to get the volume from the cache\n        referenceId: volumeId,\n      });\n    }\n\n    this.addActors(volumeActors);\n\n    if (immediate) {\n      // render\n      this.render();\n    }\n  }\n\n  /**\n   * It removes the volume actor from the Viewport. If the volume actor is not in\n   * the viewport, it does nothing.\n   * @param actorUIDs - Array of actor UIDs to remove. In case of simple volume it will\n   * be the volume Id, but in case of Segmentation it will be `{volumeId}-{representationType}`\n   * since the same volume can be rendered in multiple representations.\n   * @param immediate - If true, the Viewport will be rendered immediately\n   */\n  public removeVolumeActors(actorUIDs: Array<string>, immediate = false): void {\n    // Todo: This is actually removeActors\n    this.removeActors(actorUIDs);\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  /**\n   * It sets the orientation for the camera, the orientation can be one of the\n   * following: axial, sagittal, coronal, default. Use the Enums.OrientationAxis\n   * to set the orientation. The \"default\" orientation is the orientation that\n   * the volume was acquired in (scan axis)\n   *\n   * @param orientation - The orientation to set the camera to.\n   * @param immediate - Whether the `Viewport` should be rendered as soon as the camera is set.\n   */\n  public setOrientation(orientation: OrientationAxis, immediate = true): void {\n    console.warn('Method \"setOrientation\" needs implementation');\n  }\n\n  private _getApplicableVolumeActor(volumeId?: string) {\n    if (volumeId !== undefined && !this.getActor(volumeId)) {\n      return;\n    }\n\n    const actorEntries = this.getActors();\n\n    if (!actorEntries.length) {\n      return;\n    }\n\n    let volumeActor;\n\n    if (volumeId) {\n      volumeActor = this.getActor(volumeId)?.actor as vtkVolume;\n    }\n\n    // // set it for the first volume (if there are more than one - fusion)\n    if (!volumeActor) {\n      volumeActor = actorEntries[0].actor as vtkVolume;\n      volumeId = actorEntries[0].uid;\n    }\n\n    return { volumeActor, volumeId };\n  }\n\n  private async _isValidVolumeInputArray(\n    volumeInputArray: Array<IVolumeInput>,\n    FrameOfReferenceUID: string\n  ): Promise<boolean> {\n    const numVolumes = volumeInputArray.length;\n\n    // Check all other volumes exist and have the same FrameOfReference\n    for (let i = 1; i < numVolumes; i++) {\n      const volumeInput = volumeInputArray[i];\n\n      const imageVolume = await loadVolume(volumeInput.volumeId);\n\n      if (!imageVolume) {\n        throw new Error(\n          `imageVolume with id: ${imageVolume.volumeId} does not exist`\n        );\n      }\n\n      if (FrameOfReferenceUID !== imageVolume.metadata.FrameOfReferenceUID) {\n        throw new Error(\n          `Volumes being added to viewport ${this.id} do not share the same FrameOfReferenceUID. This is not yet supported`\n        );\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * gets the visible bounds of the viewport in the world coordinate system\n   */\n  public getBounds(): number[] {\n    const renderer = this.getRenderer();\n    const bounds = renderer.computeVisiblePropBounds();\n    return bounds;\n  }\n\n  /**\n   * Flip the viewport along the desired axis\n   * @param flipDirection - FlipDirection\n   */\n  public flip(flipDirection: FlipDirection): void {\n    super.flip(flipDirection);\n  }\n\n  public getFrameOfReferenceUID = (): string => {\n    return this._FrameOfReferenceUID;\n  };\n\n  /**\n   * Checks if the viewport has a volume actor with the given volumeId\n   * @param volumeId - the volumeId to look for\n   * @returns Boolean indicating if the volume is present in the viewport\n   */\n  public hasVolumeId(volumeId: string): boolean {\n    // Note: this assumes that the uid of the volume is the same as the volumeId\n    // which is not guaranteed to be the case for SEG.\n    const actorEntries = this.getActors();\n    return actorEntries.some((actorEntry) => {\n      return actorEntry.uid === volumeId;\n    });\n  }\n\n  /**\n   * Returns the image and its properties that is being shown inside the\n   * stack viewport. It returns, the image dimensions, image direction,\n   * image scalar data, vtkImageData object, metadata, and scaling (e.g., PET suvbw)\n   * Note: since the volume viewport supports fusion, to get the\n   * image data for a specific volume, use the optional volumeId\n   * argument.\n   *\n   * @param volumeId - The volumeId of the volume to get the image for.\n   * @returns IImageData: {dimensions, direction, scalarData, vtkImageData, metadata, scaling}\n   */\n  public getImageData(volumeId?: string): IImageData | undefined {\n    const defaultActor = this.getDefaultActor();\n    if (!defaultActor) {\n      return;\n    }\n\n    const { uid: defaultActorUID } = defaultActor;\n    volumeId = volumeId ?? defaultActorUID;\n\n    const actorEntry = this.getActor(volumeId);\n\n    if (!actorIsA(actorEntry, 'vtkVolume')) {\n      return;\n    }\n\n    const actor = actorEntry.actor;\n    const volume = cache.getVolume(volumeId);\n\n    const vtkImageData = actor.getMapper().getInputData();\n    return {\n      dimensions: vtkImageData.getDimensions(),\n      spacing: vtkImageData.getSpacing(),\n      origin: vtkImageData.getOrigin(),\n      direction: vtkImageData.getDirection(),\n      scalarData: vtkImageData.getPointData().getScalars().isDeleted()\n        ? null\n        : vtkImageData.getPointData().getScalars().getData(),\n      imageData: actor.getMapper().getInputData(),\n      metadata: {\n        Modality: volume?.metadata?.Modality,\n      },\n      scaling: volume?.scaling,\n      hasPixelSpacing: true,\n    };\n  }\n\n  /**\n   * Attaches the volume actors to the viewport.\n   *\n   * @param volumeActorEntries - The volume actors to add the viewport.\n   *\n   */\n  private _setVolumeActors(volumeActorEntries: Array<ActorEntry>): void {\n    // New volume actors implies resetting the inverted flag (i.e. like starting from scratch).\n    this.inverted = false;\n    this.setActors(volumeActorEntries);\n  }\n\n  /**\n   * canvasToWorld Returns the world coordinates of the given `canvasPos`\n   * projected onto the plane defined by the `Viewport`'s `vtkCamera`'s focal point\n   * and the direction of projection.\n   *\n   * @param canvasPos - The position in canvas coordinates.\n   * @returns The corresponding world coordinates.\n   * @public\n   */\n  public canvasToWorld = (canvasPos: Point2): Point3 => {\n    const vtkCamera = this.getVtkActiveCamera() as vtkSlabCameraType;\n\n    /**\n     * NOTE: this is necessary because we want the coordinate transformation\n     * respect to the view plane (plane orthogonal to the camera and passing to\n     * the focal point).\n     *\n     * When vtk.js computes the coordinate transformations, it simply uses the\n     * camera matrix (no ray casting).\n     *\n     * However for the volume viewport the clipping range is set to be\n     * (-RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE, RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE).\n     * The clipping range is used in the camera method getProjectionMatrix().\n     * The projection matrix is used then for viewToWorld/worldToView methods of\n     * the renderer. This means that vkt.js will not return the coordinates of\n     * the point on the view plane (i.e. the depth coordinate will correspond\n     * to the focal point).\n     *\n     * Therefore the clipping range has to be set to (distance, distance + 0.01),\n     * where now distance is the distance between the camera position and focal\n     * point. This is done internally, in our camera customization when the flag\n     * isPerformingCoordinateTransformation is set to true.\n     */\n\n    vtkCamera.setIsPerformingCoordinateTransformation?.(true);\n\n    const renderer = this.getRenderer();\n    const offscreenMultiRenderWindow =\n      this.getRenderingEngine().offscreenMultiRenderWindow;\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const size = openGLRenderWindow.getSize();\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const canvasPosWithDPR = [\n      canvasPos[0] * devicePixelRatio,\n      canvasPos[1] * devicePixelRatio,\n    ];\n    const displayCoord = [\n      canvasPosWithDPR[0] + this.sx,\n      canvasPosWithDPR[1] + this.sy,\n    ];\n\n    // The y axis display coordinates are inverted with respect to canvas coords\n    displayCoord[1] = size[1] - displayCoord[1];\n\n    const worldCoord = openGLRenderWindow.displayToWorld(\n      displayCoord[0],\n      displayCoord[1],\n      0,\n      renderer\n    );\n\n    vtkCamera.setIsPerformingCoordinateTransformation?.(false);\n\n    return [worldCoord[0], worldCoord[1], worldCoord[2]];\n  };\n\n  /**\n   * Returns the canvas coordinates of the given `worldPos`\n   * projected onto the `Viewport`'s `canvas`.\n   *\n   * @param worldPos - The position in world coordinates.\n   * @returns The corresponding canvas coordinates.\n   * @public\n   */\n  public worldToCanvas = (worldPos: Point3): Point2 => {\n    const vtkCamera = this.getVtkActiveCamera() as vtkSlabCameraType;\n\n    /**\n     * NOTE: this is necessary because we want the coordinate trasformation\n     * respect to the view plane (plane orthogonal to the camera and passing to\n     * the focal point).\n     *\n     * When vtk.js computes the coordinate transformations, it simply uses the\n     * camera matrix (no ray casting).\n     *\n     * However for the volume viewport the clipping range is set to be\n     * (-RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE, RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE).\n     * The clipping range is used in the camera method getProjectionMatrix().\n     * The projection matrix is used then for viewToWorld/worldToView methods of\n     * the renderer. This means that vkt.js will not return the coordinates of\n     * the point on the view plane (i.e. the depth coordinate will corresponded\n     * to the focal point).\n     *\n     * Therefore the clipping range has to be set to (distance, distance + 0.01),\n     * where now distance is the distance between the camera position and focal\n     * point. This is done internally, in our camera customization when the flag\n     * isPerformingCoordinateTransformation is set to true.\n     */\n\n    vtkCamera.setIsPerformingCoordinateTransformation?.(true);\n\n    const renderer = this.getRenderer();\n    const offscreenMultiRenderWindow =\n      this.getRenderingEngine().offscreenMultiRenderWindow;\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const size = openGLRenderWindow.getSize();\n    const displayCoord = openGLRenderWindow.worldToDisplay(\n      ...worldPos,\n      renderer\n    );\n\n    // The y axis display coordinates are inverted with respect to canvas coords\n    displayCoord[1] = size[1] - displayCoord[1];\n\n    const canvasCoord = <Point2>[\n      displayCoord[0] - this.sx,\n      displayCoord[1] - this.sy,\n    ];\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const canvasCoordWithDPR = <Point2>[\n      canvasCoord[0] / devicePixelRatio,\n      canvasCoord[1] / devicePixelRatio,\n    ];\n\n    vtkCamera.setIsPerformingCoordinateTransformation?.(false);\n\n    return canvasCoordWithDPR;\n  };\n\n  /*\n   * Checking if the imageURI is in the volumes that are being\n   * rendered by the viewport. imageURI is the imageId without the schema\n   * for instance for the imageId of wadors:http://..., the http://... is the imageURI.\n   * Why we don't check the imageId is because the same image can be shown in\n   * another viewport (StackViewport) with a different schema\n   *\n   * @param imageURI - The imageURI to check\n   * @returns True if the imageURI is in the volumes that are being rendered by the viewport\n   */\n  public hasImageURI = (imageURI: string): boolean => {\n    const volumeActors = this.getActors().filter((actorEntry) =>\n      actorIsA(actorEntry, 'vtkVolume')\n    );\n\n    return volumeActors.some(({ uid }) => {\n      const volume = cache.getVolume(uid);\n\n      if (!volume || !volume.imageIds) {\n        return false;\n      }\n\n      const volumeImageURIs = volume.imageIds.map(imageIdToURI);\n\n      return volumeImageURIs.includes(imageURI);\n    });\n  };\n\n  protected _getOrientationVectors(\n    orientation: OrientationAxis | OrientationVectors\n  ): OrientationVectors {\n    if (typeof orientation === 'object') {\n      if (orientation.viewPlaneNormal && orientation.viewUp) {\n        return orientation;\n      } else {\n        throw new Error(\n          'Invalid orientation object. It must contain viewPlaneNormal and viewUp'\n        );\n      }\n    } else if (\n      typeof orientation === 'string' &&\n      MPR_CAMERA_VALUES[orientation]\n    ) {\n      return MPR_CAMERA_VALUES[orientation];\n    } else {\n      throw new Error(\n        `Invalid orientation: ${orientation}. Valid orientations are: ${Object.keys(\n          MPR_CAMERA_VALUES\n        ).join(', ')}`\n      );\n    }\n  }\n  /**\n   * Gets the largest slab thickness from all actors in the viewport.\n   *\n   * @returns slabThickness - The slab thickness.\n   */\n  public getSlabThickness(): number {\n    const actors = this.getActors();\n    let slabThickness = RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS;\n    actors.forEach((actor) => {\n      if (actor.slabThickness > slabThickness) {\n        slabThickness = actor.slabThickness;\n      }\n    });\n\n    return slabThickness;\n  }\n  /**\n   * Given a point in world coordinates, return the intensity at that point\n   * @param point - The point in world coordinates to get the intensity\n   * from.\n   * @returns The intensity value of the voxel at the given point.\n   */\n  public getIntensityFromWorld(point: Point3): number {\n    const actorEntry = this.getDefaultActor();\n    if (!actorIsA(actorEntry, 'vtkVolume')) {\n      return;\n    }\n\n    const { actor, uid } = actorEntry;\n    const imageData = actor.getMapper().getInputData();\n\n    const volume = cache.getVolume(uid);\n    const { dimensions } = volume;\n\n    const index = transformWorldToIndex(imageData, point);\n\n    const voxelIndex =\n      index[2] * dimensions[0] * dimensions[1] +\n      index[1] * dimensions[0] +\n      index[0];\n\n    return volume.getScalarData()[voxelIndex];\n  }\n\n  /**\n   * Returns the list of image Ids for the current viewport\n   *\n   * @param volumeId - volumeId\n   * @returns list of strings for image Ids\n   */\n  public getImageIds = (volumeId?: string): Array<string> => {\n    const applicableVolumeActorInfo = this._getApplicableVolumeActor(volumeId);\n\n    if (!applicableVolumeActorInfo) {\n      throw new Error(`No actor found for the given volumeId: ${volumeId}`);\n    }\n\n    const volumeIdToUse = applicableVolumeActorInfo.volumeId;\n\n    const imageVolume = cache.getVolume(volumeIdToUse);\n    if (!imageVolume) {\n      throw new Error(\n        `imageVolume with id: ${volumeIdToUse} does not exist in cache`\n      );\n    }\n\n    return imageVolume.imageIds;\n  };\n\n  abstract getCurrentImageIdIndex(): number;\n\n  abstract getCurrentImageId(): string;\n\n  abstract setBlendMode(\n    blendMode: BlendModes,\n    filterActorUIDs?: Array<string>,\n    immediate?: boolean\n  ): void;\n\n  abstract setSlabThickness(\n    slabThickness: number,\n    filterActorUIDs?: Array<string>\n  ): void;\n\n  abstract resetProperties(volumeId?: string): void;\n}\n\nexport default BaseVolumeViewport;\n","import vtkPlane from '@kitware/vtk.js/Common/DataModel/Plane';\nimport { vec3 } from 'gl-matrix';\n\nimport cache from '../cache';\nimport { MPR_CAMERA_VALUES, RENDERING_DEFAULTS } from '../constants';\nimport { BlendModes, OrientationAxis } from '../enums';\nimport type {\n  ActorEntry,\n  IImageVolume,\n  IVolumeInput,\n  OrientationVectors,\n  Point3,\n} from '../types';\nimport type { ViewportInput } from '../types/IViewport';\nimport { actorIsA, getClosestImageId } from '../utilities';\nimport BaseVolumeViewport from './BaseVolumeViewport';\nimport setDefaultVolumeVOI from './helpers/setDefaultVolumeVOI';\nimport vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\n\n/**\n * An object representing a VolumeViewport. VolumeViewports are used to render\n * 3D volumes from which various orientations can be viewed. Since VolumeViewports\n * use SharedVolumeMappers behind the scene, memory footprint of visualizations\n * of the same volume in different orientations is very small.\n *\n * For setting volumes on viewports you need to use {@link addVolumesToViewports}\n * which will add volumes to the specified viewports.\n */\nclass VolumeViewport extends BaseVolumeViewport {\n  private _useAcquisitionPlaneForViewPlane = false;\n  constructor(props: ViewportInput) {\n    super(props);\n\n    const { orientation } = this.options;\n\n    // if the camera is set to be acquisition axis then we need to skip\n    // it for now until the volume is set\n    if (orientation && orientation !== OrientationAxis.ACQUISITION) {\n      this.applyViewOrientation(orientation);\n      return;\n    }\n\n    this._useAcquisitionPlaneForViewPlane = true;\n  }\n\n  /**\n   * Creates volume actors for all volumes defined in the `volumeInputArray`.\n   * For each entry, if a `callback` is supplied, it will be called with the new volume actor as input.\n   * For each entry, if a `blendMode` and/or `slabThickness` is defined, this will be set on the actor's\n   * `VolumeMapper`.\n   *\n   * @param volumeInputArray - The array of `VolumeInput`s which define the volumes to add.\n   * @param immediate - Whether the `Viewport` should be rendered as soon as volumes are added.\n   */\n  public async setVolumes(\n    volumeInputArray: Array<IVolumeInput>,\n    immediate = false,\n    suppressEvents = false\n  ): Promise<void> {\n    const firstImageVolume = cache.getVolume(volumeInputArray[0].volumeId);\n\n    if (!firstImageVolume) {\n      throw new Error(\n        `imageVolume with id: ${firstImageVolume.volumeId} does not exist`\n      );\n    }\n\n    if (this._useAcquisitionPlaneForViewPlane) {\n      this._setViewPlaneToAcquisitionPlane(firstImageVolume);\n      this._useAcquisitionPlaneForViewPlane = false;\n    }\n\n    return super.setVolumes(volumeInputArray, immediate, suppressEvents);\n  }\n\n  /**\n   * Creates and adds volume actors for all volumes defined in the `volumeInputArray`.\n   * For each entry, if a `callback` is supplied, it will be called with the new volume actor as input.\n   *\n   * @param volumeInputArray - The array of `VolumeInput`s which define the volumes to add.\n   * @param immediate - Whether the `Viewport` should be rendered as soon as volumes are added.\n   */\n  public async addVolumes(\n    volumeInputArray: Array<IVolumeInput>,\n    immediate = false,\n    suppressEvents = false\n  ): Promise<void> {\n    const firstImageVolume = cache.getVolume(volumeInputArray[0].volumeId);\n\n    if (!firstImageVolume) {\n      throw new Error(\n        `imageVolume with id: ${firstImageVolume.volumeId} does not exist`\n      );\n    }\n\n    if (this._useAcquisitionPlaneForViewPlane) {\n      this._setViewPlaneToAcquisitionPlane(firstImageVolume);\n      this._useAcquisitionPlaneForViewPlane = false;\n    }\n\n    return super.addVolumes(volumeInputArray, immediate, suppressEvents);\n  }\n\n  /**\n   * It sets the orientation for the camera, the orientation can be one of the\n   * following: axial, sagittal, coronal, default. Use the Enums.OrientationAxis\n   * to set the orientation. The \"default\" orientation is the orientation that\n   * the volume was acquired in (scan axis)\n   *\n   * @param orientation - The orientation to set the camera to.\n   * @param immediate - Whether the `Viewport` should be rendered as soon as the camera is set.\n   */\n  public setOrientation(orientation: OrientationAxis, immediate = true): void {\n    let viewPlaneNormal, viewUp;\n\n    if (MPR_CAMERA_VALUES[orientation]) {\n      ({ viewPlaneNormal, viewUp } = MPR_CAMERA_VALUES[orientation]);\n    } else if (orientation === 'acquisition') {\n      ({ viewPlaneNormal, viewUp } = this._getAcquisitionPlaneOrientation());\n    } else {\n      throw new Error(\n        `Invalid orientation: ${orientation}. Use Enums.OrientationAxis instead.`\n      );\n    }\n\n    this.setCamera({\n      viewPlaneNormal,\n      viewUp,\n    });\n\n    this.resetCamera();\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  private _getAcquisitionPlaneOrientation(): OrientationVectors {\n    const actorEntry = this.getDefaultActor();\n\n    if (!actorEntry) {\n      return;\n    }\n\n    // Todo: fix this after we add the volumeId reference to actorEntry later\n    // in the segmentation refactor\n    const volumeId = actorEntry.uid;\n\n    const imageVolume = cache.getVolume(volumeId);\n\n    if (!imageVolume) {\n      throw new Error(\n        `imageVolume with id: ${volumeId} does not exist in cache`\n      );\n    }\n\n    const { direction } = imageVolume;\n    const viewPlaneNormal = direction.slice(6, 9).map((x) => -x) as Point3;\n    const viewUp = (direction.slice(3, 6) as Point3).map((x) => -x) as Point3;\n\n    return {\n      viewPlaneNormal,\n      viewUp,\n    };\n  }\n\n  private _setViewPlaneToAcquisitionPlane(imageVolume: IImageVolume): void {\n    let viewPlaneNormal, viewUp;\n\n    if (imageVolume) {\n      const { direction } = imageVolume;\n      viewPlaneNormal = direction.slice(6, 9).map((x) => -x) as Point3;\n      viewUp = (direction.slice(3, 6) as Point3).map((x) => -x) as Point3;\n    } else {\n      ({ viewPlaneNormal, viewUp } = this._getAcquisitionPlaneOrientation());\n    }\n\n    this.setCamera({\n      viewPlaneNormal,\n      viewUp,\n    });\n\n    this.resetCamera();\n  }\n\n  public setBlendMode(\n    blendMode: BlendModes,\n    filterActorUIDs = [],\n    immediate = false\n  ): void {\n    let actorEntries = this.getActors();\n\n    if (filterActorUIDs && filterActorUIDs.length > 0) {\n      actorEntries = actorEntries.filter((actorEntry: ActorEntry) => {\n        return filterActorUIDs.includes(actorEntry.uid);\n      });\n    }\n\n    actorEntries.forEach((actorEntry) => {\n      const { actor } = actorEntry;\n\n      const mapper = actor.getMapper();\n      // @ts-ignore vtk incorrect typing\n      mapper.setBlendMode(blendMode);\n    });\n\n    if (immediate) {\n      this.render();\n    }\n  }\n\n  /**\n   * Reset the camera for the volume viewport\n   */\n  public resetCamera(\n    resetPan = true,\n    resetZoom = true,\n    resetToCenter = true\n  ): boolean {\n    super.resetCamera(resetPan, resetZoom, resetToCenter);\n\n    this.resetVolumeViewportClippingRange();\n\n    const activeCamera = this.getVtkActiveCamera();\n    const viewPlaneNormal = <Point3>activeCamera.getViewPlaneNormal();\n    const focalPoint = <Point3>activeCamera.getFocalPoint();\n\n    // always add clipping planes for the volume viewport. If a use case\n    // arises where we don't want clipping planes, you should use the volume_3d\n    // viewport instead.\n    const actorEntries = this.getActors();\n    actorEntries.forEach((actorEntry) => {\n      if (!actorEntry.actor) {\n        return;\n      }\n      const mapper = actorEntry.actor.getMapper();\n      const vtkPlanes = mapper.getClippingPlanes();\n\n      if (vtkPlanes.length === 0) {\n        const clipPlane1 = vtkPlane.newInstance();\n        const clipPlane2 = vtkPlane.newInstance();\n        const newVtkPlanes = [clipPlane1, clipPlane2];\n\n        let slabThickness = RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS;\n        if (actorEntry.slabThickness) {\n          slabThickness = actorEntry.slabThickness;\n        }\n\n        this.setOrientationOfClippingPlanes(\n          newVtkPlanes,\n          slabThickness,\n          viewPlaneNormal,\n          focalPoint\n        );\n\n        mapper.addClippingPlane(clipPlane1);\n        mapper.addClippingPlane(clipPlane2);\n      }\n    });\n\n    return true;\n  }\n\n  /**\n   * It sets the slabThickness of the actors of the viewport. If filterActorUIDs are\n   * provided, only the actors with the given UIDs will be affected. If no\n   * filterActorUIDs are provided, all actors will be affected.\n   *\n   * @param slabThickness - The slab thickness to set.\n   * @param filterActorUIDs - Optional argument to filter the actors to apply\n   * the slab thickness to (if not provided, all actors will be affected).\n   */\n  public setSlabThickness(slabThickness: number, filterActorUIDs = []): void {\n    let actorEntries = this.getActors();\n\n    if (filterActorUIDs && filterActorUIDs.length > 0) {\n      actorEntries = actorEntries.filter((actorEntry) => {\n        return filterActorUIDs.includes(actorEntry.uid);\n      });\n    }\n\n    actorEntries.forEach((actorEntry) => {\n      if (actorIsA(actorEntry, 'vtkVolume')) {\n        actorEntry.slabThickness = slabThickness;\n      }\n    });\n\n    const currentCamera = this.getCamera();\n    this.updateClippingPlanesForActors(currentCamera);\n    this.triggerCameraModifiedEventIfNecessary(currentCamera, currentCamera);\n  }\n\n  /**\n   * Uses the origin and focalPoint to calculate the slice index.\n   * Todo: This only works if the imageIds are properly sorted\n   *\n   * @returns The slice index\n   */\n  public getCurrentImageIdIndex = (): number | undefined => {\n    const { viewPlaneNormal, focalPoint } = this.getCamera();\n\n    // Todo: handle scenario of fusion of multiple volumes\n    // we cannot only check number of actors, because we might have\n    // segmentations ...\n    const { origin, spacing } = this.getImageData();\n\n    // how many steps are from the origin to the focal point in the\n    // normal direction\n    const spacingInNormal = spacing[2];\n    const sub = vec3.create();\n    vec3.sub(sub, focalPoint, origin);\n    const distance = vec3.dot(sub, viewPlaneNormal);\n\n    // divide by the spacing in the normal direction to get the\n    // number of steps, and subtract 1 to get the index\n    return Math.round(Math.abs(distance) / spacingInNormal);\n  };\n\n  /**\n   * Uses viewport camera and volume actor to decide if the viewport\n   * is looking at the volume in the direction of acquisition (imageIds).\n   * If so, it uses the origin and focalPoint to find which imageId is\n   * currently being viewed.\n   *\n   * @returns ImageId\n   */\n  public getCurrentImageId = (): string | undefined => {\n    if (this.getActors().length > 1) {\n      console.warn(\n        `Using the first/default actor of ${\n          this.getActors().length\n        } actors for getCurrentImageId.`\n      );\n    }\n\n    const actorEntry = this.getDefaultActor();\n\n    if (!actorEntry || !actorIsA(actorEntry, 'vtkVolume')) {\n      return;\n    }\n\n    const { uid } = actorEntry;\n    const volume = cache.getVolume(uid);\n\n    if (!volume) {\n      return;\n    }\n\n    const { viewPlaneNormal, focalPoint } = this.getCamera();\n\n    return getClosestImageId(volume, focalPoint, viewPlaneNormal);\n  };\n\n  getRotation = (): number => 0;\n\n  /**\n   * Reset the viewport properties to the default values\n   *\n\n   * @param volumeId - Optional volume ID to specify which volume properties to reset.\n   * If not provided, it will reset the properties of the default actor.\n   *\n   * @returns void\n   */\n  public resetProperties(volumeId?: string): void {\n    this._resetProperties(volumeId);\n  }\n\n  private _resetProperties(volumeId?: string) {\n    // Get the actor based on the volumeId if provided, otherwise use the default actor.\n    const volumeActor = volumeId\n      ? this.getActor(volumeId)\n      : this.getDefaultActor();\n\n    if (!volumeActor) {\n      throw new Error(`No actor found for the given volumeId: ${volumeId}`);\n    }\n\n    const imageVolume = cache.getVolume(volumeActor.uid);\n    if (!imageVolume) {\n      throw new Error(\n        `imageVolume with id: ${volumeActor.uid} does not exist in cache`\n      );\n    }\n    setDefaultVolumeVOI(volumeActor.actor as vtkVolume, imageVolume, false);\n  }\n}\n\nexport default VolumeViewport;\n","function areNumbersEqualWithTolerance(\n  num1: number,\n  num2: number,\n  tolerance: number\n): boolean {\n  return Math.abs(num1 - num2) <= tolerance;\n}\n\nfunction areArraysEqual(\n  arr1: ArrayLike<number>,\n  arr2: ArrayLike<number>,\n  tolerance = 1e-5\n): boolean {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (!areNumbersEqualWithTolerance(arr1[i], arr2[i], tolerance)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isNumberType(value: any): value is number {\n  return typeof value === 'number';\n}\n\nfunction isNumberArrayLike(value: any): value is ArrayLike<number> {\n  return 'length' in value && typeof value[0] === 'number';\n}\n\n/**\n * Returns whether two values are equal or not, based on epsilon comparison.\n * For array comparison, it does NOT strictly compare them but only compare its values.\n * It can compare array of numbers and also typed array. Otherwise it will just return false.\n *\n * @param v1 - The first value to compare\n * @param v2 - The second value to compare\n * @param tolerance - The acceptable tolerance, the default is 0.00001\n *\n * @returns True if the two values are within the tolerance levels.\n */\nexport default function isEqual<ValueType>(\n  v1: ValueType,\n  v2: ValueType,\n  tolerance = 1e-5\n): boolean {\n  // values must be the same type or not null\n  if (typeof v1 !== typeof v2 || v1 === null || v2 === null) {\n    return false;\n  }\n\n  if (isNumberType(v1) && isNumberType(v2)) {\n    return areNumbersEqualWithTolerance(v1, v2, tolerance);\n  }\n\n  if (isNumberArrayLike(v1) && isNumberArrayLike(v2)) {\n    return areArraysEqual(v1, v2, tolerance);\n  }\n\n  return false;\n}\n","/**\n * Use the performance.now() method if possible, and if not, use Date.now()\n *\n * @return {number} Time elapsed since the time origin\n * @memberof Polyfills\n */\nexport default function (): number {\n  if (window.performance) {\n    return performance.now();\n  }\n\n  return Date.now();\n}\n","/* eslint no-bitwise: 0 */\n\n/**\n * Volume of Interest Lookup Table Function\n *\n * @typedef {Function} VOILUTFunction\n *\n * @param {Number} modalityLutValue\n * @returns {Number} transformed value\n * @memberof Objects\n */\n\n/**\n * @module: VOILUT\n */\n\n/**\n * Generates the linear VOI LUT function.\n * From the DICOM standard:\n * https://dicom.nema.org/medical/dicom/current/output/html/part03.html#sect_C.11.2.1.2.1\n * ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax- ymin) + ymin\n * clipped to the ymin...ymax range\n *\n * @param {Number} windowWidth Window Width\n * @param {Number} windowCenter Window Center\n * @returns {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nfunction generateLinearVOILUT(windowWidth: number, windowCenter: number) {\n  return function (modalityLutValue) {\n    const value =\n      ((modalityLutValue - (windowCenter - 0.5)) / (windowWidth - 1) + 0.5) *\n      255.0;\n    return Math.min(Math.max(value, 0), 255);\n  };\n}\n\n/**\n * Generate a non-linear volume of interest lookup table\n *\n * @param {LUT} voiLUT Volume of Interest Lookup Table Object\n *\n * @returns {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nfunction generateNonLinearVOILUT(voiLUT) {\n  // We don't trust the voiLUT.numBitsPerEntry, mainly thanks to Agfa!\n  const bitsPerEntry = Math.max(...voiLUT.lut).toString(2).length;\n  const shift = bitsPerEntry - 8;\n  const minValue = voiLUT.lut[0] >> shift;\n  const maxValue = voiLUT.lut[voiLUT.lut.length - 1] >> shift;\n  const maxValueMapped = voiLUT.firstValueMapped + voiLUT.lut.length - 1;\n\n  return function (modalityLutValue) {\n    if (modalityLutValue < voiLUT.firstValueMapped) {\n      return minValue;\n    } else if (modalityLutValue >= maxValueMapped) {\n      return maxValue;\n    }\n\n    return voiLUT.lut[modalityLutValue - voiLUT.firstValueMapped] >> shift;\n  };\n}\n\n/**\n * Retrieve a VOI LUT mapping function given the current windowing settings\n * and the VOI LUT for the image\n *\n * @param {Number} windowWidth Window Width\n * @param {Number} windowCenter Window Center\n * @param {LUT} [voiLUT] Volume of Interest Lookup Table Object\n *\n * @return {VOILUTFunction} VOI LUT mapping function\n * @memberof VOILUT\n */\nexport default function (windowWidth: number, windowCenter: number, voiLUT) {\n  if (voiLUT) {\n    return generateNonLinearVOILUT(voiLUT);\n  }\n\n  return generateLinearVOILUT(windowWidth, windowCenter);\n}\n","import {\n  CPUFallbackTransform,\n  Point2,\n  TransformMatrix2D,\n} from '../../../../types';\n\n// By Simon Sarris\n// Www.simonsarris.com\n// Sarris@acm.org\n//\n// Free to use and distribute at will\n// So long as you are nice to people, etc\n\n// Simple class for keeping track of the current transformation matrix\n\n// For instance:\n//    Var t = new Transform();\n//    T.rotate(5);\n//    Var m = t.m;\n//    Ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n\n// Is equivalent to:\n//    Ctx.rotate(5);\n\n// But now you can retrieve it :)\n\n// Remember that this does not account for any CSS transforms applied to the canvas\nexport class Transform implements CPUFallbackTransform {\n  private m: TransformMatrix2D;\n\n  constructor() {\n    this.reset();\n  }\n\n  getMatrix(): TransformMatrix2D {\n    return this.m;\n  }\n\n  reset(): void {\n    this.m = [1, 0, 0, 1, 0, 0];\n  }\n\n  clone(): CPUFallbackTransform {\n    const transform = new Transform();\n\n    transform.m[0] = this.m[0];\n    transform.m[1] = this.m[1];\n    transform.m[2] = this.m[2];\n    transform.m[3] = this.m[3];\n    transform.m[4] = this.m[4];\n    transform.m[5] = this.m[5];\n\n    return transform;\n  }\n\n  multiply(matrix: TransformMatrix2D): void {\n    const m11 = this.m[0] * matrix[0] + this.m[2] * matrix[1];\n    const m12 = this.m[1] * matrix[0] + this.m[3] * matrix[1];\n\n    const m21 = this.m[0] * matrix[2] + this.m[2] * matrix[3];\n    const m22 = this.m[1] * matrix[2] + this.m[3] * matrix[3];\n\n    const dx = this.m[0] * matrix[4] + this.m[2] * matrix[5] + this.m[4];\n    const dy = this.m[1] * matrix[4] + this.m[3] * matrix[5] + this.m[5];\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n    this.m[4] = dx;\n    this.m[5] = dy;\n  }\n\n  invert(): void {\n    const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n    const m0 = this.m[3] * d;\n    const m1 = -this.m[1] * d;\n    const m2 = -this.m[2] * d;\n    const m3 = this.m[0] * d;\n    const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n    const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n\n    this.m[0] = m0;\n    this.m[1] = m1;\n    this.m[2] = m2;\n    this.m[3] = m3;\n    this.m[4] = m4;\n    this.m[5] = m5;\n  }\n\n  rotate(rad: number): void {\n    const c = Math.cos(rad);\n    const s = Math.sin(rad);\n    const m11 = this.m[0] * c + this.m[2] * s;\n    const m12 = this.m[1] * c + this.m[3] * s;\n    const m21 = this.m[0] * -s + this.m[2] * c;\n    const m22 = this.m[1] * -s + this.m[3] * c;\n\n    this.m[0] = m11;\n    this.m[1] = m12;\n    this.m[2] = m21;\n    this.m[3] = m22;\n  }\n\n  translate(x: number, y: number): void {\n    this.m[4] += this.m[0] * x + this.m[2] * y;\n    this.m[5] += this.m[1] * x + this.m[3] * y;\n  }\n\n  scale(sx: number, sy: number) {\n    this.m[0] *= sx;\n    this.m[1] *= sx;\n    this.m[2] *= sy;\n    this.m[3] *= sy;\n  }\n\n  transformPoint(point: Point2): Point2 {\n    const x = point[0];\n    const y = point[1];\n\n    return [\n      x * this.m[0] + y * this.m[2] + this.m[4],\n      x * this.m[1] + y * this.m[3] + this.m[5],\n    ];\n  }\n}\n","import { Transform } from './transform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\n/**\n * Calculate the transform for a Cornerstone enabled element\n *\n * @param enabledElement - The Cornerstone Enabled Element\n * @param scale - The viewport scale\n * @returns The current transform\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  scale?: number\n): CPUFallbackTransform {\n  const transform = new Transform();\n\n  if (!enabledElement.viewport.displayedArea) {\n    return transform;\n  }\n\n  // Move to center of canvas\n  transform.translate(\n    enabledElement.canvas.width / 2,\n    enabledElement.canvas.height / 2\n  );\n\n  // Apply the rotation before scaling for non square pixels\n  const angle = enabledElement.viewport.rotation;\n\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  // Apply the scale\n  let widthScale = enabledElement.viewport.scale;\n  let heightScale = enabledElement.viewport.scale;\n\n  const width =\n    enabledElement.viewport.displayedArea.brhc.x -\n    (enabledElement.viewport.displayedArea.tlhc.x - 1);\n  const height =\n    enabledElement.viewport.displayedArea.brhc.y -\n    (enabledElement.viewport.displayedArea.tlhc.y - 1);\n\n  if (enabledElement.viewport.displayedArea.presentationSizeMode === 'NONE') {\n    if (\n      enabledElement.image.rowPixelSpacing <\n      enabledElement.image.columnPixelSpacing\n    ) {\n      widthScale *=\n        enabledElement.image.columnPixelSpacing /\n        enabledElement.image.rowPixelSpacing;\n    } else if (\n      enabledElement.image.columnPixelSpacing <\n      enabledElement.image.rowPixelSpacing\n    ) {\n      heightScale *=\n        enabledElement.image.rowPixelSpacing /\n        enabledElement.image.columnPixelSpacing;\n    }\n  } else {\n    // These should be good for \"TRUE SIZE\" and \"MAGNIFY\"\n    widthScale = enabledElement.viewport.displayedArea.columnPixelSpacing;\n    heightScale = enabledElement.viewport.displayedArea.rowPixelSpacing;\n\n    if (\n      enabledElement.viewport.displayedArea.presentationSizeMode ===\n      'SCALE TO FIT'\n    ) {\n      // Fit TRUE IMAGE image (width/height) to window\n      const verticalScale =\n        enabledElement.canvas.height / (height * heightScale);\n      const horizontalScale =\n        enabledElement.canvas.width / (width * widthScale);\n\n      // Apply new scale\n      widthScale = heightScale = Math.min(horizontalScale, verticalScale);\n\n      if (\n        enabledElement.viewport.displayedArea.rowPixelSpacing <\n        enabledElement.viewport.displayedArea.columnPixelSpacing\n      ) {\n        widthScale *=\n          enabledElement.viewport.displayedArea.columnPixelSpacing /\n          enabledElement.viewport.displayedArea.rowPixelSpacing;\n      } else if (\n        enabledElement.viewport.displayedArea.columnPixelSpacing <\n        enabledElement.viewport.displayedArea.rowPixelSpacing\n      ) {\n        heightScale *=\n          enabledElement.viewport.displayedArea.rowPixelSpacing /\n          enabledElement.viewport.displayedArea.columnPixelSpacing;\n      }\n    }\n  }\n\n  transform.scale(widthScale, heightScale);\n\n  // Unrotate to so we can translate unrotated\n  if (angle !== 0) {\n    transform.rotate((-angle * Math.PI) / 180);\n  }\n\n  // Apply the pan offset\n  transform.translate(\n    enabledElement.viewport.translation.x,\n    enabledElement.viewport.translation.y\n  );\n\n  // Rotate again so we can apply general scale\n  if (angle !== 0) {\n    transform.rotate((angle * Math.PI) / 180);\n  }\n\n  if (scale !== undefined) {\n    // Apply the font scale\n    transform.scale(scale, scale);\n  }\n\n  // Apply Flip if required\n  if (enabledElement.viewport.hflip) {\n    transform.scale(-1, 1);\n  }\n\n  if (enabledElement.viewport.vflip) {\n    transform.scale(1, -1);\n  }\n\n  // Move back from center of image\n  transform.translate(-width / 2, -height / 2);\n\n  return transform;\n}\n","import calculateTransform from './calculateTransform';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Sets the canvas context transformation matrix to the pixel coordinate system.  This allows\n * geometry to be driven using the canvas context using coordinates in the pixel coordinate system\n * @param {EnabledElement} enabledElement The\n * @param {CanvasRenderingContext2D} context The CanvasRenderingContext2D for the enabledElement's Canvas\n * @param {Number} [scale] Optional scale to apply\n * @returns {void}\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  context: CanvasRenderingContext2D,\n  scale?: number\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'setToPixelCoordinateSystem: parameter enabledElement must not be undefined'\n    );\n  }\n  if (context === undefined) {\n    throw new Error(\n      'setToPixelCoordinateSystem: parameter context must not be undefined'\n    );\n  }\n\n  const transform = calculateTransform(enabledElement, scale);\n  const m = transform.getMatrix();\n\n  context.setTransform(m[0], m[1], m[2], m[3], m[4], m[5]);\n}\n","import { CPUFallbackEnabledElement, IImage } from '../../../../types';\n\n/**\n * Determine whether or not an Enabled Element needs to be re-rendered.\n *\n * If the imageId has changed, or if any of the last rendered viewport\n * parameters have changed, this function will return true.\n *\n * @param enabledElement - An Enabled Element\n * @param image - An Image\n * @returns Whether - or not the Enabled Element needs to re-render its image\n */\nexport default function doesImageNeedToBeRendered(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage\n): boolean {\n  const lastRenderedImageId = enabledElement.renderingTools.lastRenderedImageId;\n  const lastRenderedViewport =\n    enabledElement.renderingTools.lastRenderedViewport;\n\n  return (\n    image.imageId !== lastRenderedImageId ||\n    !lastRenderedViewport ||\n    lastRenderedViewport.windowCenter !==\n      enabledElement.viewport.voi.windowCenter ||\n    lastRenderedViewport.windowWidth !==\n      enabledElement.viewport.voi.windowWidth ||\n    lastRenderedViewport.invert !== enabledElement.viewport.invert ||\n    lastRenderedViewport.rotation !== enabledElement.viewport.rotation ||\n    lastRenderedViewport.hflip !== enabledElement.viewport.hflip ||\n    lastRenderedViewport.vflip !== enabledElement.viewport.vflip ||\n    lastRenderedViewport.modalityLUT !== enabledElement.viewport.modalityLUT ||\n    lastRenderedViewport.voiLUT !== enabledElement.viewport.voiLUT ||\n    lastRenderedViewport.colormap !== enabledElement.viewport.colormap\n  );\n}\n","import { CPUFallbackEnabledElement, IImage } from '../../../../types';\n\n/**\n * Sets size and clears canvas\n *\n * @param {Object} enabledElement Cornerstone Enabled Element\n * @param {Object} image Image to be rendered\n * @returns {void}\n * @memberof rendering\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage\n): void {\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  // Resize the canvas\n  renderCanvas.width = image.width;\n  renderCanvas.height = image.height;\n\n  const canvasContext = renderCanvas.getContext('2d');\n\n  // NOTE - we need to fill the render canvas with white pixels since we\n  // control the luminance using the alpha channel to improve rendering performance.\n  canvasContext.fillStyle = 'white';\n  canvasContext.fillRect(0, 0, renderCanvas.width, renderCanvas.height);\n\n  const renderCanvasData = canvasContext.getImageData(\n    0,\n    0,\n    image.width,\n    image.height\n  );\n\n  enabledElement.renderingTools.renderCanvasContext = canvasContext;\n  enabledElement.renderingTools.renderCanvasData = renderCanvasData;\n}\n","import {\n  CPUFallbackEnabledElement,\n  CPUFallbackRenderingTools,\n} from '../../../../types';\n\n/**\n * Saves the parameters of the last render into renderingTools, used later to decide if data can be reused.\n *\n * @param {Object} enabledElement Cornerstone EnabledElement\n * @returns {Object} enabledElement.renderingTools\n * @memberof rendering\n */\n\nexport default function (\n  enabledElement: CPUFallbackEnabledElement\n): CPUFallbackRenderingTools {\n  const imageId = enabledElement.image.imageId;\n  const viewport = enabledElement.viewport;\n  const isColor = enabledElement.image.color;\n\n  enabledElement.renderingTools.lastRenderedImageId = imageId;\n  enabledElement.renderingTools.lastRenderedIsColor = isColor;\n  enabledElement.renderingTools.lastRenderedViewport = {\n    windowCenter: viewport.voi.windowCenter,\n    windowWidth: viewport.voi.windowWidth,\n    invert: viewport.invert,\n    rotation: viewport.rotation,\n    hflip: viewport.hflip,\n    vflip: viewport.vflip,\n    modalityLUT: viewport.modalityLUT,\n    voiLUT: viewport.voiLUT,\n    colormap: viewport.colormap,\n  };\n\n  return enabledElement.renderingTools;\n}\n","import now from './now';\nimport generateColorLUT from './generateColorLUT';\nimport storedColorPixelDataToCanvasImageData from './storedColorPixelDataToCanvasImageData';\nimport storedRGBAPixelDataToCanvasImageData from './storedRGBAPixelDataToCanvasImageData';\nimport setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport saveLastRendered from './saveLastRendered';\nimport {\n  IImage,\n  CPUFallbackViewport,\n  CPUFallbackEnabledElement,\n} from '../../../../types';\n\n/**\n * Generates an appropriate Look Up Table to render the given image with the given window width and level (specified in the viewport)\n * Uses an internal cache for performance\n *\n * @param {Object} image  The image to be rendered\n * @param {Object} viewport The viewport values used for rendering\n * @returns {Uint8ClampedArray} Look Up Table array.\n * @memberof rendering\n */\nfunction getLut(image: IImage, viewport: CPUFallbackViewport) {\n  // If we have a cached lut and it has the right values, return it immediately\n  if (\n    image.cachedLut !== undefined &&\n    image.cachedLut.windowCenter === viewport.voi.windowCenter &&\n    image.cachedLut.windowWidth === viewport.voi.windowWidth &&\n    image.cachedLut.invert === viewport.invert\n  ) {\n    return image.cachedLut.lutArray;\n  }\n\n  // Lut is invalid or not present, regenerate it and cache it\n  generateColorLUT(\n    image,\n    viewport.voi.windowWidth,\n    viewport.voi.windowCenter,\n    viewport.invert\n  );\n  image.cachedLut.windowWidth = viewport.voi.windowWidth;\n  image.cachedLut.windowCenter = viewport.voi.windowCenter;\n  image.cachedLut.invert = viewport.invert;\n\n  return image.cachedLut.lutArray;\n}\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param enabledElement - The cornerstone enabled element\n * @param image - The image to be rendered\n * @param invalidated - Is pixel data valid\n * @returns An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean\n): HTMLCanvasElement {\n  const canvasWasColor =\n    enabledElement.renderingTools.lastRenderedIsColor === true;\n\n  if (!enabledElement.renderingTools.renderCanvas || !canvasWasColor) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  // The ww/wc is identity and not inverted - get a canvas with the image rendered into it for\n  // Fast drawing.  Note that this is 256/128, and NOT 255/127, per the DICOM\n  // standard, but allow either.\n  const { windowWidth, windowCenter } = enabledElement.viewport.voi;\n  if (\n    (windowWidth === 256 || windowWidth === 255) &&\n    (windowCenter === 128 || windowCenter === 127) &&\n    enabledElement.viewport.invert === false &&\n    image.getCanvas &&\n    image.getCanvas()\n  ) {\n    return image.getCanvas();\n  }\n\n  // Apply the lut to the stored pixel data onto the render canvas\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  // Get the lut to use\n  let start = now();\n  const colorLUT = getLut(image, enabledElement.viewport);\n\n  image.stats = image.stats || {};\n  image.stats.lastLutGenerateTime = now() - start;\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n\n  // The color image voi/invert has been modified - apply the lut to the underlying\n  // Pixel data and put it into the renderCanvas\n  if (image.rgba) {\n    storedRGBAPixelDataToCanvasImageData(\n      image,\n      colorLUT,\n      renderCanvasData.data\n    );\n  } else {\n    storedColorPixelDataToCanvasImageData(\n      image,\n      colorLUT,\n      renderCanvasData.data\n    );\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to render a color image to an enabled element\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderColorImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'renderColorImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error(\n      'renderColorImage: image must be loaded before it can be drawn'\n    );\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n","import getVOILUT from './getVOILut';\nimport { IImage, CPUFallbackLUT } from '../../../../types';\n\n/**\n * Creates a LUT used while rendering to convert stored pixel values to\n * display pixels\n *\n * @param image - A Cornerstone Image Object\n * @param windowWidth - The Window Width\n * @param windowCenter - The Window Center\n * @param invert - A boolean describing whether or not the image has been inverted\n * @param voiLUT- A Volume of Interest Lookup Table\n *\n * @returns A lookup table to apply to the image\n */\nexport default function generateColorLUT(\n  image: IImage,\n  windowWidth: number | number[],\n  windowCenter: number | number[],\n  invert: boolean,\n  voiLUT?: CPUFallbackLUT\n) {\n  const maxPixelValue = image.maxPixelValue;\n  const minPixelValue = image.minPixelValue;\n  const offset = Math.min(minPixelValue, 0);\n\n  if (image.cachedLut === undefined) {\n    const length = maxPixelValue - offset + 1;\n\n    image.cachedLut = {};\n    image.cachedLut.lutArray = new Uint8ClampedArray(length);\n  }\n\n  const lut = image.cachedLut.lutArray;\n  const vlutfn = getVOILUT(\n    Array.isArray(windowWidth) ? windowWidth[0] : windowWidth,\n    Array.isArray(windowCenter) ? windowCenter[0] : windowCenter,\n    voiLUT\n  );\n\n  if (invert === true) {\n    for (\n      let storedValue = minPixelValue;\n      storedValue <= maxPixelValue;\n      storedValue++\n    ) {\n      lut[storedValue + -offset] = 255 - vlutfn(storedValue);\n    }\n  } else {\n    for (\n      let storedValue = minPixelValue;\n      storedValue <= maxPixelValue;\n      storedValue++\n    ) {\n      lut[storedValue + -offset] = vlutfn(storedValue);\n    }\n  }\n\n  return lut;\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * Converts stored RGBA color pixel values to display pixel values using a LUT.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  const numPixels = pixelData.length;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n  start = now();\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Green\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Blue\n      canvasImageDataData[canvasImageDataIndex++] =\n        pixelData[storedPixelDataIndex++];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Green\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Blue\n      canvasImageDataData[canvasImageDataIndex++] =\n        pixelData[storedPixelDataIndex++];\n    }\n  }\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * Converts stored color pixel values to display pixel values using a LUT.\n *\n * Note: Skips alpha value for any input image pixel data.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  const numPixels = pixelData.length;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n  start = now();\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Green\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex] + -minPixelValue]; // Blue\n      storedPixelDataIndex += 2;\n      canvasImageDataIndex += 2;\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Red\n      canvasImageDataData[canvasImageDataIndex++] =\n        lut[pixelData[storedPixelDataIndex++]]; // Green\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex]]; // Blue\n      storedPixelDataIndex += 2;\n      canvasImageDataIndex += 2;\n    }\n  }\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","/**\n * Check if two lookup tables match\n *\n * @param {LUT} a A lookup table function\n * @param {LUT} b Another lookup table function\n * @return {boolean} Whether or not they match\n * @memberof rendering\n */\nexport default function (a: any, b: any) {\n  // If undefined, they are equal\n  if (!a && !b) {\n    return true;\n  }\n  // If one is undefined, not equal\n  if (!a || !b) {\n    return false;\n  }\n\n  // Check the unique ids\n  return a.id === b.id;\n}\n","import computeAutoVoi from './computeAutoVoi';\nimport lutMatches from './lutMatches';\nimport generateLut from './generateLut';\nimport { IImage, CPUFallbackViewport } from '../../../../types';\n\n/**\n * Retrieve or generate a LUT Array for an Image and Viewport\n *\n * @param {Image} image An Image Object\n * @param {Viewport} viewport An Viewport Object\n * @param {Boolean} invalidated Whether or not the LUT data has been invalidated\n * (e.g. by a change to the windowWidth, windowCenter, or invert viewport parameters).\n * @return {Uint8ClampedArray} LUT Array\n * @memberof rendering\n */\nexport default function (\n  image: IImage,\n  viewport: CPUFallbackViewport,\n  invalidated: boolean\n): Uint8ClampedArray {\n  // If we have a cached lut and it has the right values, return it immediately\n  if (\n    image.cachedLut !== undefined &&\n    image.cachedLut.windowCenter === viewport.voi.windowCenter &&\n    image.cachedLut.windowWidth === viewport.voi.windowWidth &&\n    lutMatches(image.cachedLut.modalityLUT, viewport.modalityLUT) &&\n    lutMatches(image.cachedLut.voiLUT, viewport.voiLUT) &&\n    image.cachedLut.invert === viewport.invert &&\n    invalidated !== true\n  ) {\n    return image.cachedLut.lutArray;\n  }\n\n  computeAutoVoi(viewport, image);\n\n  // Lut is invalid or not present, regenerate it and cache it\n  generateLut(\n    image,\n    viewport.voi.windowWidth,\n    viewport.voi.windowCenter,\n    viewport.invert,\n    viewport.modalityLUT,\n    viewport.voiLUT\n  );\n\n  image.cachedLut.windowWidth = viewport.voi.windowWidth;\n  image.cachedLut.windowCenter = viewport.voi.windowCenter;\n  image.cachedLut.invert = viewport.invert;\n  image.cachedLut.voiLUT = viewport.voiLUT;\n  image.cachedLut.modalityLUT = viewport.modalityLUT;\n\n  return image.cachedLut.lutArray;\n}\n","import type { IImage, CPUFallbackViewport } from '../../../../types';\n\n/**\n * Computes the VOI to display all the pixels if no VOI LUT data (Window Width/Window Center or voiLUT) exists on the viewport object.\n *\n * @param viewport - Object containing the viewport properties\n * @param image - An Image loaded by a Cornerstone Image Loader\n */\nexport default function computeAutoVoi(\n  viewport: CPUFallbackViewport,\n  image: IImage\n): void {\n  if (hasVoi(viewport)) {\n    return;\n  }\n\n  const maxVoi = image.maxPixelValue * image.slope + image.intercept;\n  const minVoi = image.minPixelValue * image.slope + image.intercept;\n  const ww = maxVoi - minVoi;\n  const wc = (maxVoi + minVoi) / 2;\n\n  if (viewport.voi === undefined) {\n    viewport.voi = {\n      windowWidth: ww,\n      windowCenter: wc,\n    };\n  } else {\n    viewport.voi.windowWidth = ww;\n    viewport.voi.windowCenter = wc;\n  }\n}\n\n/**\n * Check if viewport has voi LUT data\n * @param viewport - The viewport to check for voi LUT data\n * @returns true viewport has LUT data (Window Width/Window Center or voiLUT). Otherwise, false.\n */\nfunction hasVoi(viewport: CPUFallbackViewport): boolean {\n  const hasLut =\n    viewport.voiLUT && viewport.voiLUT.lut && viewport.voiLUT.lut.length > 0;\n\n  return (\n    hasLut ||\n    (viewport.voi.windowWidth !== undefined &&\n      viewport.voi.windowCenter !== undefined)\n  );\n}\n","import getModalityLut from './getModalityLut';\nimport getVOILUT from './getVOILut';\nimport { IImage, CPUFallbackLUT } from '../../../../types';\n\n/**\n * Creates a LUT used while rendering to convert stored pixel values to\n * display pixels\n *\n * @param image - A Cornerstone Image Object\n * @param windowWidth - The Window Width\n * @param windowCenter - The Window Center\n * @param invert - A boolean describing whether or not the image has been inverted\n * @param modalityLUT - A modality Lookup Table\n * @param voiLUT - A Volume of Interest Lookup Table\n *\n * @returns A lookup table to apply to the image\n */\nexport default function (\n  image: IImage,\n  windowWidth: number,\n  windowCenter: number,\n  invert: boolean,\n  modalityLUT: CPUFallbackLUT,\n  voiLUT: CPUFallbackLUT\n): Uint8ClampedArray {\n  const maxPixelValue = image.maxPixelValue;\n  const minPixelValue = image.minPixelValue;\n  const offset = Math.min(minPixelValue, 0);\n\n  if (image.cachedLut === undefined) {\n    const length = maxPixelValue - offset + 1;\n\n    image.cachedLut = {};\n    image.cachedLut.lutArray = new Uint8ClampedArray(length);\n  }\n\n  const lut = image.cachedLut.lutArray;\n\n  const mlutfn = getModalityLut(image.slope, image.intercept, modalityLUT);\n  const vlutfn = getVOILUT(windowWidth, windowCenter, voiLUT);\n\n  if (image.isPreScaled) {\n    // if the image is already preScaled, it means that the slop and the intercept\n    // are applied and there is no need for a modalityLut\n    if (invert === true) {\n      for (\n        let storedValue = minPixelValue;\n        storedValue <= maxPixelValue;\n        storedValue++\n      ) {\n        lut[storedValue + -offset] = 255 - vlutfn(storedValue);\n      }\n    } else {\n      for (\n        let storedValue = minPixelValue;\n        storedValue <= maxPixelValue;\n        storedValue++\n      ) {\n        lut[storedValue + -offset] = vlutfn(storedValue);\n      }\n    }\n  } else {\n    if (invert === true) {\n      for (\n        let storedValue = minPixelValue;\n        storedValue <= maxPixelValue;\n        storedValue++\n      ) {\n        lut[storedValue + -offset] = 255 - vlutfn(mlutfn(storedValue));\n      }\n    } else {\n      for (\n        let storedValue = minPixelValue;\n        storedValue <= maxPixelValue;\n        storedValue++\n      ) {\n        lut[storedValue + -offset] = vlutfn(mlutfn(storedValue));\n      }\n    }\n  }\n\n  return lut;\n}\n","/**\n * Generates a linear modality transformation function\n *\n * See DICOM PS3.3 C.11.1 Modality LUT Module\n *\n * http://dicom.nema.org/medical/Dicom/current/output/chtml/part03/sect_C.11.html\n *\n * @param {Number} slope m in the equation specified by Rescale Intercept (0028,1052).\n * @param {Number} intercept The value b in relationship between stored values (SV) and the output units specified in Rescale Type (0028,1054).\n\n Output units = m*SV + b.\n * @return {function(*): *} A linear modality LUT function. Given a stored pixel it returns the modality pixel value\n * @memberof Internal\n */\nfunction generateLinearModalityLUT(slope, intercept) {\n  return (storedPixelValue) => storedPixelValue * slope + intercept;\n}\n\nfunction generateNonLinearModalityLUT(modalityLUT) {\n  const minValue = modalityLUT.lut[0];\n  const maxValue = modalityLUT.lut[modalityLUT.lut.length - 1];\n  const maxValueMapped = modalityLUT.firstValueMapped + modalityLUT.lut.length;\n\n  return (storedPixelValue) => {\n    if (storedPixelValue < modalityLUT.firstValueMapped) {\n      return minValue;\n    } else if (storedPixelValue >= maxValueMapped) {\n      return maxValue;\n    }\n\n    return modalityLUT.lut[storedPixelValue];\n  };\n}\n\n/**\n * Get the appropriate Modality LUT for the current situation.\n *\n * @param {Number} [slope] m in the equation specified by Rescale Intercept (0028,1052).\n * @param {Number} [intercept] The value b in relationship between stored values (SV) and the output units specified in Rescale Type (0028,1054).\n * @param {Function} [modalityLUT] A modality LUT function. Given a stored pixel it returns the modality pixel value.\n *\n * @return {function(*): *} A modality LUT function. Given a stored pixel it returns the modality pixel value.\n * @memberof Internal\n */\nexport default function (\n  slope: number,\n  intercept: number,\n  modalityLUT: unknown\n) {\n  if (modalityLUT) {\n    return generateNonLinearModalityLUT(modalityLUT);\n  }\n\n  return generateLinearModalityLUT(slope, intercept);\n}\n","import storedPixelDataToCanvasImageData from './storedPixelDataToCanvasImageData';\nimport storedPixelDataToCanvasImageDataPET from './storedPixelDataToCanvasImageDataPET';\nimport storedPixelDataToCanvasImageDataRGBA from './storedPixelDataToCanvasImageDataRGBA';\nimport setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport now from './now';\nimport getLut from './getLut';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport saveLastRendered from './saveLastRendered';\nimport { IImage, CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param {Object} enabledElement The cornerstone enabled element\n * @param {Object} image The image to be rendered\n * @param {Boolean} invalidated Is pixel data valid\n * @param {Boolean} [useAlphaChannel = true] Will an alpha channel be used\n * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean,\n  useAlphaChannel = true\n): HTMLCanvasElement {\n  const canvasWasColor =\n    enabledElement.renderingTools.lastRenderedIsColor === true;\n\n  if (!enabledElement.renderingTools.renderCanvas || canvasWasColor) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  image.stats = image.stats || {};\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n\n  let start = now();\n  image.stats.lastLutGenerateTime = now() - start;\n\n  const { viewport } = enabledElement;\n\n  // If modality is 'PT' and the image is scaled then the results are floating points,\n  // and we cannot create a lut for it (cannot have float indices). Therefore,\n  // we use a mapping function to get the voiLUT from the values by applying\n  // the windowLevel and windowWidth.\n  if (viewport.modality === 'PT' && image.isPreScaled) {\n    const { windowWidth, windowCenter } = viewport.voi;\n    const minimum = windowCenter - windowWidth / 2;\n    const maximum = windowCenter + windowWidth / 2;\n    const range = maximum - minimum;\n    const collectedMultiplierTerms = 255.0 / range;\n\n    let petVOILutFunction;\n\n    if (viewport.invert) {\n      petVOILutFunction = (value) =>\n        255 - (value - minimum) * collectedMultiplierTerms;\n    } else {\n      // Note, don't need to math.floor, that is dealt with by setting the value in the Uint8Array.\n      petVOILutFunction = (value) =>\n        (value - minimum) * collectedMultiplierTerms;\n    }\n\n    storedPixelDataToCanvasImageDataPET(\n      image,\n      petVOILutFunction,\n      renderCanvasData.data\n    );\n  } else {\n    // Get the lut to use\n    const lut = getLut(image, viewport, invalidated);\n\n    if (useAlphaChannel) {\n      storedPixelDataToCanvasImageData(image, lut, renderCanvasData.data);\n    } else {\n      storedPixelDataToCanvasImageDataRGBA(image, lut, renderCanvasData.data);\n    }\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to draw a grayscale image to a given enabledElement\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderGrayscaleImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'drawImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error('drawImage: image must be loaded before it can be drawn');\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.  This is the most performance sensitive code in cornerstone and\n * we use a special trick to make this go as fast as possible.  Specifically we\n * use the alpha channel only to control the luminance rather than the red, green and\n * blue channels which makes it over 3x faster. The canvasImageDataData buffer needs\n * to be previously filled with white pixels.\n *\n * NOTE: Attribution would be appreciated if you use this technique!\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lutFunction: (value: number) => number,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  // const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 3;\n  let storedPixelDataIndex = 0;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n\n  while (storedPixelDataIndex < numPixels) {\n    canvasImageDataData[canvasImageDataIndex] = lutFunction(\n      pixelData[storedPixelDataIndex++]\n    ); // Alpha\n    canvasImageDataIndex += 4;\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.  This is the most performance sensitive code in cornerstone and\n * we use a special trick to make this go as fast as possible.  Specifically we\n * use the alpha channel only to control the luminance rather than the red, green and\n * blue channels which makes it over 3x faster. The canvasImageDataData buffer needs\n * to be previously filled with white pixels.\n *\n * NOTE: Attribution would be appreciated if you use this technique!\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 3;\n  let storedPixelDataIndex = 0;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n  if (pixelData instanceof Int16Array) {\n    if (minPixelValue < 0) {\n      while (storedPixelDataIndex < numPixels) {\n        canvasImageDataData[canvasImageDataIndex] =\n          lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Alpha\n        canvasImageDataIndex += 4;\n      }\n    } else {\n      while (storedPixelDataIndex < numPixels) {\n        canvasImageDataData[canvasImageDataIndex] =\n          lut[pixelData[storedPixelDataIndex++]]; // Alpha\n        canvasImageDataIndex += 4;\n      }\n    }\n  } else if (pixelData instanceof Uint16Array) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++]]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  } else if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++] + -minPixelValue]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      canvasImageDataData[canvasImageDataIndex] =\n        lut[pixelData[storedPixelDataIndex++]]; // Alpha\n      canvasImageDataIndex += 4;\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import now from './now';\nimport { IImage } from '../../../../types';\n\n/**\n * This function transforms stored pixel values into a canvas image data buffer\n * by using a LUT.\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} lut Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  lut: Uint8ClampedArray,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let pixelValue;\n\n  // NOTE: As of Nov 2014, most javascript engines have lower performance when indexing negative indexes.\n  // We have a special code path for this case that improves performance.  Thanks to @jpambrun for this enhancement\n\n  // Added two paths (Int16Array, Uint16Array) to avoid polymorphic deoptimization in chrome.\n  start = now();\n  if (pixelData instanceof Int16Array) {\n    if (minPixelValue < 0) {\n      while (storedPixelDataIndex < numPixels) {\n        pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n      }\n    } else {\n      while (storedPixelDataIndex < numPixels) {\n        pixelValue = lut[pixelData[storedPixelDataIndex++]];\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n      }\n    }\n  } else if (pixelData instanceof Uint16Array) {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++]];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  } else if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++]];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255; // Alpha\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n","import { Point2, Point4, CPUFallbackLookupTable } from '../../../../types';\n\n// This code was created based on vtkLookupTable\n// http://www.vtk.org/doc/release/5.0/html/a01697.html\n// https://github.com/Kitware/VTK/blob/master/Common/Core/vtkLookupTable.cxx\nconst BELOW_RANGE_COLOR_INDEX = 0;\nconst ABOVE_RANGE_COLOR_INDEX = 1;\nconst NAN_COLOR_INDEX = 2;\n\n/**\n * Converts an HSV  (Hue, Saturation, Value) color to RGB (Red, Green, Blue) color value\n * @param {Number} hue A number representing the hue color value\n * @param {any} sat A number representing the saturation color value\n * @param {any} val A number representing the value color value\n * @returns {Numberp[]} An RGB color array\n */\nfunction HSVToRGB(hue, sat, val) {\n  if (hue > 1) {\n    throw new Error('HSVToRGB expects hue < 1');\n  }\n\n  const rgb = [];\n\n  if (sat === 0) {\n    rgb[0] = val;\n    rgb[1] = val;\n    rgb[2] = val;\n\n    return rgb;\n  }\n\n  const hueCase = Math.floor(hue * 6);\n  const frac = 6 * hue - hueCase;\n  const lx = val * (1 - sat);\n  const ly = val * (1 - sat * frac);\n  const lz = val * (1 - sat * (1 - frac));\n\n  switch (hueCase) {\n    /* 0<hue<1/6 */\n    case 0:\n    case 6:\n      rgb[0] = val;\n      rgb[1] = lz;\n      rgb[2] = lx;\n      break;\n\n    /* 1/6<hue<2/6 */\n    case 1:\n      rgb[0] = ly;\n      rgb[1] = val;\n      rgb[2] = lx;\n      break;\n\n    /* 2/6<hue<3/6 */\n    case 2:\n      rgb[0] = lx;\n      rgb[1] = val;\n      rgb[2] = lz;\n      break;\n\n    /* 3/6<hue/4/6 */\n    case 3:\n      rgb[0] = lx;\n      rgb[1] = ly;\n      rgb[2] = val;\n      break;\n\n    /* 4/6<hue<5/6 */\n    case 4:\n      rgb[0] = lz;\n      rgb[1] = lx;\n      rgb[2] = val;\n      break;\n\n    /* 5/6<hue<1 */\n    case 5:\n      rgb[0] = val;\n      rgb[1] = lx;\n      rgb[2] = ly;\n      break;\n  }\n\n  return rgb;\n}\n\n/**\n * Maps a value to an index in the table\n * @param {Number} v A double value which table index will be returned.\n * @param {any} p An object that contains the Table \"Range\", the table \"MaxIndex\",\n * A \"Shift\" from first value in the table and the table \"Scale\" value\n * @returns {Number} The mapped index in the table\n * @memberof Colors\n */\nfunction linearIndexLookupMain(v, p) {\n  let dIndex;\n\n  // NOTE: Added Math.floor since values were not integers? Check VTK source\n  if (v < p.Range[0]) {\n    dIndex = p.MaxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n  } else if (v > p.Range[1]) {\n    dIndex = p.MaxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n  } else {\n    dIndex = (v + p.Shift) * p.Scale;\n  }\n\n  return Math.floor(dIndex);\n}\n\n/**\n * Maps scalar values into colors via a lookup table\n * LookupTable is an object that is used by mapper objects to map scalar values into rgba (red-green-blue-alpha transparency) color specification,\n * or rgba into scalar values. The color table can be created by direct insertion of color values, or by specifying hue, saturation, value, and alpha range and generating a table\n */\nclass LookupTable implements CPUFallbackLookupTable {\n  NumberOfColors: number;\n  Ramp: string;\n  TableRange: Point2;\n  HueRange: Point2;\n  SaturationRange: Point2;\n  ValueRange: Point2;\n  AlphaRange: Point2;\n  NaNColor: Point4;\n  BelowRangeColor: Point4;\n  UseBelowRangeColor: boolean;\n  AboveRangeColor: Point4;\n  UseAboveRangeColor: boolean;\n  InputRange: Point2;\n  Table: Point4[];\n\n  /**\n   * Creates a default linear LookupTable object with 256 colors.\n   */\n  constructor() {\n    this.NumberOfColors = 256;\n    this.Ramp = 'linear';\n    this.TableRange = [0, 255];\n    this.HueRange = [0, 0.66667];\n    this.SaturationRange = [1, 1];\n    this.ValueRange = [1, 1];\n    this.AlphaRange = [1, 1];\n    this.NaNColor = [128, 0, 0, 255];\n    this.BelowRangeColor = [0, 0, 0, 255];\n    this.UseBelowRangeColor = true;\n    this.AboveRangeColor = [255, 255, 255, 255];\n    this.UseAboveRangeColor = true;\n    this.InputRange = [0, 255];\n    this.Table = [];\n  }\n\n  /**\n   * Specify the number of values (i.e., colors) in the lookup table.\n   * @param {Number} number The number of colors in he LookupTable\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setNumberOfTableValues(number) {\n    this.NumberOfColors = number;\n  }\n\n  /**\n   * Set the shape of the table ramp to either 'linear', 'scurve' or 'sqrt'\n   * @param {String} ramp A string value representing the shape of the table. Allowed values are 'linear', 'scurve' or 'sqrt'\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setRamp(ramp) {\n    this.Ramp = ramp;\n  }\n\n  /**\n   * Sets the minimum/maximum scalar values for scalar mapping.\n   * Scalar values less than minimum range value are clamped to minimum range value.\n   * Scalar values greater than maximum range value are clamped to maximum range value.\n   * @param {Number} start A double representing the minimum scaler value of the LookupTable\n   * @param {any} end A double representing the maximum scaler value of the LookupTable\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setTableRange(start, end) {\n    this.TableRange[0] = start;\n    this.TableRange[1] = end;\n  }\n\n  /**\n   * Set the range in hue (using automatic generation). Hue ranges between [0,1].\n   * @param {Number} start A double representing the minimum hue value in a range. Min. is 0\n   * @param {Number} end A double representing the maximum hue value in a range. Max. is 1\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setHueRange(start, end) {\n    this.HueRange[0] = start;\n    this.HueRange[1] = end;\n  }\n\n  /**\n   * Set the range in saturation (using automatic generation). Saturation ranges between [0,1].\n   * @param {Number} start A double representing the minimum Saturation value in a range. Min. is 0\n   * @param {Number} end A double representing the maximum Saturation value in a range. Max. is 1\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setSaturationRange(start, end) {\n    this.SaturationRange[0] = start;\n    this.SaturationRange[1] = end;\n  }\n\n  /**\n   * Set the range in value (using automatic generation). Value ranges between [0,1].\n   * @param {Numeber } start A double representing the minimum value in a range. Min. is 0\n   * @param {Numeber} end A double representing the maximum value in a range. Max. is 1\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setValueRange(start, end) {\n    // Set the range in value (using automatic generation). Value ranges between [0,1].\n    this.ValueRange[0] = start;\n    this.ValueRange[1] = end;\n  }\n\n  /**\n   * (Not Used) Sets the range of scalars which will be mapped.\n   * @param {Number} start the minimum scalar value in the range\n   * @param {Number} end the maximum scalar value in the range\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setRange(start, end) {\n    this.InputRange[0] = start;\n    this.InputRange[1] = end;\n  }\n\n  /**\n   * Set the range in alpha (using automatic generation). Alpha ranges from [0,1].\n   * @param {Number} start A double representing the minimum alpha value\n   * @param {Number} end A double representing the maximum alpha value\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setAlphaRange(start, end) {\n    // Set the range in alpha (using automatic generation). Alpha ranges from [0,1].\n    this.AlphaRange[0] = start;\n    this.AlphaRange[1] = end;\n  }\n\n  /**\n   * Map one value through the lookup table and return the color as an\n   * RGBA array of doubles between 0 and 1.\n   * @param {Number} scalar A double scalar value which will be mapped to a color in the LookupTable\n   * @returns {Number[]} An RGBA array of doubles between 0 and 1\n   * @memberof Colors\n   */\n  public getColor(scalar) {\n    return this.mapValue(scalar);\n  }\n\n  /**\n   * Generate lookup table from hue, saturation, value, alpha min/max values. Table is built from linear ramp of each value.\n   * @param {Boolean} force true to force the build of the LookupTable. Otherwie, false. This is useful if a lookup table has been defined manually\n   * (using SetTableValue) and then an application decides to rebuild the lookup table using the implicit process.\n   * @returns {void}\n   * @memberof Colors\n   */\n  public build(force) {\n    if (this.Table.length > 1 && !force) {\n      return;\n    }\n\n    // Clear the table\n    this.Table = [];\n\n    const maxIndex = this.NumberOfColors - 1;\n\n    let hinc, sinc, vinc, ainc;\n\n    if (maxIndex) {\n      hinc = (this.HueRange[1] - this.HueRange[0]) / maxIndex;\n      sinc = (this.SaturationRange[1] - this.SaturationRange[0]) / maxIndex;\n      vinc = (this.ValueRange[1] - this.ValueRange[0]) / maxIndex;\n      ainc = (this.AlphaRange[1] - this.AlphaRange[0]) / maxIndex;\n    } else {\n      hinc = sinc = vinc = ainc = 0.0;\n    }\n\n    for (let i = 0; i <= maxIndex; i++) {\n      const hue = this.HueRange[0] + i * hinc;\n      const sat = this.SaturationRange[0] + i * sinc;\n      const val = this.ValueRange[0] + i * vinc;\n      const alpha = this.AlphaRange[0] + i * ainc;\n\n      const rgb = HSVToRGB(hue, sat, val);\n      const c_rgba: Point4 = [0, 0, 0, 0];\n\n      switch (this.Ramp) {\n        case 'scurve':\n          c_rgba[0] = Math.floor(\n            127.5 * (1.0 + Math.cos((1.0 - rgb[0]) * Math.PI))\n          );\n          c_rgba[1] = Math.floor(\n            127.5 * (1.0 + Math.cos((1.0 - rgb[1]) * Math.PI))\n          );\n          c_rgba[2] = Math.floor(\n            127.5 * (1.0 + Math.cos((1.0 - rgb[2]) * Math.PI))\n          );\n          c_rgba[3] = Math.floor(alpha * 255);\n          break;\n        case 'linear':\n          c_rgba[0] = Math.floor(rgb[0] * 255 + 0.5);\n          c_rgba[1] = Math.floor(rgb[1] * 255 + 0.5);\n          c_rgba[2] = Math.floor(rgb[2] * 255 + 0.5);\n          c_rgba[3] = Math.floor(alpha * 255 + 0.5);\n          break;\n        case 'sqrt':\n          c_rgba[0] = Math.floor(Math.sqrt(rgb[0]) * 255 + 0.5);\n          c_rgba[1] = Math.floor(Math.sqrt(rgb[1]) * 255 + 0.5);\n          c_rgba[2] = Math.floor(Math.sqrt(rgb[2]) * 255 + 0.5);\n          c_rgba[3] = Math.floor(Math.sqrt(alpha) * 255 + 0.5);\n          break;\n        default:\n          throw new Error(`Invalid Ramp value (${this.Ramp})`);\n      }\n\n      this.Table.push(c_rgba);\n    }\n\n    this.buildSpecialColors();\n  }\n\n  /**\n   * Ensures the out-of-range colors (Below range and Above range) are set correctly.\n   * @returns {void}\n   * @memberof Colors\n   */\n  private buildSpecialColors() {\n    const numberOfColors = this.NumberOfColors;\n    const belowRangeColorIndex = numberOfColors + BELOW_RANGE_COLOR_INDEX;\n    const aboveRangeColorIndex = numberOfColors + ABOVE_RANGE_COLOR_INDEX;\n    const nanColorIndex = numberOfColors + NAN_COLOR_INDEX;\n\n    // Below range color\n    if (this.UseBelowRangeColor || numberOfColors === 0) {\n      this.Table[belowRangeColorIndex] = this.BelowRangeColor;\n    } else {\n      // Duplicate the first color in the table.\n      this.Table[belowRangeColorIndex] = this.Table[0];\n    }\n\n    // Above range color\n    if (this.UseAboveRangeColor || numberOfColors === 0) {\n      this.Table[aboveRangeColorIndex] = this.AboveRangeColor;\n    } else {\n      // Duplicate the last color in the table.\n      this.Table[aboveRangeColorIndex] = this.Table[numberOfColors - 1];\n    }\n\n    // Always use NanColor\n    this.Table[nanColorIndex] = this.NaNColor;\n  }\n\n  /**\n   * Similar to GetColor - Map one value through the lookup table and return the color as an\n   * RGBA array of doubles between 0 and 1.\n   * @param {Numeber} v A double scalar value which will be mapped to a color in the LookupTable\n   * @returns {Number[]} An RGBA array of doubles between 0 and 1\n   * @memberof Colors\n   */\n  private mapValue(v) {\n    const index = this.getIndex(v);\n\n    if (index < 0) {\n      return this.NaNColor;\n    } else if (index === 0) {\n      if (this.UseBelowRangeColor && v < this.TableRange[0]) {\n        return this.BelowRangeColor;\n      }\n    } else if (index === this.NumberOfColors - 1) {\n      if (this.UseAboveRangeColor && v > this.TableRange[1]) {\n        return this.AboveRangeColor;\n      }\n    }\n\n    return this.Table[index];\n  }\n\n  /**\n   * Return the table index associated with a particular value.\n   * @param {Number} v A double value which table index will be returned.\n   * @returns {Number} The index in the LookupTable\n   * @memberof Colors\n   */\n  private getIndex(v) {\n    const p = {\n      Range: [],\n      MaxIndex: this.NumberOfColors - 1,\n      Shift: -this.TableRange[0],\n      Scale: 1,\n    };\n\n    if (this.TableRange[1] <= this.TableRange[0]) {\n      p.Scale = Number.MAX_VALUE;\n    } else {\n      p.Scale = p.MaxIndex / (this.TableRange[1] - this.TableRange[0]);\n    }\n\n    p.Range[0] = this.TableRange[0];\n    p.Range[1] = this.TableRange[1];\n\n    // First, check whether we have a number...\n    if (isNaN(v)) {\n      // For backwards compatibility\n      return -1;\n    }\n\n    // Map to an index:\n    let index = linearIndexLookupMain(v, p);\n\n    // For backwards compatibility, if the index indicates an\n    // Out-of-range value, truncate to index range for in-range colors.\n    if (index === this.NumberOfColors + BELOW_RANGE_COLOR_INDEX) {\n      index = 0;\n    } else if (index === this.NumberOfColors + ABOVE_RANGE_COLOR_INDEX) {\n      index = this.NumberOfColors - 1;\n    }\n\n    return index;\n  }\n\n  /**\n   * Directly load color into lookup table. Use [0,1] double values for color component specification.\n   * Make sure that you've either used the Build() method or used SetNumberOfTableValues() prior to using this method.\n   * @param {Number} index The index in the LookupTable of where to insert the color value\n   * @param {Number[]} rgba An array of [0,1] double values for an RGBA color component\n   * @returns {void}\n   * @memberof Colors\n   */\n  public setTableValue(index, rgba) {\n    // Check if it index, red, green, blue and alpha were passed as parameter\n    if (arguments.length === 5) {\n      rgba = Array.prototype.slice.call(arguments, 1);\n    }\n\n    // Check the index to make sure it is valid\n    if (index < 0) {\n      throw new Error(\n        `Can't set the table value for negative index (${index})`\n      );\n    }\n\n    if (index >= this.NumberOfColors) {\n      new Error(\n        `Index ${index} is greater than the number of colors ${this.NumberOfColors}`\n      );\n    }\n\n    this.Table[index] = rgba;\n\n    if (index === 0 || index === this.NumberOfColors - 1) {\n      // This is needed due to the way the special colors are stored in\n      // The internal table. If Above/BelowRangeColors are not used and\n      // The min/max colors are changed in the table with this member\n      // Function, then the colors used for values outside the range may\n      // Be incorrect. Calling this here ensures the out-of-range colors\n      // Are set correctly.\n      this.buildSpecialColors();\n    }\n  }\n}\n\nexport default LookupTable;\n","import * as colors from '../colors/index';\nimport now from './now';\nimport type { IImage, CPUFallbackLookupTable } from '../../../../types';\n\n/**\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} grayscaleLut Lookup table array\n * @param {LookupTable|Array} colorLUT Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nfunction storedPixelDataToCanvasImageDataPseudocolorLUT(\n  image: IImage,\n  grayscaleLut: Uint8ClampedArray,\n  colorLUT: CPUFallbackLookupTable,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let grayscale;\n  let rgba;\n  let clut;\n\n  start = now();\n\n  if (colorLUT instanceof colors.LookupTable) {\n    clut = colorLUT.Table;\n  } else {\n    clut = colorLUT;\n  }\n\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale =\n        grayscaleLut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = grayscaleLut[pixelData[storedPixelDataIndex++]];\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n\nexport default storedPixelDataToCanvasImageDataPseudocolorLUT;\n","import * as colors from '../colors/index';\nimport now from './now';\nimport type { IImage, CPUFallbackLookupTable } from '../../../../types';\n\n/**\n *\n * @param {Image} image A Cornerstone Image Object\n * @param {Array} grayscaleLut Lookup table array\n * @param {LookupTable|Array} colorLUT Lookup table array\n * @param {Uint8ClampedArray} canvasImageDataData canvasImageData.data buffer filled with white pixels\n *\n * @returns {void}\n * @memberof Internal\n */\nfunction storedPixelDataToCanvasImageDataPseudocolorLUTPET(\n  image: IImage,\n  lutFunction: (value: number) => number,\n  colorLUT: CPUFallbackLookupTable,\n  canvasImageDataData: Uint8ClampedArray\n): void {\n  let start = now();\n  const pixelData = image.getPixelData();\n\n  image.stats.lastGetPixelDataTime = now() - start;\n\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let grayscale;\n  let rgba;\n  let clut;\n\n  start = now();\n\n  if (colorLUT instanceof colors.LookupTable) {\n    clut = colorLUT.Table;\n  } else {\n    clut = colorLUT;\n  }\n\n  if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = lutFunction(\n        pixelData[storedPixelDataIndex++] + -minPixelValue\n      );\n\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      grayscale = lutFunction(pixelData[storedPixelDataIndex++]);\n      rgba = clut[grayscale];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[0];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[1];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[2];\n      canvasImageDataData[canvasImageDataIndex++] = rgba[3];\n    }\n  }\n\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}\n\nexport default storedPixelDataToCanvasImageDataPseudocolorLUTPET;\n","import LookupTable from './lookupTable';\nimport CPU_COLORMAPS from '../../../../constants/cpuColormaps';\nimport {\n  CPUFallbackColormap,\n  CPUFallbackColormapData,\n  Point4,\n} from '../../../../types';\n\nconst COLOR_TRANSPARENT: Point4 = [0, 0, 0, 0];\n\n/**\n *  Generate linearly spaced vectors\n *  http://cens.ioc.ee/local/man/matlab/techdoc/ref/linspace.html\n * @param {Number} a A number representing the first vector\n * @param {Number} b A number representing the second vector\n * @param {Number} n The number of linear spaced vectors to generate\n * @returns {Array} An array of points representing linear spaced vectors.\n * @memberof Colors\n */\nfunction linspace(a: number, b: number, n: number): number[] {\n  n = n === null ? 100 : n;\n\n  const increment = (b - a) / (n - 1);\n  const vector = [];\n\n  while (n-- > 0) {\n    vector.push(a);\n    a += increment;\n  }\n\n  // Make sure the last item will always be \"b\" because most of the\n  // Time we'll get numbers like 1.0000000000000002 instead of 1.\n  vector[vector.length - 1] = b;\n\n  return vector;\n}\n\n/**\n * Returns the \"rank/index\" of the element in a sorted array if found or the highest index if not. Uses (binary search)\n * @param {Array} array A sorted array to search in\n * @param {any} elem the element in the array to search for\n * @returns {number} The rank/index of the element in the given array\n * @memberof Colors\n */\nfunction getRank(array, elem) {\n  let left = 0;\n  let right = array.length - 1;\n\n  while (left <= right) {\n    const mid = left + Math.floor((right - left) / 2);\n    const midElem = array[mid];\n\n    if (midElem === elem) {\n      return mid;\n    } else if (elem < midElem) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  return left;\n}\n\n/**\n * Find the indices into a sorted array a such that, if the corresponding elements\n * In v were inserted before the indices, the order of a would be preserved.\n *  http://lagrange.univ-lyon1.fr/docs/numpy/1.11.0/reference/generated/numpy.searchsorted.html\n * @param {Array} inputArray The array where the values will be inserted\n * @param {Array} values An array of the values to be inserted into the inputArray\n * @returns {Array} The indices where elements should be inserted to maintain order.\n * @memberof Colors\n */\nfunction searchSorted(inputArray, values) {\n  let i;\n  const indexes = [];\n  const len = values.length;\n\n  inputArray.sort(function (a, b) {\n    return a - b;\n  });\n\n  for (i = 0; i < len; i++) {\n    indexes[i] = getRank(inputArray, values[i]);\n  }\n\n  return indexes;\n}\n\n/**\n * Creates an *N* -element 1-d lookup table\n * @param {Number} N The number of elements in the result lookup table\n * @param {Array} data represented by a list of x,y0,y1 mapping correspondences. Each element in this\n * List represents how a value between 0 and 1 (inclusive) represented by x is mapped to\n * A corresponding value between 0 and 1 (inclusive). The two values of y are to allow for\n * Discontinuous mapping functions (say as might be found in a sawtooth) where y0 represents\n * The value of y for values of x <= to that given, and y1 is the value to be used for x >\n * Than that given). The list must start with x=0, end with x=1, and all values of x must be\n * In increasing order. Values between the given mapping points are determined by simple linear\n * Interpolation.\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the map.\n * @returns {any[]} an array \"result\" where result[x*(N-1)] gives the closest value for\n * Values of x between 0 and 1.\n * @memberof Colors\n */\nfunction makeMappingArray(N, data, gamma) {\n  let i;\n  const x = [];\n  const y0 = [];\n  const y1 = [];\n  const lut = [];\n\n  gamma = gamma === null ? 1 : gamma;\n\n  for (i = 0; i < data.length; i++) {\n    const element = data[i];\n\n    x.push((N - 1) * element[0]);\n    y0.push(element[1]);\n    y1.push(element[1]);\n  }\n\n  const xLinSpace = linspace(0, 1, N);\n\n  for (i = 0; i < N; i++) {\n    xLinSpace[i] = (N - 1) * Math.pow(xLinSpace[i], gamma);\n  }\n\n  const xLinSpaceIndexes = searchSorted(x, xLinSpace);\n\n  for (i = 1; i < N - 1; i++) {\n    const index = xLinSpaceIndexes[i];\n    const colorPercent =\n      (xLinSpace[i] - x[index - 1]) / (x[index] - x[index - 1]);\n    const colorDelta = y0[index] - y1[index - 1];\n\n    lut[i] = colorPercent * colorDelta + y1[index - 1];\n  }\n\n  lut[0] = y1[0];\n  lut[N - 1] = y0[data.length - 1];\n\n  return lut;\n}\n\n/**\n * Creates a Colormap based on lookup tables using linear segments.\n * @param {{red:Array, green:Array, blue:Array}} segmentedData An object with a red, green and blue entries.\n * Each entry should be a list of x, y0, y1 tuples, forming rows in a table.\n * @param {Number} N The number of elements in the result Colormap\n * @param {any} gamma value denotes a \"gamma curve\" value which adjusts the brightness\n * at the bottom and top of the Colormap.\n * @returns {Array} The created Colormap object\n * @description The lookup table is generated using linear interpolation for each\n *  Primary color, with the 0-1 domain divided into any number of\n * Segments.\n * https://github.com/stefanv/matplotlib/blob/3f1a23755e86fef97d51e30e106195f34425c9e3/lib/matplotlib/colors.py#L663\n * @memberof Colors\n */\nfunction createLinearSegmentedColormap(segmentedData, N, gamma) {\n  let i;\n  const lut = [];\n\n  N = N === null ? 256 : N;\n  gamma = gamma === null ? 1 : gamma;\n\n  const redLut = makeMappingArray(N, segmentedData.red, gamma);\n  const greenLut = makeMappingArray(N, segmentedData.green, gamma);\n  const blueLut = makeMappingArray(N, segmentedData.blue, gamma);\n\n  for (i = 0; i < N; i++) {\n    const red = Math.round(redLut[i] * 255);\n    const green = Math.round(greenLut[i] * 255);\n    const blue = Math.round(blueLut[i] * 255);\n    const rgba = [red, green, blue, 255];\n\n    lut.push(rgba);\n  }\n\n  return lut;\n}\n\n/**\n * Return all available colormaps (id and name)\n * @returns {Array<{id,key}>} An array of colormaps with an object containing the \"id\" and display \"name\"\n * @memberof Colors\n */\nexport function getColormapsList() {\n  const colormaps = [];\n  const keys = Object.keys(CPU_COLORMAPS);\n\n  keys.forEach(function (key) {\n    if (CPU_COLORMAPS.hasOwnProperty(key)) {\n      const colormap = CPU_COLORMAPS[key];\n\n      colormaps.push({\n        id: key,\n        name: colormap.name,\n      });\n    }\n  });\n\n  colormaps.sort(function (a, b) {\n    const aName = a.name.toLowerCase();\n    const bName = b.name.toLowerCase();\n\n    if (aName === bName) {\n      return 0;\n    }\n\n    return aName < bName ? -1 : 1;\n  });\n\n  return colormaps;\n}\n\n/**\n * Return a colorMap object with the provided id and colormapData\n * if the Id matches existent colorMap objects (check colormapsData) the colormapData is ignored.\n * if the colormapData is not empty, the colorMap will be added to the colormapsData list. Otherwise, an empty colorMap object is returned.\n * @param {string} id The ID of the colormap\n * @param {Object} colormapData - An object that can contain a name, numColors, gama, segmentedData and/or colors\n * @returns {*} The Colormap Object\n * @memberof Colors\n */\nexport function getColormap(\n  id: string,\n  colormapData?: CPUFallbackColormapData\n): CPUFallbackColormap {\n  let colormap = CPU_COLORMAPS[id];\n\n  if (!colormap) {\n    colormap = CPU_COLORMAPS[id] = colormapData || {\n      name: '',\n      colors: [],\n    };\n  }\n\n  if (!colormap.colors && colormap.segmentedData) {\n    colormap.colors = createLinearSegmentedColormap(\n      colormap.segmentedData,\n      colormap.numColors,\n      colormap.gamma\n    );\n  }\n\n  const cpuFallbackColormap: CPUFallbackColormap = {\n    getId() {\n      return id;\n    },\n\n    getColorSchemeName() {\n      return colormap.name;\n    },\n\n    setColorSchemeName(name) {\n      colormap.name = name;\n    },\n\n    getNumberOfColors() {\n      return colormap.colors.length;\n    },\n\n    setNumberOfColors(numColors) {\n      while (colormap.colors.length < numColors) {\n        colormap.colors.push(COLOR_TRANSPARENT);\n      }\n\n      colormap.colors.length = numColors;\n    },\n\n    getColor(index) {\n      if (this.isValidIndex(index)) {\n        return colormap.colors[index];\n      }\n\n      return COLOR_TRANSPARENT;\n    },\n\n    getColorRepeating(index) {\n      const numColors = colormap.colors.length;\n\n      index = numColors ? index % numColors : 0;\n\n      return this.getColor(index);\n    },\n\n    setColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors[index] = rgba;\n      }\n    },\n\n    addColor(rgba) {\n      colormap.colors.push(rgba);\n    },\n\n    insertColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1, rgba);\n      }\n    },\n\n    removeColor(index) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1);\n      }\n    },\n\n    clearColors() {\n      colormap.colors = [];\n    },\n\n    buildLookupTable(lut) {\n      if (!lut) {\n        return;\n      }\n\n      const numColors = colormap.colors.length;\n\n      lut.setNumberOfTableValues(numColors);\n\n      for (let i = 0; i < numColors; i++) {\n        lut.setTableValue(i, colormap.colors[i]);\n      }\n    },\n\n    createLookupTable() {\n      const lut = new LookupTable();\n\n      this.buildLookupTable(lut);\n\n      return lut;\n    },\n\n    isValidIndex(index) {\n      return index >= 0 && index < colormap.colors.length;\n    },\n  };\n\n  return cpuFallbackColormap;\n}\n","import setToPixelCoordinateSystem from './setToPixelCoordinateSystem';\nimport now from './now';\nimport initializeRenderCanvas from './initializeRenderCanvas';\nimport getLut from './getLut';\nimport saveLastRendered from './saveLastRendered';\nimport doesImageNeedToBeRendered from './doesImageNeedToBeRendered';\nimport storedPixelDataToCanvasImageDataPseudocolorLUT from './storedPixelDataToCanvasImageDataPseudocolorLUT';\nimport storedPixelDataToCanvasImageDataPseudocolorLUTPET from './storedPixelDataToCanvasImageDataPseudocolorLUTPET';\nimport * as colors from '../colors/index';\nimport type { IImage, CPUFallbackEnabledElement } from '../../../../types';\n\nfunction clamp(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * Returns an appropriate canvas to render the Image. If the canvas available in the cache is appropriate\n * it is returned, otherwise adjustments are made. It also sets the color transfer functions.\n *\n * @param {Object} enabledElement The cornerstone enabled element\n * @param {Object} image The image to be rendered\n * @param {Boolean} invalidated Is pixel data valid\n * @returns {HTMLCanvasElement} An appropriate canvas for rendering the image\n * @memberof rendering\n */\nfunction getRenderCanvas(\n  enabledElement: CPUFallbackEnabledElement,\n  image: IImage,\n  invalidated: boolean\n): HTMLCanvasElement {\n  if (!enabledElement.renderingTools.renderCanvas) {\n    enabledElement.renderingTools.renderCanvas =\n      document.createElement('canvas');\n  }\n\n  const renderCanvas = enabledElement.renderingTools.renderCanvas;\n\n  let colormap =\n    enabledElement.viewport.colormap || enabledElement.options.colormap;\n\n  if (enabledElement.options && enabledElement.options.colormap) {\n    console.warn(\n      'enabledElement.options.colormap is deprecated. Use enabledElement.viewport.colormap instead'\n    );\n  }\n  if (colormap && typeof colormap === 'string') {\n    colormap = colors.getColormap(colormap);\n  }\n\n  if (!colormap) {\n    throw new Error('renderPseudoColorImage: colormap not found.');\n  }\n\n  const colormapId = colormap.getId();\n\n  if (\n    doesImageNeedToBeRendered(enabledElement, image) === false &&\n    invalidated !== true &&\n    enabledElement.renderingTools.colormapId === colormapId\n  ) {\n    return renderCanvas;\n  }\n\n  // If our render canvas does not match the size of this image reset it\n  // NOTE: This might be inefficient if we are updating multiple images of different\n  // Sizes frequently.\n  if (\n    renderCanvas.width !== image.width ||\n    renderCanvas.height !== image.height\n  ) {\n    initializeRenderCanvas(enabledElement, image);\n  }\n\n  // Get the lut to use\n  let start = now();\n\n  if (\n    !enabledElement.renderingTools.colorLUT ||\n    invalidated ||\n    enabledElement.renderingTools.colormapId !== colormapId\n  ) {\n    colormap.setNumberOfColors(256);\n    enabledElement.renderingTools.colorLUT = colormap.createLookupTable();\n    enabledElement.renderingTools.colormapId = colormapId;\n  }\n\n  const renderCanvasData = enabledElement.renderingTools.renderCanvasData;\n  const renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;\n  const { viewport } = enabledElement;\n  const colorLUT = enabledElement.renderingTools.colorLUT;\n\n  if (viewport.modality === 'PT') {\n    const { windowWidth, windowCenter } = viewport.voi;\n    const minimum = windowCenter - windowWidth / 2;\n    const maximum = windowCenter + windowWidth / 2;\n    const range = maximum - minimum;\n    const collectedMultiplierTerms = 255.0 / range;\n\n    let petVOILutFunction;\n\n    if (viewport.invert) {\n      petVOILutFunction = (value) => {\n        return clamp(\n          Math.floor(255 - (value - minimum) * collectedMultiplierTerms),\n          0,\n          255\n        );\n      };\n    } else {\n      petVOILutFunction = (value) => {\n        return clamp(\n          Math.floor((value - minimum) * collectedMultiplierTerms),\n          0,\n          255\n        );\n      };\n    }\n\n    storedPixelDataToCanvasImageDataPseudocolorLUTPET(\n      image,\n      petVOILutFunction,\n      colorLUT,\n      renderCanvasData.data\n    );\n  } else {\n    const lut = getLut(image, enabledElement.viewport, invalidated);\n\n    image.stats = image.stats || {};\n    image.stats.lastLutGenerateTime = now() - start;\n\n    storedPixelDataToCanvasImageDataPseudocolorLUT(\n      image,\n      lut,\n      colorLUT,\n      renderCanvasData.data\n    );\n  }\n\n  start = now();\n  renderCanvasContext.putImageData(renderCanvasData, 0, 0);\n  image.stats.lastPutImageDataTime = now() - start;\n\n  return renderCanvas;\n}\n\n/**\n * API function to draw a pseudo-color image to a given enabledElement\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element to redraw\n * @param {Boolean} invalidated - true if pixel data has been invalidated and cached rendering should not be used\n * @returns {void}\n * @memberof rendering\n */\nexport function renderPseudoColorImage(\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  if (enabledElement === undefined) {\n    throw new Error(\n      'drawImage: enabledElement parameter must not be undefined'\n    );\n  }\n\n  const image = enabledElement.image;\n\n  if (image === undefined) {\n    throw new Error('drawImage: image must be loaded before it can be drawn');\n  }\n\n  // Get the canvas context and reset the transform\n  const context = enabledElement.canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // Clear the canvas\n  context.fillStyle = 'black';\n  context.fillRect(\n    0,\n    0,\n    enabledElement.canvas.width,\n    enabledElement.canvas.height\n  );\n\n  // Turn off image smooth/interpolation if pixelReplication is set in the viewport\n  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;\n\n  // Save the canvas context state and apply the viewport properties\n  setToPixelCoordinateSystem(enabledElement, context);\n\n  // If no options are set we will retrieve the renderCanvas through the\n  // Normal Canvas rendering path\n  // TODO: Add WebGL support for pseudocolor pipeline\n  const renderCanvas = getRenderCanvas(enabledElement, image, invalidated);\n\n  const sx = enabledElement.viewport.displayedArea.tlhc.x - 1;\n  const sy = enabledElement.viewport.displayedArea.tlhc.y - 1;\n  const width = enabledElement.viewport.displayedArea.brhc.x - sx;\n  const height = enabledElement.viewport.displayedArea.brhc.y - sy;\n\n  context.drawImage(renderCanvas, sx, sy, width, height, 0, 0, width, height);\n\n  enabledElement.renderingTools = saveLastRendered(enabledElement);\n}\n","import now from './rendering/now';\nimport { renderColorImage } from './rendering/renderColorImage';\nimport { renderGrayscaleImage } from './rendering/renderGrayscaleImage';\nimport { renderPseudoColorImage } from './rendering/renderPseudoColorImage';\nimport { CPUFallbackEnabledElement } from '../../../types';\n\n/**\n * Draw an image to a given enabled element synchronously\n *\n * @param enabledElement - An enabled element to draw into\n * @param invalidated - true if pixel data has been invalidated and cached rendering should not be used\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  invalidated: boolean\n): void {\n  const image = enabledElement.image;\n\n  // Check if enabledElement can be redrawn\n  if (!enabledElement.canvas || !enabledElement.image) {\n    return;\n  }\n\n  // Start measuring the time needed to draw the image.\n  const start = now();\n\n  image.stats = {\n    lastGetPixelDataTime: -1.0,\n    lastStoredPixelDataToCanvasImageDataTime: -1.0,\n    lastPutImageDataTime: -1.0,\n    lastRenderTime: -1.0,\n    lastLutGenerateTime: -1.0,\n  };\n\n  if (image) {\n    let render = image.render;\n\n    if (!render) {\n      if (enabledElement.viewport.colormap) {\n        render = renderPseudoColorImage;\n      } else if (image.color) {\n        render = renderColorImage;\n      } else {\n        render = renderGrayscaleImage;\n      }\n    }\n\n    render(enabledElement, invalidated);\n  }\n\n  // Calculate how long it took to draw the image/layers\n  const renderTimeInMs = now() - start;\n\n  image.stats.lastRenderTime = renderTimeInMs;\n\n  enabledElement.invalid = false;\n  enabledElement.needsRedraw = false;\n}\n","import calculateTransform from './calculateTransform';\nimport {\n  CPUFallbackEnabledElement,\n  CPUFallbackTransform,\n} from '../../../../types';\n\nexport default function (\n  enabledElement: CPUFallbackEnabledElement\n): CPUFallbackTransform {\n  // Todo: for some reason using the cached transfer after the first call\n  // does not give correct transform.\n  // if (enabledElement.transform) {\n  //   return enabledElement.transform;\n  // }\n\n  return calculateTransform(enabledElement);\n}\n","import getTransform from './getTransform';\n\nimport { Point2, CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Converts a point in the canvas coordinate system to the pixel coordinate system\n * system.  This can be used to reset tools' image coordinates after modifications\n * have been made in canvas space (e.g. moving a tool by a few cm, independent of\n * image resolution).\n *\n * @param element - The Cornerstone element within which the input point lies\n * @param pt - The input point in the canvas coordinate system\n *\n * @returns The transformed point in the pixel coordinate system\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  transform.invert();\n\n  return transform.transformPoint(pt);\n}\n","import getTransform from './getTransform';\nimport { CPUFallbackEnabledElement, Point2 } from '../../../../types';\n\n/**\n * Converts a point in the pixel coordinate system to the canvas coordinate system\n * system.  This can be used to render using canvas context without having the weird\n * side effects that come from scaling and non square pixels\n *\n * @param {HTMLDivElement} element An HTML Element enabled for Cornerstone\n * @param {{x: Number, y: Number}} pt The transformed point in the pixel coordinate system\n *\n * @returns {{x: Number, y: Number}} The input point in the canvas coordinate system\n * @memberof PixelCoordinateSystem\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  pt: Point2\n): Point2 {\n  const transform = getTransform(enabledElement);\n\n  return transform.transformPoint(pt);\n}\n","import { CPUFallbackViewport } from '../../../../types';\n\nconst state = {\n  viewport: {},\n};\n\n/**\n * Sets new default values for `getDefaultViewport`\n *\n * @param {Object} viewport - Object that sets new default values for getDefaultViewport\n * @returns {undefined}\n */\nexport default function (viewport: CPUFallbackViewport): void {\n  state.viewport = viewport || {};\n}\n\nexport { state };\n","/**\n * Check if the supplied parameter is undefined and throws and error\n * @param {any} checkParam the parameter to validate for undefined\n * @param {any} errorMsg the error message to be thrown\n * @returns {void}\n * @memberof internal\n */\nexport function validateParameterUndefined(\n  checkParam: any | undefined,\n  errorMsg: string\n): void {\n  if (checkParam === undefined) {\n    throw new Error(errorMsg);\n  }\n}\n\n/**\n * Check if the supplied parameter is undefined or null and throws and error\n * @param {any} checkParam the parameter to validate for undefined\n * @param {any} errorMsg the error message to be thrown\n * @returns {void}\n * @memberof internal\n */\nexport function validateParameterUndefinedOrNull(\n  checkParam: any | null | undefined,\n  errorMsg: string\n): void {\n  if (checkParam === undefined || checkParam === null) {\n    throw new Error(errorMsg);\n  }\n}\n","import { validateParameterUndefinedOrNull } from './validator';\nimport { IImage } from '../../../../types';\n\n/**\n * Check if the angle is rotated\n * @param {Number} rotation the rotation angle\n * @returns {Boolean} true if the angle is rotated; Otherwise, false.\n * @memberof Internal\n */\nfunction isRotated(rotation?: number | null): boolean {\n  return !(\n    rotation === null ||\n    rotation === undefined ||\n    rotation === 0 ||\n    rotation === 180\n  );\n}\n\n/**\n * Retrieves the current image dimensions given an enabled element\n *\n * @param {any} image The Cornerstone image.\n * @param {Number} rotation Optional. The rotation angle of the image.\n * @return {{width:Number, height:Number}} The Image dimensions\n * @memberof Internal\n */\nexport default function (\n  image: IImage,\n  rotation = null\n): { height: number; width: number } {\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageSize: parameter image must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image.width,\n    'getImageSize: parameter image must have width'\n  );\n  validateParameterUndefinedOrNull(\n    image.height,\n    'getImageSize: parameter image must have height'\n  );\n\n  if (isRotated(rotation)) {\n    return {\n      height: image.width,\n      width: image.height,\n    };\n  }\n\n  return {\n    width: image.width,\n    height: image.height,\n  };\n}\n","import { validateParameterUndefinedOrNull } from './validator';\nimport getImageSize from './getImageSize';\nimport { IImage } from '../../../../types';\n\n/**\n * Calculates the horizontal, vertical and minimum scale factor for an image\n   @param canvas - The window size where the image is displayed. This can be any HTML element or structure with a width, height fields (e.g. canvas).\n * @param image - The cornerstone image object\n * @param rotation - The rotation angle of the image.\n * @returns The calculated horizontal, vertical and minimum scale factor\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  rotation: number | null = null\n): {\n  verticalScale: number;\n  horizontalScale: number;\n  scaleFactor: number;\n} {\n  validateParameterUndefinedOrNull(\n    canvas,\n    'getImageScale: parameter canvas must not be undefined'\n  );\n  validateParameterUndefinedOrNull(\n    image,\n    'getImageScale: parameter image must not be undefined'\n  );\n\n  const imageSize = getImageSize(image, rotation);\n  const rowPixelSpacing = image.rowPixelSpacing || 1;\n  const columnPixelSpacing = image.columnPixelSpacing || 1;\n  let verticalRatio = 1;\n  let horizontalRatio = 1;\n\n  if (rowPixelSpacing < columnPixelSpacing) {\n    horizontalRatio = columnPixelSpacing / rowPixelSpacing;\n  } else {\n    // even if they are equal we want to calculate this ratio (the ration might be 0.5)\n    verticalRatio = rowPixelSpacing / columnPixelSpacing;\n  }\n\n  const verticalScale = canvas.height / imageSize.height / verticalRatio;\n  const horizontalScale = canvas.width / imageSize.width / horizontalRatio;\n\n  // Fit image to window\n  return {\n    verticalScale,\n    horizontalScale,\n    scaleFactor: Math.min(horizontalScale, verticalScale),\n  };\n}\n","import createViewport from './createViewport';\nimport getImageFitScale from './getImageFitScale';\nimport {\n  IImage,\n  CPUFallbackColormap,\n  CPUFallbackViewport,\n} from '../../../../types';\n\n/**\n * Creates a new viewport object containing default values for the image and canvas\n *\n * @param canvas - A Canvas DOM element\n * @param image - A Cornerstone Image Object\n * @returns viewport - object\n */\nexport default function (\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  modality?: string,\n  colormap?: CPUFallbackColormap\n): CPUFallbackViewport {\n  if (canvas === undefined) {\n    throw new Error(\n      'getDefaultViewport: parameter canvas must not be undefined'\n    );\n  }\n\n  if (image === undefined) {\n    return createViewport();\n  }\n\n  // Fit image to window\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  let voi;\n\n  if (modality === 'PT' && image.isPreScaled) {\n    voi = {\n      windowWidth: 5,\n      windowCenter: 2.5,\n    };\n  } else if (\n    image.windowWidth !== undefined &&\n    image.windowCenter !== undefined\n  ) {\n    voi = {\n      windowWidth: Array.isArray(image.windowWidth)\n        ? image.windowWidth[0]\n        : image.windowWidth,\n      windowCenter: Array.isArray(image.windowCenter)\n        ? image.windowCenter[0]\n        : image.windowCenter,\n    };\n  }\n\n  return {\n    scale,\n    translation: {\n      x: 0,\n      y: 0,\n    },\n    voi,\n    invert: image.invert,\n    pixelReplication: false,\n    rotation: 0,\n    hflip: false,\n    vflip: false,\n    modalityLUT: image.modalityLUT,\n    modality,\n    voiLUT: image.voiLUT,\n    colormap: colormap !== undefined ? colormap : image.colormap,\n    displayedArea: {\n      tlhc: {\n        x: 1,\n        y: 1,\n      },\n      brhc: {\n        x: image.columns,\n        y: image.rows,\n      },\n      rowPixelSpacing:\n        image.rowPixelSpacing === undefined ? 1 : image.rowPixelSpacing,\n      columnPixelSpacing:\n        image.columnPixelSpacing === undefined ? 1 : image.columnPixelSpacing,\n      presentationSizeMode: 'NONE',\n    },\n  };\n}\n","import { state } from './setDefaultViewport';\nimport {\n  CPUFallbackViewportDisplayedArea,\n  CPUFallbackViewport,\n} from '../../../../types';\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Creates the default displayed area.\n * C.10.4 Displayed Area Module: This Module describes Attributes required to define a Specified Displayed Area space.\n *\n * @returns {tlhc: {x,y}, brhc: {x, y},rowPixelSpacing: Number, columnPixelSpacing: Number, presentationSizeMode: Number} displayedArea object\n * @memberof Internal\n */\nfunction createDefaultDisplayedArea(): CPUFallbackViewportDisplayedArea {\n  return {\n    // Top Left Hand Corner\n    tlhc: {\n      x: 1,\n      y: 1,\n    },\n    // Bottom Right Hand Corner\n    brhc: {\n      x: 1,\n      y: 1,\n    },\n    rowPixelSpacing: 1,\n    columnPixelSpacing: 1,\n    presentationSizeMode: 'NONE',\n  };\n}\n\n/**\n * Creates a new viewport object containing default values\n *\n * @returns {Viewport} viewport object\n * @memberof Internal\n */\nexport default function createViewport(): CPUFallbackViewport {\n  const displayedArea = createDefaultDisplayedArea();\n  const initialDefaultViewport = {\n    scale: 1,\n    translation: {\n      x: 0,\n      y: 0,\n    },\n    voi: {\n      windowWidth: undefined,\n      windowCenter: undefined,\n    },\n    invert: false,\n    pixelReplication: false,\n    rotation: 0,\n    hflip: false,\n    vflip: false,\n    modalityLUT: undefined,\n    voiLUT: undefined,\n    colormap: undefined,\n    labelmap: false,\n    displayedArea,\n  };\n\n  return Object.assign({}, initialDefaultViewport, state.viewport);\n}\n","import vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport { VOIRange } from '../types';\n\nexport default function createLinearRGBTransferFunction(\n  voiRange: VOIRange\n): vtkColorTransferFunction {\n  const cfun = vtkColorTransferFunction.newInstance();\n  let lower = 0;\n  let upper = 1024;\n  if (\n    voiRange &&\n    voiRange.lower !== undefined &&\n    voiRange.upper !== undefined\n  ) {\n    lower = voiRange.lower;\n    upper = voiRange.upper;\n  }\n  cfun.addRGBPoint(lower, 0.0, 0.0, 0.0);\n  cfun.addRGBPoint(upper, 1.0, 1.0, 1.0);\n\n  return cfun;\n}\n","import vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport type { vtkImageData as vtkImageDataType } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport _cloneDeep from 'lodash.clonedeep';\nimport vtkCamera from '@kitware/vtk.js/Rendering/Core/Camera';\nimport { vec2, vec3, mat4 } from 'gl-matrix';\nimport vtkImageMapper from '@kitware/vtk.js/Rendering/Core/ImageMapper';\nimport vtkImageSlice from '@kitware/vtk.js/Rendering/Core/ImageSlice';\nimport vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport * as metaData from '../metaData';\nimport Viewport from './Viewport';\nimport eventTarget from '../eventTarget';\nimport {\n  triggerEvent,\n  isEqual,\n  invertRgbTransferFunction,\n  createSigmoidRGBTransferFunction,\n  windowLevel as windowLevelUtil,\n  imageIdToURI,\n  isImageActor,\n  actorIsA,\n} from '../utilities';\nimport {\n  Point2,\n  Point3,\n  VOIRange,\n  ICamera,\n  IImage,\n  IImageData,\n  CPUIImageData,\n  PTScaling,\n  Scaling,\n  StackViewportProperties,\n  FlipDirection,\n  ActorEntry,\n  CPUFallbackEnabledElement,\n  CPUFallbackColormapData,\n  EventTypes,\n  IStackViewport,\n  VolumeActor,\n  Mat3,\n  ColormapRegistration,\n  IImageCalibration,\n} from '../types';\nimport { ViewportInput } from '../types/IViewport';\nimport drawImageSync from './helpers/cpuFallback/drawImageSync';\nimport { getColormap } from './helpers/cpuFallback/colors/index';\n\nimport { loadAndCacheImage } from '../loaders/imageLoader';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport {\n  InterpolationType,\n  RequestType,\n  Events,\n  CalibrationTypes,\n  VOILUTFunctionType,\n} from '../enums';\nimport canvasToPixel from './helpers/cpuFallback/rendering/canvasToPixel';\nimport pixelToCanvas from './helpers/cpuFallback/rendering/pixelToCanvas';\nimport getDefaultViewport from './helpers/cpuFallback/rendering/getDefaultViewport';\nimport calculateTransform from './helpers/cpuFallback/rendering/calculateTransform';\nimport resize from './helpers/cpuFallback/rendering/resize';\n\nimport resetCamera from './helpers/cpuFallback/rendering/resetCamera';\nimport { Transform } from './helpers/cpuFallback/rendering/transform';\nimport { getConfiguration, getShouldUseCPURendering } from '../init';\nimport {\n  StackViewportNewStackEventDetail,\n  StackViewportScrollEventDetail,\n  VoiModifiedEventDetail,\n} from '../types/EventTypes';\nimport cache from '../cache';\nimport correctShift from './helpers/cpuFallback/rendering/correctShift';\nimport { ImageActor } from '../types/IActor';\nimport createLinearRGBTransferFunction from '../utilities/createLinearRGBTransferFunction';\nimport {\n  PixelDataTypedArray,\n  ImagePixelModule,\n  ImagePlaneModule,\n} from '../types';\nimport ViewportStatus from '../enums/ViewportStatus';\n\nconst EPSILON = 1; // Slice Thickness\n\ninterface ImageDataMetaData {\n  bitsAllocated: number;\n  numComps: number;\n  origin: Point3;\n  direction: Mat3;\n  dimensions: Point3;\n  spacing: Point3;\n  numVoxels: number;\n  imagePlaneModule: ImagePlaneModule;\n  imagePixelModule: ImagePixelModule;\n}\n// TODO This needs to be exposed as its published to consumers.\ntype CalibrationEvent = {\n  rowScale?: number;\n  columnScale?: number;\n  scale: number;\n  calibration: IImageCalibration;\n};\n\ntype SetVOIOptions = {\n  suppressEvents?: boolean;\n  forceRecreateLUTFunction?: boolean;\n  voiUpdatedWithSetProperties?: boolean;\n};\n\n/**\n * An object representing a single stack viewport, which is a camera\n * looking into an internal viewport, and an associated target output `canvas`.\n *\n * StackViewports can be rendered using both GPU and a fallback CPU is the GPU\n * is not available (or low performance). Read more about StackViewports in\n * the documentation section of this website.\n */\nclass StackViewport extends Viewport implements IStackViewport {\n  private imageIds: Array<string>;\n  // current imageIdIndex that is rendered in the viewport\n  private currentImageIdIndex: number;\n  // the imageIdIndex that is targeted to be loaded with scrolling but has not initiated loading yet\n  private targetImageIdIndex: number;\n  // setTimeout if the image is debounced to be loaded\n  private debouncedTimeout: number;\n\n  // Viewport Properties\n  private voiRange: VOIRange;\n  private voiUpdatedWithSetProperties = false;\n  private VOILUTFunction: VOILUTFunctionType;\n  //\n  private invert = false;\n  private interpolationType: InterpolationType;\n\n  // Helpers\n  private _imageData: vtkImageDataType;\n  private cameraFocalPointOnRender: Point3; // we use focalPoint since flip manipulates the position and makes it useless to track\n  private stackInvalidated = false; // if true -> new actor is forced to be created for the stack\n  private _publishCalibratedEvent = false;\n  private _calibrationEvent: CalibrationEvent;\n  private _cpuFallbackEnabledElement?: CPUFallbackEnabledElement;\n  // CPU fallback\n  private useCPURendering: boolean;\n  // Since WebGL natively supports 8 bit int and Float32, we should check if\n  // extra configuration flags has been set to use native data type\n  // which would save a lot of memory and speed up rendering but it is not\n  // yet widely supported in all hardwares. This feature can be turned on\n  // by setting useNorm16Texture or preferSizeOverAccuracy in the configuration\n  private useNativeDataType = false;\n  private cpuImagePixelData: PixelDataTypedArray;\n  private cpuRenderingInvalidated: boolean;\n  private csImage: IImage;\n\n  // TODO: These should not be here and will be nuked\n  public modality: string; // this is needed for tools\n  public scaling: Scaling;\n\n  // Camera properties\n  private initialViewUp: Point3;\n\n  /**\n   * Constructor for the StackViewport class\n   * @param props - ViewportInput\n   */\n  constructor(props: ViewportInput) {\n    super(props);\n    this.scaling = {};\n    this.modality = null;\n    this.useCPURendering = getShouldUseCPURendering();\n    this.useNativeDataType = this._shouldUseNativeDataType();\n    this._configureRenderingPipeline();\n\n    this.useCPURendering\n      ? this._resetCPUFallbackElement()\n      : this._resetGPUViewport();\n\n    this.imageIds = [];\n    this.currentImageIdIndex = 0;\n    this.targetImageIdIndex = 0;\n    this.cameraFocalPointOnRender = [0, 0, 0];\n    this.resetCamera();\n\n    this.initializeElementDisabledHandler();\n  }\n\n  public setUseCPURendering(value: boolean) {\n    this.useCPURendering = value;\n    this._configureRenderingPipeline();\n  }\n\n  static get useCustomRenderingPipeline(): boolean {\n    return getShouldUseCPURendering();\n  }\n\n  public updateRenderingPipeline = () => {\n    this._configureRenderingPipeline();\n  };\n\n  private _configureRenderingPipeline() {\n    this.useNativeDataType = this._shouldUseNativeDataType();\n    this.useCPURendering = getShouldUseCPURendering();\n\n    for (const [funcName, functions] of Object.entries(\n      this.renderingPipelineFunctions\n    )) {\n      this[funcName] = this.useCPURendering ? functions.cpu : functions.gpu;\n    }\n\n    this.useCPURendering\n      ? this._resetCPUFallbackElement()\n      : this._resetGPUViewport();\n  }\n\n  private _resetCPUFallbackElement() {\n    this._cpuFallbackEnabledElement = {\n      canvas: this.canvas,\n      renderingTools: {},\n      transform: new Transform(),\n      viewport: { rotation: 0 },\n    };\n  }\n\n  private _resetGPUViewport() {\n    const renderer = this.getRenderer();\n    const camera = vtkCamera.newInstance();\n    renderer.setActiveCamera(camera);\n\n    const viewPlaneNormal = <Point3>[0, 0, -1];\n    this.initialViewUp = <Point3>[0, -1, 0];\n\n    camera.setDirectionOfProjection(\n      -viewPlaneNormal[0],\n      -viewPlaneNormal[1],\n      -viewPlaneNormal[2]\n    );\n    camera.setViewUp(...this.initialViewUp);\n    camera.setParallelProjection(true);\n    camera.setThicknessFromFocalPoint(0.1);\n    camera.setFreezeFocalPoint(true);\n  }\n\n  /**\n   * Returns the image and its properties that is being shown inside the\n   * stack viewport. It returns, the image dimensions, image direction,\n   * image scalar data, vtkImageData object, metadata, and scaling (e.g., PET suvbw)\n   *\n   * @returns IImageData: dimensions, direction, scalarData, vtkImageData, metadata, scaling\n   */\n  public getImageData: () => IImageData | CPUIImageData;\n\n  /**\n   * Sets the colormap for the current viewport.\n   * @param colormap - The colormap data to use.\n   */\n  public setColormap: (\n    colormap: CPUFallbackColormapData | ColormapRegistration\n  ) => void;\n\n  /**\n   * If the user has selected CPU rendering, return the CPU camera, otherwise\n   * return the default camera\n   * @returns The camera object.\n   */\n  public getCamera: () => ICamera;\n\n  /**\n   * Set the camera based on the provided camera object.\n   * @param cameraInterface - The camera interface that will be used to\n   * render the scene.\n   */\n  public setCamera: (\n    cameraInterface: ICamera,\n    storeAsInitialCamera?: boolean\n  ) => void;\n\n  public getRotation: () => number;\n\n  /**\n   * It sets the colormap to the default colormap.\n   */\n  public unsetColormap: () => void;\n\n  /**\n   * Centers Pan and resets the zoom for stack viewport.\n   */\n  public resetCamera: (resetPan?: boolean, resetZoom?: boolean) => boolean;\n\n  /**\n   * canvasToWorld Returns the world coordinates of the given `canvasPos`\n   * projected onto the plane defined by the `Viewport`'s camera.\n   *\n   * @param canvasPos - The position in canvas coordinates.\n   * @returns The corresponding world coordinates.\n   * @public\n   */\n  public canvasToWorld: (canvasPos: Point2) => Point3;\n\n  /**\n   * Returns the canvas coordinates of the given `worldPos`\n   * projected onto the `Viewport`'s `canvas`.\n   *\n   * @param worldPos - The position in world coordinates.\n   * @returns The corresponding canvas coordinates.\n   * @public\n   */\n  public worldToCanvas: (worldPos: Point3) => Point2;\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, returns the `vtkRenderer` responsible for rendering the `Viewport`.\n   *\n   * @returns The `vtkRenderer` for the `Viewport`.\n   */\n  public getRenderer: () => any;\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, return the default\n   * actor which is the first actor in the renderer.\n   * @returns An actor entry.\n   */\n  public getDefaultActor: () => ActorEntry;\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, return the actors in the viewport\n   * @returns An array of ActorEntry objects.\n   */\n  public getActors: () => Array<ActorEntry>;\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, it returns the actor entry for the given actor UID.\n   * @param actorUID - The unique ID of the actor you want to get.\n   * @returns An ActorEntry object.\n   */\n  public getActor: (actorUID: string) => ActorEntry;\n\n  /**\n   * If the renderer is CPU-based, throw an error; otherwise, set the\n   * actors in the viewport.\n   * @param actors - An array of ActorEntry objects.\n   */\n  public setActors: (actors: Array<ActorEntry>) => void;\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, add a list of actors to the viewport\n   * @param actors - An array of ActorEntry objects.\n   */\n  public addActors: (actors: Array<ActorEntry>) => void;\n\n  /**\n   * If the renderer is CPU based, throw an error. Otherwise, add the\n   * actor to the viewport\n   * @param actorEntry - The ActorEntry object that was created by the\n   * user.\n   */\n  public addActor: (actorEntry: ActorEntry) => void;\n\n  /**\n   * It throws an error if the renderer is CPU based. Otherwise, it removes the actors from the viewport.\n   */\n  public removeAllActors: () => void;\n\n  private setVOI: (voiRange: VOIRange, options?: SetVOIOptions) => void;\n\n  private setInterpolationType: (interpolationType: InterpolationType) => void;\n\n  private setInvertColor: (invert: boolean) => void;\n\n  private initializeElementDisabledHandler() {\n    eventTarget.addEventListener(\n      Events.ELEMENT_DISABLED,\n      function elementDisabledHandler() {\n        clearTimeout(this.debouncedTimeout);\n\n        eventTarget.removeEventListener(\n          Events.ELEMENT_DISABLED,\n          elementDisabledHandler\n        );\n      }\n    );\n  }\n\n  /**\n   * Resizes the viewport - only used in CPU fallback for StackViewport. The\n   * GPU resizing happens inside the RenderingEngine.\n   */\n  public resize = (): void => {\n    // GPU viewport resize is handled inside the RenderingEngine\n    if (this.useCPURendering) {\n      this._resizeCPU();\n    }\n  };\n\n  private _resizeCPU = (): void => {\n    if (this._cpuFallbackEnabledElement.viewport) {\n      resize(this._cpuFallbackEnabledElement);\n    }\n  };\n\n  private getImageDataGPU(): IImageData | undefined {\n    const defaultActor = this.getDefaultActor();\n\n    if (!defaultActor) {\n      return;\n    }\n\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n\n    const { actor } = defaultActor;\n    const vtkImageData = actor.getMapper().getInputData();\n    return {\n      dimensions: vtkImageData.getDimensions(),\n      spacing: vtkImageData.getSpacing(),\n      origin: vtkImageData.getOrigin(),\n      direction: vtkImageData.getDirection(),\n      scalarData: vtkImageData.getPointData().getScalars().getData(),\n      imageData: actor.getMapper().getInputData(),\n      metadata: { Modality: this.modality },\n      scaling: this.scaling,\n      hasPixelSpacing: this.hasPixelSpacing,\n      calibration: this.calibration,\n      preScale: {\n        ...this.csImage.preScale,\n      },\n    };\n  }\n\n  private getImageDataCPU(): CPUIImageData | undefined {\n    const { metadata } = this._cpuFallbackEnabledElement;\n\n    const spacing = metadata.spacing;\n\n    return {\n      dimensions: metadata.dimensions,\n      spacing,\n      origin: metadata.origin,\n      direction: metadata.direction,\n      metadata: { Modality: this.modality },\n      scaling: this.scaling,\n      imageData: {\n        getDirection: () => metadata.direction,\n        getDimensions: () => metadata.dimensions,\n        getScalarData: () => this.cpuImagePixelData,\n        getSpacing: () => spacing,\n        worldToIndex: (point: Point3) => {\n          const canvasPoint = this.worldToCanvasCPU(point);\n          const pixelCoord = canvasToPixel(\n            this._cpuFallbackEnabledElement,\n            canvasPoint\n          );\n          return [pixelCoord[0], pixelCoord[1], 0];\n        },\n        indexToWorld: (point: Point3) => {\n          const canvasPoint = pixelToCanvas(this._cpuFallbackEnabledElement, [\n            point[0],\n            point[1],\n          ]);\n          return this.canvasToWorldCPU(canvasPoint);\n        },\n      },\n      scalarData: this.cpuImagePixelData,\n      hasPixelSpacing: this.hasPixelSpacing,\n      calibration: this.calibration,\n      preScale: {\n        ...this.csImage.preScale,\n      },\n    };\n  }\n\n  /**\n   * Returns the frame of reference UID, if the image doesn't have imagePlaneModule\n   * metadata, it returns undefined, otherwise, frameOfReferenceUID is returned.\n   * @returns frameOfReferenceUID : string representing frame of reference id\n   */\n  public getFrameOfReferenceUID = (): string | undefined => {\n    // Get the current image that is displayed in the viewport\n    const imageId = this.getCurrentImageId();\n\n    if (!imageId) {\n      return;\n    }\n\n    // Use the metadata provider to grab its imagePlaneModule metadata\n    const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n    // If nothing exists, return undefined\n    if (!imagePlaneModule) {\n      return;\n    }\n\n    // Otherwise, provide the FrameOfReferenceUID so we can map\n    // annotations made on VolumeViewports back to StackViewports\n    // and vice versa\n    return imagePlaneModule.frameOfReferenceUID;\n  };\n\n  /**\n   * Returns the raw/loaded image being shown inside the stack viewport.\n   */\n  public getCornerstoneImage = (): IImage => {\n    return this.csImage;\n  };\n\n  /**\n   * Creates imageMapper based on the provided vtkImageData and also creates\n   * the imageSliceActor and connects it to the imageMapper.\n   * For color stack images, it sets the independent components to be false which\n   * is required in vtk.\n   *\n   * @param imageData - vtkImageData for the viewport\n   * @returns actor vtkActor\n   */\n  private createActorMapper = (imageData) => {\n    const mapper = vtkImageMapper.newInstance();\n    mapper.setInputData(imageData);\n\n    const actor = vtkImageSlice.newInstance();\n\n    actor.setMapper(mapper);\n\n    const { preferSizeOverAccuracy } = getConfiguration().rendering;\n\n    if (preferSizeOverAccuracy) {\n      // @ts-ignore for now until vtk is updated\n      mapper.setPreferSizeOverAccuracy(true);\n    }\n\n    if (imageData.getPointData().getNumberOfComponents() > 1) {\n      actor.getProperty().setIndependentComponents(false);\n    }\n\n    return actor;\n  };\n\n  /**\n   * Retrieves the metadata from the metadata provider, and optionally adds the\n   * scaling to the viewport if modality is PET and scaling metadata is provided.\n   *\n   * @param imageId - a string representing the imageId for the image\n   * @returns imagePlaneModule and imagePixelModule containing the metadata for the image\n   */\n  private buildMetadata(image: IImage) {\n    const imageId = image.imageId;\n\n    const {\n      pixelRepresentation,\n      bitsAllocated,\n      bitsStored,\n      highBit,\n      photometricInterpretation,\n      samplesPerPixel,\n    } = metaData.get('imagePixelModule', imageId);\n\n    // we can grab the window center and width from the image object\n    // since it the loader already has used the metadata provider\n    // to get the values\n    const { windowWidth, windowCenter, voiLUTFunction } = image;\n\n    const { modality } = metaData.get('generalSeriesModule', imageId);\n    const imageIdScalingFactor = metaData.get('scalingModule', imageId);\n\n    if (modality === 'PT' && imageIdScalingFactor) {\n      this._addScalingToViewport(imageIdScalingFactor);\n    }\n\n    this.modality = modality;\n    const voiLUTFunctionEnum = this._getValidVOILUTFunction(voiLUTFunction);\n    this.VOILUTFunction = voiLUTFunctionEnum;\n\n    this.calibration = null;\n    let imagePlaneModule = this._getImagePlaneModule(imageId);\n\n    if (!this.useCPURendering) {\n      imagePlaneModule = this.calibrateIfNecessary(imageId, imagePlaneModule);\n    }\n\n    return {\n      imagePlaneModule,\n      imagePixelModule: {\n        bitsAllocated,\n        bitsStored,\n        samplesPerPixel,\n        highBit,\n        photometricInterpretation,\n        pixelRepresentation,\n        windowWidth,\n        windowCenter,\n        modality,\n        voiLUTFunction: voiLUTFunctionEnum,\n      },\n    };\n  }\n\n  /**\n   * Checks the metadataProviders to see if a calibratedPixelSpacing is\n   * given. If so, checks the actor to see if it needs to be modified, and\n   * set the flags for imageCalibration if a new actor needs to be created\n   *\n   * @param imageId - imageId\n   * @param imagePlaneModule - imagePlaneModule\n   * @returns modified imagePlaneModule with the calibrated spacings\n   */\n  private calibrateIfNecessary(imageId, imagePlaneModule) {\n    const calibration = metaData.get('calibratedPixelSpacing', imageId);\n    const isUpdated = this.calibration !== calibration;\n    const { scale } = calibration || {};\n    this.hasPixelSpacing = scale > 0 || imagePlaneModule.rowPixelSpacing > 0;\n    imagePlaneModule.calibration = calibration;\n\n    if (!isUpdated) {\n      return imagePlaneModule;\n    }\n\n    this.calibration = calibration;\n    this._publishCalibratedEvent = true;\n    this._calibrationEvent = <CalibrationEvent>{\n      scale,\n      calibration,\n    };\n\n    return imagePlaneModule;\n  }\n\n  /**\n   * Sets the properties for the viewport on the default actor. Properties include\n   * setting the VOI, inverting the colors and setting the interpolation type, rotation\n   * @param voiRange - Sets the lower and upper voi\n   * @param invert - Inverts the colors\n   * @param interpolationType - Changes the interpolation type (1:linear, 0: nearest)\n   * @param rotation - image rotation in degrees\n   */\n  public setProperties(\n    {\n      voiRange,\n      VOILUTFunction,\n      invert,\n      interpolationType,\n      rotation,\n    }: StackViewportProperties = {},\n    suppressEvents = false\n  ): void {\n    this.viewportStatus = this.csImage\n      ? ViewportStatus.PRE_RENDER\n      : ViewportStatus.LOADING;\n    // if voi is not applied for the first time, run the setVOI function\n    // which will apply the default voi based on the range\n    if (typeof voiRange !== 'undefined') {\n      const voiUpdatedWithSetProperties = true;\n      this.setVOI(voiRange, { suppressEvents, voiUpdatedWithSetProperties });\n    }\n\n    if (typeof VOILUTFunction !== 'undefined') {\n      this.setVOILUTFunction(VOILUTFunction, suppressEvents);\n    }\n\n    if (typeof invert !== 'undefined') {\n      this.setInvertColor(invert);\n    }\n\n    if (typeof interpolationType !== 'undefined') {\n      this.setInterpolationType(interpolationType);\n    }\n\n    if (typeof rotation !== 'undefined') {\n      // TODO: check with VTK about rounding errors here.\n      if (this.getRotation() !== rotation) {\n        this.setRotation(rotation);\n      }\n    }\n  }\n\n  /**\n   * Retrieve the viewport properties\n   * @returns viewport properties including voi, invert, interpolation type, rotation, flip\n   */\n  public getProperties = (): StackViewportProperties => {\n    const {\n      voiRange,\n      VOILUTFunction,\n      interpolationType,\n      invert,\n      voiUpdatedWithSetProperties,\n    } = this;\n    const rotation = this.getRotation();\n\n    return {\n      voiRange,\n      VOILUTFunction,\n      interpolationType,\n      invert,\n      rotation,\n      isComputedVOI: !voiUpdatedWithSetProperties,\n    };\n  };\n\n  /**\n   * Reset the viewport properties to the default values\n   */\n  public resetProperties(): void {\n    this.cpuRenderingInvalidated = true;\n    this.voiUpdatedWithSetProperties = false;\n    this.viewportStatus = ViewportStatus.PRE_RENDER;\n\n    this.fillWithBackgroundColor();\n\n    if (this.useCPURendering) {\n      this._cpuFallbackEnabledElement.renderingTools = {};\n    }\n\n    this._resetProperties();\n\n    this.render();\n  }\n\n  private _resetProperties() {\n    let voiRange;\n    if (this._isCurrentImagePTPrescaled()) {\n      // if not set via setProperties; if it is a PT image and is already prescaled,\n      // use the default range for PT\n      voiRange = this._getDefaultPTPrescaledVOIRange();\n    } else {\n      // if not set via setProperties; if it is not a PT image or is not prescaled,\n      // use the voiRange for the current image from its metadata if found\n      // otherwise, use the cached voiRange\n      voiRange = this._getVOIRangeForCurrentImage();\n    }\n\n    this.setVOI(voiRange);\n\n    if (this.getRotation() !== 0) {\n      this.setRotation(0);\n    }\n    this.setInterpolationType(InterpolationType.LINEAR);\n    this.setInvertColor(false);\n  }\n\n  private _setPropertiesFromCache(): void {\n    const { interpolationType, invert } = this;\n\n    let voiRange;\n    if (this.voiUpdatedWithSetProperties) {\n      // use the cached voiRange if the voiRange is locked (if the user has\n      // manually set the voi with tools or setProperties api)\n      voiRange = this.voiRange;\n    } else if (this._isCurrentImagePTPrescaled()) {\n      // if not set via setProperties; if it is a PT image and is already prescaled,\n      // use the default range for PT\n      voiRange = this._getDefaultPTPrescaledVOIRange();\n    } else {\n      // if not set via setProperties; if it is not a PT image or is not prescaled,\n      // use the voiRange for the current image from its metadata if found\n      // otherwise, use the cached voiRange\n      voiRange = this._getVOIRangeForCurrentImage() ?? this.voiRange;\n    }\n\n    this.setVOI(voiRange);\n    this.setInterpolationType(interpolationType);\n    this.setInvertColor(invert);\n  }\n\n  private getCameraCPU(): Partial<ICamera> {\n    const { metadata, viewport } = this._cpuFallbackEnabledElement;\n    const { direction } = metadata;\n\n    // focalPoint and position of CPU camera is just a placeholder since\n    // tools need focalPoint to be defined\n    const viewPlaneNormal = direction.slice(6, 9).map((x) => -x) as Point3;\n    let viewUp = direction.slice(3, 6).map((x) => -x) as Point3;\n\n    // If camera is rotated, we need the correct rotated viewUp along the\n    // viewPlaneNormal vector\n    if (viewport.rotation) {\n      const rotationMatrix = mat4.fromRotation(\n        mat4.create(),\n        (viewport.rotation * Math.PI) / 180,\n        viewPlaneNormal\n      );\n      viewUp = vec3.transformMat4(\n        vec3.create(),\n        viewUp,\n        rotationMatrix\n      ) as Point3;\n    }\n\n    const canvasCenter: Point2 = [\n      this.element.clientWidth / 2,\n      this.element.clientHeight / 2,\n    ];\n\n    // Focal point is the center of the canvas in world coordinate by construction\n    const canvasCenterWorld = this.canvasToWorld(canvasCenter);\n\n    // parallel scale is half of the viewport height in the world units (mm)\n\n    const topLeftWorld = this.canvasToWorld([0, 0]);\n    const bottomLeftWorld = this.canvasToWorld([0, this.element.clientHeight]);\n\n    const parallelScale = vec3.distance(topLeftWorld, bottomLeftWorld) / 2;\n\n    return {\n      parallelProjection: true,\n      focalPoint: canvasCenterWorld,\n      position: [0, 0, 0],\n      parallelScale,\n      scale: viewport.scale,\n      viewPlaneNormal: [\n        viewPlaneNormal[0],\n        viewPlaneNormal[1],\n        viewPlaneNormal[2],\n      ],\n      viewUp: [viewUp[0], viewUp[1], viewUp[2]],\n      flipHorizontal: this.flipHorizontal,\n      flipVertical: this.flipVertical,\n    };\n  }\n\n  private setCameraCPU(cameraInterface: ICamera): void {\n    const { viewport, image } = this._cpuFallbackEnabledElement;\n    const previousCamera = this.getCameraCPU();\n\n    const { focalPoint, parallelScale, scale, flipHorizontal, flipVertical } =\n      cameraInterface;\n\n    const { clientHeight } = this.element;\n\n    if (focalPoint) {\n      const focalPointCanvas = this.worldToCanvasCPU(focalPoint);\n      const focalPointPixel = canvasToPixel(\n        this._cpuFallbackEnabledElement,\n        focalPointCanvas\n      );\n\n      const prevFocalPointCanvas = this.worldToCanvasCPU(\n        previousCamera.focalPoint\n      );\n      const prevFocalPointPixel = canvasToPixel(\n        this._cpuFallbackEnabledElement,\n        prevFocalPointCanvas\n      );\n\n      const deltaPixel = vec2.create();\n      vec2.subtract(\n        deltaPixel,\n        vec2.fromValues(focalPointPixel[0], focalPointPixel[1]),\n        vec2.fromValues(prevFocalPointPixel[0], prevFocalPointPixel[1])\n      );\n\n      const shift = correctShift(\n        { x: deltaPixel[0], y: deltaPixel[1] },\n        viewport\n      );\n\n      viewport.translation.x -= shift.x;\n      viewport.translation.y -= shift.y;\n    }\n\n    if (parallelScale) {\n      // We need to convert he parallelScale which has a physical meaning to\n      // camera scale factor (since CPU works with scale). Since parallelScale represents\n      // half of the height of the viewport in the world unit (mm), we can use that\n      // to compute the scale factor which is the ratio of the viewport height in pixels\n      // to the current rendered image height.\n      const { rowPixelSpacing } = image;\n      const scale = (clientHeight * rowPixelSpacing * 0.5) / parallelScale;\n\n      viewport.scale = scale;\n      viewport.parallelScale = parallelScale;\n    }\n\n    if (scale) {\n      const { rowPixelSpacing } = image;\n      viewport.scale = scale;\n      viewport.parallelScale = (clientHeight * rowPixelSpacing * 0.5) / scale;\n    }\n\n    if (flipHorizontal !== undefined || flipVertical !== undefined) {\n      this.setFlipCPU({ flipHorizontal, flipVertical });\n    }\n\n    // re-calculate the transforms\n    this._cpuFallbackEnabledElement.transform = calculateTransform(\n      this._cpuFallbackEnabledElement\n    );\n\n    const eventDetail: EventTypes.CameraModifiedEventDetail = {\n      previousCamera,\n      camera: this.getCamera(),\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n      rotation: this.getRotation(),\n    };\n\n    triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n  }\n\n  private setFlipCPU({ flipHorizontal, flipVertical }: FlipDirection): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n\n    if (flipHorizontal !== undefined) {\n      viewport.hflip = flipHorizontal;\n      this.flipHorizontal = viewport.hflip;\n    }\n\n    if (flipVertical !== undefined) {\n      viewport.vflip = flipVertical;\n      this.flipVertical = viewport.vflip;\n    }\n  }\n\n  private getRotationCPU = (): number => {\n    const { viewport } = this._cpuFallbackEnabledElement;\n    return viewport.rotation;\n  };\n\n  /**\n   * Gets the rotation resulting from the value set in setRotation AND taking into\n   * account any flips that occurred subsequently.\n   *\n   * @returns the rotation resulting from the value set in setRotation AND taking into\n   * account any flips that occurred subsequently.\n   */\n  private getRotationGPU = (): number => {\n    const {\n      viewUp: currentViewUp,\n      viewPlaneNormal,\n      flipVertical,\n    } = this.getCamera();\n\n    // The initial view up vector without any rotation, but incorporating vertical flip.\n    const initialViewUp = flipVertical\n      ? vec3.negate(vec3.create(), this.initialViewUp)\n      : this.initialViewUp;\n\n    // The angle between the initial and current view up vectors.\n    // TODO: check with VTK about rounding errors here.\n    const initialToCurrentViewUpAngle =\n      (vec3.angle(initialViewUp, currentViewUp) * 180) / Math.PI;\n\n    // Now determine if initialToCurrentViewUpAngle is positive or negative by comparing\n    // the direction of the initial/current view up cross product with the current\n    // viewPlaneNormal.\n\n    const initialToCurrentViewUpCross = vec3.cross(\n      vec3.create(),\n      initialViewUp,\n      currentViewUp\n    );\n\n    // The sign of the dot product of the start/end view up cross product and\n    // the viewPlaneNormal indicates a positive or negative rotation respectively.\n    const normalDot = vec3.dot(initialToCurrentViewUpCross, viewPlaneNormal);\n\n    return normalDot >= 0\n      ? initialToCurrentViewUpAngle\n      : (360 - initialToCurrentViewUpAngle) % 360;\n  };\n\n  private setRotation(rotation: number): void {\n    const previousCamera = this.getCamera();\n\n    this.useCPURendering\n      ? this.setRotationCPU(rotation)\n      : this.setRotationGPU(rotation);\n\n    // New camera after rotation\n    const camera = this.getCamera();\n\n    const eventDetail: EventTypes.CameraModifiedEventDetail = {\n      previousCamera,\n      camera,\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n      rotation,\n    };\n\n    triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n  }\n\n  private setVOILUTFunction(\n    voiLUTFunction: VOILUTFunctionType,\n    suppressEvents?: boolean\n  ): void {\n    if (this.useCPURendering) {\n      throw new Error('VOI LUT function is not supported in CPU rendering');\n    }\n\n    // make sure the VOI LUT function is valid in the VOILUTFunctionType which is enum\n    const newVOILUTFunction = this._getValidVOILUTFunction(voiLUTFunction);\n\n    let forceRecreateLUTFunction = false;\n    if (\n      this.VOILUTFunction !== VOILUTFunctionType.LINEAR &&\n      newVOILUTFunction === VOILUTFunctionType.LINEAR\n    ) {\n      forceRecreateLUTFunction = true;\n    }\n\n    this.VOILUTFunction = newVOILUTFunction;\n\n    const { voiRange } = this.getProperties();\n    this.setVOI(voiRange, { suppressEvents, forceRecreateLUTFunction });\n  }\n\n  private setRotationCPU(rotation: number): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n    viewport.rotation = rotation;\n  }\n\n  private setRotationGPU(rotation: number): void {\n    const { flipVertical } = this.getCamera();\n\n    // Moving back to zero rotation, for new scrolled slice rotation is 0 after camera reset\n    const initialViewUp = flipVertical\n      ? vec3.negate(vec3.create(), this.initialViewUp)\n      : this.initialViewUp;\n\n    this.setCamera({\n      viewUp: initialViewUp as Point3,\n    });\n\n    // rotating camera to the new value\n    this.getVtkActiveCamera().roll(-rotation);\n  }\n\n  private setInterpolationTypeGPU(interpolationType: InterpolationType): void {\n    const defaultActor = this.getDefaultActor();\n\n    if (!defaultActor) {\n      return;\n    }\n\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n    const { actor } = defaultActor;\n    const volumeProperty = actor.getProperty();\n\n    // @ts-ignore\n    volumeProperty.setInterpolationType(interpolationType);\n    this.interpolationType = interpolationType;\n  }\n\n  private setInterpolationTypeCPU(interpolationType: InterpolationType): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n\n    viewport.pixelReplication =\n      interpolationType === InterpolationType.LINEAR ? false : true;\n\n    this.interpolationType = interpolationType;\n  }\n\n  private setInvertColorCPU(invert: boolean): void {\n    const { viewport } = this._cpuFallbackEnabledElement;\n\n    if (!viewport) {\n      return;\n    }\n\n    viewport.invert = invert;\n    this.invert = invert;\n  }\n\n  private setInvertColorGPU(invert: boolean): void {\n    const defaultActor = this.getDefaultActor();\n\n    if (!defaultActor) {\n      return;\n    }\n\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n\n    // Duplicated logic to make sure typescript stops complaining\n    // about vtkActor not having the correct property\n    if (actorIsA(defaultActor, 'vtkVolume')) {\n      const volumeActor = defaultActor.actor as VolumeActor;\n      const tfunc = volumeActor.getProperty().getRGBTransferFunction(0);\n\n      if ((!this.invert && invert) || (this.invert && !invert)) {\n        invertRgbTransferFunction(tfunc);\n      }\n      this.invert = invert;\n    } else if (actorIsA(defaultActor, 'vtkImageSlice')) {\n      const imageSliceActor = defaultActor.actor as vtkImageSlice;\n      const tfunc = imageSliceActor.getProperty().getRGBTransferFunction(0);\n\n      if ((!this.invert && invert) || (this.invert && !invert)) {\n        invertRgbTransferFunction(tfunc);\n      }\n      this.invert = invert;\n    }\n  }\n\n  private setVOICPU(voiRange: VOIRange, options: SetVOIOptions = {}): void {\n    const { suppressEvents = false } = options;\n    // TODO: Account for VOILUTFunction\n    const { viewport, image } = this._cpuFallbackEnabledElement;\n\n    if (!viewport || !image) {\n      return;\n    }\n\n    if (typeof voiRange === 'undefined') {\n      const { windowWidth: ww, windowCenter: wc } = image;\n\n      const wwToUse = Array.isArray(ww) ? ww[0] : ww;\n      const wcToUse = Array.isArray(wc) ? wc[0] : wc;\n      viewport.voi = {\n        windowWidth: wwToUse,\n        windowCenter: wcToUse,\n      };\n\n      const { lower, upper } = windowLevelUtil.toLowHighRange(wwToUse, wcToUse);\n      voiRange = { lower, upper };\n    } else {\n      const { lower, upper } = voiRange;\n      const { windowCenter, windowWidth } = windowLevelUtil.toWindowLevel(\n        lower,\n        upper\n      );\n\n      if (!viewport.voi) {\n        viewport.voi = {\n          windowWidth: 0,\n          windowCenter: 0,\n        };\n      }\n\n      viewport.voi.windowWidth = windowWidth;\n      viewport.voi.windowCenter = windowCenter;\n    }\n\n    this.voiRange = voiRange;\n    const eventDetail: VoiModifiedEventDetail = {\n      viewportId: this.id,\n      range: voiRange,\n    };\n\n    if (!suppressEvents) {\n      triggerEvent(this.element, Events.VOI_MODIFIED, eventDetail);\n    }\n  }\n\n  private setVOIGPU(voiRange: VOIRange, options: SetVOIOptions = {}): void {\n    const {\n      suppressEvents = false,\n      forceRecreateLUTFunction = false,\n      voiUpdatedWithSetProperties = false,\n    } = options;\n\n    if (\n      voiRange &&\n      this.voiRange &&\n      this.voiRange.lower === voiRange.lower &&\n      this.voiRange.upper === voiRange.upper &&\n      !forceRecreateLUTFunction &&\n      !this.stackInvalidated\n    ) {\n      return;\n    }\n\n    const defaultActor = this.getDefaultActor();\n    if (!defaultActor) {\n      return;\n    }\n\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n    const imageActor = defaultActor.actor as ImageActor;\n\n    let voiRangeToUse = voiRange;\n\n    if (typeof voiRangeToUse === 'undefined') {\n      const imageData = imageActor.getMapper().getInputData();\n      const range = imageData.getPointData().getScalars().getRange();\n      const maxVoiRange = { lower: range[0], upper: range[1] };\n      voiRangeToUse = maxVoiRange;\n    }\n\n    // scaling logic here\n    // https://github.com/Kitware/vtk-js/blob/master/Sources/Rendering/OpenGL/ImageMapper/index.js#L540-L549\n    imageActor.getProperty().setUseLookupTableScalarRange(true);\n\n    let transferFunction = imageActor.getProperty().getRGBTransferFunction(0);\n\n    const isSigmoidTFun =\n      this.VOILUTFunction === VOILUTFunctionType.SAMPLED_SIGMOID;\n\n    // use the old cfun if it exists for linear case\n    if (isSigmoidTFun || !transferFunction || forceRecreateLUTFunction) {\n      const transferFunctionCreator = isSigmoidTFun\n        ? createSigmoidRGBTransferFunction\n        : createLinearRGBTransferFunction;\n\n      transferFunction = transferFunctionCreator(voiRangeToUse);\n\n      if (this.invert) {\n        invertRgbTransferFunction(transferFunction);\n      }\n\n      imageActor.getProperty().setRGBTransferFunction(0, transferFunction);\n    }\n\n    if (!isSigmoidTFun) {\n      // @ts-ignore vtk type error\n      transferFunction.setRange(voiRangeToUse.lower, voiRangeToUse.upper);\n    }\n\n    this.voiRange = voiRangeToUse;\n\n    // if voiRange is set by setProperties we need to lock it if it is not locked already\n    if (!this.voiUpdatedWithSetProperties) {\n      this.voiUpdatedWithSetProperties = voiUpdatedWithSetProperties;\n    }\n\n    if (suppressEvents) {\n      return;\n    }\n\n    const eventDetail: VoiModifiedEventDetail = {\n      viewportId: this.id,\n      range: voiRangeToUse,\n      VOILUTFunction: this.VOILUTFunction,\n    };\n\n    triggerEvent(this.element, Events.VOI_MODIFIED, eventDetail);\n  }\n\n  /**\n   * Adds scaling parameters to the viewport to be used along all slices\n   *\n   * @param imageIdScalingFactor - suvbw, suvlbm, suvbsa\n   */\n  private _addScalingToViewport(imageIdScalingFactor) {\n    if (this.scaling.PT) {\n      return;\n    }\n\n    // if don't exist\n    // These ratios are constant across all frames, so only need one.\n    const { suvbw, suvlbm, suvbsa } = imageIdScalingFactor;\n\n    const ptScaling = <PTScaling>{};\n\n    if (suvlbm) {\n      ptScaling.suvbwToSuvlbm = suvlbm / suvbw;\n    }\n\n    if (suvbsa) {\n      ptScaling.suvbwToSuvbsa = suvbsa / suvbw;\n    }\n\n    this.scaling.PT = ptScaling;\n  }\n\n  /**\n   * Calculates number of components based on the dicom metadata\n   *\n   * @param photometricInterpretation - string dicom tag\n   * @returns number representing number of components\n   */\n  private _getNumCompsFromPhotometricInterpretation(\n    photometricInterpretation: string\n  ): number {\n    // TODO: this function will need to have more logic later\n    // see http://dicom.nema.org/medical/Dicom/current/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.2\n    let numberOfComponents = 1;\n    if (\n      photometricInterpretation === 'RGB' ||\n      photometricInterpretation.indexOf('YBR') !== -1 ||\n      photometricInterpretation === 'PALETTE COLOR'\n    ) {\n      numberOfComponents = 3;\n    }\n\n    return numberOfComponents;\n  }\n\n  /**\n   * Calculates image metadata based on the image object. It calculates normal\n   * axis for the images, and output image metadata\n   *\n   * @param image - stack image containing cornerstone image\n   * @returns image metadata: bitsAllocated, number of components, origin,\n   *  direction, dimensions, spacing, number of voxels.\n   */\n  private _getImageDataMetadata(image: IImage): ImageDataMetaData {\n    // TODO: Creating a single image should probably not require a metadata provider.\n    // We should define the minimum we need to display an image and it should live on\n    // the Image object itself. Additional stuff (e.g. pixel spacing, direction, origin, etc)\n    // should be optional and used if provided through a metadata provider.\n\n    const { imagePlaneModule, imagePixelModule } = this.buildMetadata(image);\n\n    let rowCosines, columnCosines;\n\n    rowCosines = <Point3>imagePlaneModule.rowCosines;\n    columnCosines = <Point3>imagePlaneModule.columnCosines;\n\n    // if null or undefined\n    if (rowCosines == null || columnCosines == null) {\n      rowCosines = <Point3>[1, 0, 0];\n      columnCosines = <Point3>[0, 1, 0];\n    }\n\n    const rowCosineVec = vec3.fromValues(\n      rowCosines[0],\n      rowCosines[1],\n      rowCosines[2]\n    );\n    const colCosineVec = vec3.fromValues(\n      columnCosines[0],\n      columnCosines[1],\n      columnCosines[2]\n    );\n    const scanAxisNormal = vec3.create();\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n    let origin = imagePlaneModule.imagePositionPatient;\n    // if null or undefined\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n\n    const xSpacing =\n      imagePlaneModule.columnPixelSpacing || image.columnPixelSpacing;\n    const ySpacing = imagePlaneModule.rowPixelSpacing || image.rowPixelSpacing;\n    const xVoxels = image.columns;\n    const yVoxels = image.rows;\n\n    // Note: For rendering purposes, we use the EPSILON as the z spacing.\n    // This is purely for internal implementation logic since we are still\n    // technically rendering 3D objects with vtk.js, but the abstracted intention\n    //  of the stack viewport is to render 2D images\n    const zSpacing = EPSILON;\n    const zVoxels = 1;\n\n    const numComps =\n      image.numComps ||\n      this._getNumCompsFromPhotometricInterpretation(\n        imagePixelModule.photometricInterpretation\n      );\n\n    return {\n      bitsAllocated: imagePixelModule.bitsAllocated,\n      numComps,\n      origin,\n      direction: [...rowCosineVec, ...colCosineVec, ...scanAxisNormal] as Mat3,\n      dimensions: [xVoxels, yVoxels, zVoxels],\n      spacing: [xSpacing, ySpacing, zSpacing],\n      numVoxels: xVoxels * yVoxels * zVoxels,\n      imagePlaneModule,\n      imagePixelModule,\n    };\n  }\n\n  /**\n   * Converts the image direction to camera viewUp and viewplaneNormal\n   *\n   * @param imageDataDirection - vtkImageData direction\n   * @returns viewplane normal and viewUp of the camera\n   */\n  private _getCameraOrientation(imageDataDirection: Mat3): {\n    viewPlaneNormal: Point3;\n    viewUp: Point3;\n  } {\n    const viewPlaneNormal = imageDataDirection.slice(6, 9).map((x) => -x);\n\n    const viewUp = imageDataDirection.slice(3, 6).map((x) => -x);\n    return {\n      viewPlaneNormal: [\n        viewPlaneNormal[0],\n        viewPlaneNormal[1],\n        viewPlaneNormal[2],\n      ],\n      viewUp: [viewUp[0], viewUp[1], viewUp[2]],\n    };\n  }\n\n  /**\n   * Creates vtkImagedata based on the image object, it creates\n   * and empty scalar data for the image based on the metadata\n   * tags (e.g., bitsAllocated)\n   *\n   * @param image - cornerstone Image object\n   */\n  private _createVTKImageData({\n    origin,\n    direction,\n    dimensions,\n    spacing,\n    numComps,\n    pixelArray,\n  }): void {\n    const values = new pixelArray.constructor(pixelArray.length);\n\n    // Todo: I guess nothing should be done for use16bit?\n    const scalarArray = vtkDataArray.newInstance({\n      name: 'Pixels',\n      numberOfComponents: numComps,\n      values: values,\n    });\n\n    this._imageData = vtkImageData.newInstance();\n\n    this._imageData.setDimensions(dimensions);\n    this._imageData.setSpacing(spacing);\n    this._imageData.setDirection(direction);\n    this._imageData.setOrigin(origin);\n    this._imageData.getPointData().setScalars(scalarArray);\n  }\n\n  /**\n   * Sets the imageIds to be visualized inside the stack viewport. It accepts\n   * list of imageIds, the index of the first imageId to be viewed. It is a\n   * asynchronous function that returns a promise resolving to imageId being\n   * displayed in the stack viewport.\n   *\n   *\n   * @param imageIds - list of strings, that represents list of image Ids\n   * @param currentImageIdIndex - number representing the index of the initial image to be displayed\n   */\n  public async setStack(\n    imageIds: Array<string>,\n    currentImageIdIndex = 0\n  ): Promise<string> {\n    this._throwIfDestroyed();\n\n    this.imageIds = imageIds;\n    this.currentImageIdIndex = currentImageIdIndex;\n    this.targetImageIdIndex = currentImageIdIndex;\n\n    // reset the stack\n    this.stackInvalidated = true;\n    this.flipVertical = false;\n    this.flipHorizontal = false;\n    this.voiRange = null;\n    this.interpolationType = InterpolationType.LINEAR;\n    this.invert = false;\n    this.viewportStatus = ViewportStatus.LOADING;\n\n    this.fillWithBackgroundColor();\n\n    if (this.useCPURendering) {\n      this._cpuFallbackEnabledElement.renderingTools = {};\n      delete this._cpuFallbackEnabledElement.viewport.colormap;\n    }\n\n    const imageId = await this._setImageIdIndex(currentImageIdIndex);\n\n    const eventDetail: StackViewportNewStackEventDetail = {\n      imageIds,\n      viewportId: this.id,\n      element: this.element,\n      currentImageIdIndex: currentImageIdIndex,\n    };\n\n    triggerEvent(eventTarget, Events.STACK_VIEWPORT_NEW_STACK, eventDetail);\n\n    return imageId;\n  }\n\n  /**\n   * Throws an error if you are using a destroyed instance of the stack viewport\n   */\n  private _throwIfDestroyed() {\n    if (this.isDisabled) {\n      throw new Error(\n        'The stack viewport has been destroyed and is no longer usable. Renderings will not be performed. If you ' +\n          'are using the same viewportId and have re-enabled the viewport, you need to grab the new viewport instance ' +\n          'using renderingEngine.getViewport(viewportId), instead of using your lexical scoped reference to the viewport instance.'\n      );\n    }\n  }\n\n  /**\n   * It checks if the new image object matches the dimensions, spacing,\n   * and direction of the previously displayed image in the viewport or not.\n   * It returns a boolean\n   *\n   * @param image - Cornerstone Image object\n   * @param imageData - vtkImageData\n   * @returns boolean\n   */\n  private _checkVTKImageDataMatchesCornerstoneImage(\n    image: IImage,\n    imageData: vtkImageDataType\n  ): boolean {\n    if (!imageData) {\n      return false;\n    }\n    const [xSpacing, ySpacing] = imageData.getSpacing();\n    const [xVoxels, yVoxels] = imageData.getDimensions();\n    const imagePlaneModule = this._getImagePlaneModule(image.imageId);\n    const direction = imageData.getDirection();\n    const rowCosines = direction.slice(0, 3);\n    const columnCosines = direction.slice(3, 6);\n    const dataType = imageData.getPointData().getScalars().getDataType();\n\n    // using epsilon comparison for float numbers comparison.\n    const isSameXSpacing = isEqual(xSpacing, image.columnPixelSpacing);\n    const isSameYSpacing = isEqual(ySpacing, image.rowPixelSpacing);\n\n    // using spacing, size, and direction only for now\n    return (\n      (isSameXSpacing ||\n        (image.columnPixelSpacing === null && xSpacing === 1.0)) &&\n      (isSameYSpacing ||\n        (image.rowPixelSpacing === null && ySpacing === 1.0)) &&\n      xVoxels === image.columns &&\n      yVoxels === image.rows &&\n      isEqual(imagePlaneModule.rowCosines, <Point3>rowCosines) &&\n      isEqual(imagePlaneModule.columnCosines, <Point3>columnCosines) &&\n      (!this.useNativeDataType ||\n        dataType === image.getPixelData().constructor.name)\n    );\n  }\n\n  /**\n   * It Updates the vtkImageData of the viewport with the new pixel data\n   * from the provided image object.\n   *\n   * @param image - Cornerstone Image object\n   */\n  private _updateVTKImageDataFromCornerstoneImage(image: IImage): void {\n    const imagePlaneModule = this._getImagePlaneModule(image.imageId);\n    let origin = imagePlaneModule.imagePositionPatient;\n\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n\n    this._imageData.setOrigin(origin);\n\n    // Update the pixel data in the vtkImageData object with the pixelData\n    // from the loaded Cornerstone image\n    this._updatePixelData(image);\n  }\n\n  private _updatePixelData(image: IImage) {\n    const pixelData = image.getPixelData();\n    const scalars = this._imageData.getPointData().getScalars();\n    const scalarData = scalars.getData() as\n      | Uint8Array\n      | Float32Array\n      | Uint16Array\n      | Int16Array;\n\n    // if the color image is loaded with CPU previously, it loads it\n    // with RGBA, and here we need to remove the A channel from the\n    // pixel data.\n    if (image.color && image.rgba) {\n      const newPixelData = new Uint8Array(image.columns * image.rows * 3);\n      for (let i = 0; i < image.columns * image.rows; i++) {\n        newPixelData[i * 3] = pixelData[i * 4];\n        newPixelData[i * 3 + 1] = pixelData[i * 4 + 1];\n        newPixelData[i * 3 + 2] = pixelData[i * 4 + 2];\n      }\n      // modify the image object to have the correct pixel data for later\n      // use.\n      image.rgba = false;\n      image.getPixelData = () => newPixelData;\n      scalarData.set(newPixelData);\n    } else {\n      scalarData.set(pixelData);\n    }\n\n    // Trigger modified on the VTK Object so the texture is updated\n    // TODO: evaluate directly changing things with texSubImage3D later\n    this._imageData.modified();\n  }\n\n  /**\n   * It uses imageLoadPoolManager to add request for the imageId. It loadsAndCache\n   * the image and triggers the STACK_NEW_IMAGE when the request successfully retrieves\n   * the image. Next, the volume actor gets updated with the new new retrieved image.\n   *\n   * @param imageId - string representing the imageId\n   * @param imageIdIndex - index of the imageId in the imageId list\n   */\n  private async _loadAndDisplayImage(\n    imageId: string,\n    imageIdIndex: number\n  ): Promise<string> {\n    await (this.useCPURendering\n      ? this._loadAndDisplayImageCPU(imageId, imageIdIndex)\n      : this._loadAndDisplayImageGPU(imageId, imageIdIndex));\n\n    return imageId;\n  }\n\n  private _loadAndDisplayImageCPU(\n    imageId: string,\n    imageIdIndex: number\n  ): Promise<string> {\n    return new Promise((resolve, reject) => {\n      // 1. Load the image using the Image Loader\n      function successCallback(\n        image: IImage,\n        imageIdIndex: number,\n        imageId: string\n      ) {\n        // Perform this check after the image has finished loading\n        // in case the user has already scrolled away to another image.\n        // In that case, do not render this image.\n        if (this.currentImageIdIndex !== imageIdIndex) {\n          return;\n        }\n\n        const pixelData = image.getPixelData();\n\n        // handle the case where the pixelData is a Float32Array\n        // CPU path cannot handle it, it should be converted to Uint16Array\n        // and via the Modality LUT we can display it properly\n        const preScale = image.preScale;\n        const scalingParams = preScale?.scalingParameters;\n\n        const scaledWithNonIntegers =\n          (preScale?.scaled && scalingParams?.rescaleIntercept % 1 !== 0) ||\n          scalingParams?.rescaleSlope % 1 !== 0;\n\n        if (pixelData instanceof Float32Array && scaledWithNonIntegers) {\n          const floatMinMax = {\n            min: image.maxPixelValue,\n            max: image.minPixelValue,\n          };\n          const floatRange = Math.abs(floatMinMax.max - floatMinMax.min);\n          const intRange = 65535;\n          const slope = floatRange / intRange;\n          const intercept = floatMinMax.min;\n          const numPixels = pixelData.length;\n          const intPixelData = new Uint16Array(numPixels);\n\n          let min = 65535;\n\n          let max = 0;\n\n          for (let i = 0; i < numPixels; i++) {\n            const rescaledPixel = Math.floor(\n              (pixelData[i] - intercept) / slope\n            );\n\n            intPixelData[i] = rescaledPixel;\n            min = Math.min(min, rescaledPixel);\n            max = Math.max(max, rescaledPixel);\n          }\n\n          // reset the properties since basically the image has changed\n          image.minPixelValue = min;\n          image.maxPixelValue = max;\n          image.slope = slope;\n          image.intercept = intercept;\n          image.getPixelData = () => intPixelData;\n\n          image.preScale = {\n            ...image.preScale,\n            scaled: false,\n          };\n        }\n\n        this._setCSImage(image);\n        this.viewportStatus = ViewportStatus.PRE_RENDER;\n\n        const eventDetail: EventTypes.StackNewImageEventDetail = {\n          image,\n          imageId,\n          imageIdIndex,\n          viewportId: this.id,\n          renderingEngineId: this.renderingEngineId,\n        };\n\n        triggerEvent(this.element, Events.STACK_NEW_IMAGE, eventDetail);\n\n        this._updateToDisplayImageCPU(image);\n\n        // Todo: trigger an event to allow applications to hook into END of loading state\n        // Currently we use loadHandlerManagers for this\n\n        // Trigger the image to be drawn on the next animation frame\n        this.render();\n\n        // Update the viewport's currentImageIdIndex to reflect the newly\n        // rendered image\n        this.currentImageIdIndex = imageIdIndex;\n        resolve(imageId);\n      }\n\n      function errorCallback(\n        error: Error,\n        imageIdIndex: number,\n        imageId: string\n      ) {\n        const eventDetail = {\n          error,\n          imageIdIndex,\n          imageId,\n        };\n\n        if (!this.suppressEvents) {\n          triggerEvent(eventTarget, Events.IMAGE_LOAD_ERROR, eventDetail);\n        }\n\n        reject(error);\n      }\n\n      function sendRequest(imageId, imageIdIndex, options) {\n        return loadAndCacheImage(imageId, options).then(\n          (image) => {\n            successCallback.call(this, image, imageIdIndex, imageId);\n          },\n          (error) => {\n            errorCallback.call(this, error, imageIdIndex, imageId);\n          }\n        );\n      }\n\n      const priority = -5;\n      const requestType = RequestType.Interaction;\n      const additionalDetails = { imageId };\n      const options = {\n        preScale: {\n          enabled: true,\n        },\n        useRGBA: true,\n      };\n\n      const eventDetail: EventTypes.PreStackNewImageEventDetail = {\n        imageId,\n        imageIdIndex,\n        viewportId: this.id,\n        renderingEngineId: this.renderingEngineId,\n      };\n      triggerEvent(this.element, Events.PRE_STACK_NEW_IMAGE, eventDetail);\n\n      imageLoadPoolManager.addRequest(\n        sendRequest.bind(this, imageId, imageIdIndex, options),\n        requestType,\n        additionalDetails,\n        priority\n      );\n    });\n  }\n\n  private _loadAndDisplayImageGPU(imageId: string, imageIdIndex: number) {\n    return new Promise((resolve, reject) => {\n      // 1. Load the image using the Image Loader\n      function successCallback(image, imageIdIndex, imageId) {\n        // Todo: trigger an event to allow applications to hook into END of loading state\n        // Currently we use loadHandlerManagers for this\n        // Perform this check after the image has finished loading\n        // in case the user has already scrolled away to another image.\n        // In that case, do not render this image.\n        if (this.currentImageIdIndex !== imageIdIndex) {\n          return;\n        }\n\n        // If Photometric Interpretation is not the same for the next image we are trying to load\n        // invalidate the stack to recreate the VTK imageData\n        const csImgFrame = this.csImage?.imageFrame;\n        const imgFrame = image?.imageFrame;\n\n        // if a volume is decached into images then the imageFrame will be undefined\n        if (\n          csImgFrame?.photometricInterpretation !==\n            imgFrame?.photometricInterpretation ||\n          this.csImage?.photometricInterpretation !==\n            image?.photometricInterpretation\n        ) {\n          this.stackInvalidated = true;\n        }\n\n        this._setCSImage(image);\n\n        const eventDetail: EventTypes.StackNewImageEventDetail = {\n          image,\n          imageId,\n          imageIdIndex,\n          viewportId: this.id,\n          renderingEngineId: this.renderingEngineId,\n        };\n\n        triggerEvent(this.element, Events.STACK_NEW_IMAGE, eventDetail);\n        this._updateActorToDisplayImageId(image);\n\n        // Trigger the image to be drawn on the next animation frame\n        this.render();\n\n        // Update the viewport's currentImageIdIndex to reflect the newly\n        // rendered image\n        this.currentImageIdIndex = imageIdIndex;\n        resolve(imageId);\n      }\n\n      function errorCallback(error, imageIdIndex, imageId) {\n        const eventDetail = {\n          error,\n          imageIdIndex,\n          imageId,\n        };\n\n        triggerEvent(eventTarget, Events.IMAGE_LOAD_ERROR, eventDetail);\n        reject(error);\n      }\n\n      function sendRequest(imageId, imageIdIndex, options) {\n        return loadAndCacheImage(imageId, options).then(\n          (image) => {\n            successCallback.call(this, image, imageIdIndex, imageId);\n          },\n          (error) => {\n            errorCallback.call(this, error, imageIdIndex, imageId);\n          }\n        );\n      }\n\n      /**\n       * If use16bittexture is specified, the CSWIL will automatically choose the\n       * array type when no targetBuffer is provided. When CSWIL is initialized,\n       * the use16bit should match the settings of cornerstone3D (either preferSizeOverAccuracy\n       * or norm16 textures need to be enabled)\n       *\n       * If use16bittexture is not specified, we force the Float32Array for now\n       */\n      const priority = -5;\n      const requestType = RequestType.Interaction;\n      const additionalDetails = { imageId };\n      const options = {\n        targetBuffer: {\n          type: this.useNativeDataType ? undefined : 'Float32Array',\n        },\n        preScale: {\n          enabled: true,\n        },\n        useRGBA: false,\n      };\n\n      const eventDetail: EventTypes.PreStackNewImageEventDetail = {\n        imageId,\n        imageIdIndex,\n        viewportId: this.id,\n        renderingEngineId: this.renderingEngineId,\n      };\n      triggerEvent(this.element, Events.PRE_STACK_NEW_IMAGE, eventDetail);\n\n      imageLoadPoolManager.addRequest(\n        sendRequest.bind(this, imageId, imageIdIndex, options),\n        requestType,\n        additionalDetails,\n        priority\n      );\n    });\n  }\n\n  /**\n   * Renders the given Cornerstone image object in the viewport.\n   * This method is intended to be used by utilities to render\n   * an individual image, rather than by applications that want to display\n   * a complete image stack. If you want to load and display a complete\n   * image stack, use the setStack method instead of this one.\n   *\n   * The rendered image will appear in the viewport's element.\n   * Use this method if you have other means of loading and the\n   * cornerstone image object is already available.\n   *\n   * If you don't understand the difference between this method and\n   * setStack, you probably want to use setStack.\n   *\n   * @param image - The Cornerstone image object to render.\n   */\n  public renderImageObject = (image) => {\n    this._setCSImage(image);\n\n    const renderFn = this.useCPURendering\n      ? this._updateToDisplayImageCPU\n      : this._updateActorToDisplayImageId;\n\n    renderFn.call(this, image);\n  };\n\n  private _setCSImage = (image) => {\n    image.isPreScaled = image.preScale?.scaled;\n    this.csImage = image;\n  };\n\n  private _updateToDisplayImageCPU(image: IImage) {\n    const metadata = this._getImageDataMetadata(image) as ImageDataMetaData;\n\n    const viewport = getDefaultViewport(\n      this.canvas,\n      image,\n      this.modality,\n      this._cpuFallbackEnabledElement.viewport.colormap\n    );\n\n    const { windowCenter, windowWidth } = viewport.voi;\n    this.voiRange = windowLevelUtil.toLowHighRange(windowWidth, windowCenter);\n\n    this._cpuFallbackEnabledElement.image = image;\n    this._cpuFallbackEnabledElement.metadata = {\n      ...metadata,\n    };\n    this.cpuImagePixelData = image.getPixelData();\n\n    const viewportSettingToUse = Object.assign(\n      {},\n      viewport,\n      this._cpuFallbackEnabledElement.viewport\n    );\n\n    // Important: this.stackInvalidated is different than cpuRenderingInvalidated. The\n    // former is being used to maintain the previous state of the viewport\n    // in the same stack, the latter is used to trigger drawImageSync\n    this._cpuFallbackEnabledElement.viewport = this.stackInvalidated\n      ? viewport\n      : viewportSettingToUse;\n\n    // used the previous state of the viewport, then stackInvalidated is set to false\n    this.stackInvalidated = false;\n\n    // new viewport is set to the current viewport, then cpuRenderingInvalidated is set to true\n    this.cpuRenderingInvalidated = true;\n\n    this._cpuFallbackEnabledElement.transform = calculateTransform(\n      this._cpuFallbackEnabledElement\n    );\n  }\n\n  /**\n   * It updates the volume actor with the retrieved cornerstone image.\n   * It first checks if the new image has the same dimensions, spacings, and\n   * dimensions of the previous one: 1) If yes, it updates the pixel data 2) if not,\n   * it creates a whole new volume actor for the image.\n   * Note: Camera gets reset for both situations. Therefore, each image renders at\n   * its exact 3D location in the space, and both image and camera moves while scrolling.\n   *\n   * @param image - Cornerstone image\n   * @returns\n   */\n  private _updateActorToDisplayImageId(image) {\n    // This function should do the following:\n    // - Get the existing actor's vtkImageData that is being used to render the current image and check if we can reuse the vtkImageData that is in place (i.e. do the image dimensions and data type match?)\n    // - If we can reuse it, replace the scalar data under the hood\n    // - If we cannot reuse it, create a new actor, remove the old one, and reset the camera\n\n    // 2. Check if we can reuse the existing vtkImageData object, if one is present.\n    const sameImageData = this._checkVTKImageDataMatchesCornerstoneImage(\n      image,\n      this._imageData\n    );\n\n    const activeCamera = this.getRenderer().getActiveCamera();\n\n    // Cache camera props so we can trigger one camera changed event after\n    // The full transition.\n    const previousCameraProps = _cloneDeep(this.getCamera());\n    if (sameImageData && !this.stackInvalidated) {\n      // 3a. If we can reuse it, replace the scalar data under the hood\n      this._updateVTKImageDataFromCornerstoneImage(image);\n\n      // Since the 3D location of the imageData is changing as we scroll, we need\n      // to modify the camera position to render this properly. However, resetting\n      // causes problem related to zoom and pan tools: upon rendering of a new slice\n      // the pan and zoom will get reset. To solve this, 1) we store the camera\n      // properties related to pan and zoom 2) reset the camera to correctly place\n      // it in the space 3) restore the pan, zoom props.\n      const cameraProps = this.getCamera();\n\n      const panCache = vec3.subtract(\n        vec3.create(),\n        this.cameraFocalPointOnRender,\n        cameraProps.focalPoint\n      );\n\n      // Reset the camera to point to the new slice location, reset camera doesn't\n      // modify the direction of projection and viewUp\n      this.resetCameraNoEvent();\n\n      // set the flip and view up back to the previous value since the restore camera props\n      // rely on the correct flip value\n      this.setCameraNoEvent({\n        flipHorizontal: previousCameraProps.flipHorizontal,\n        flipVertical: previousCameraProps.flipVertical,\n        viewUp: previousCameraProps.viewUp,\n      });\n\n      const { focalPoint } = this.getCamera();\n      this.cameraFocalPointOnRender = focalPoint;\n\n      // This is necessary to initialize the clipping range and it is not related\n      // to our custom slabThickness.\n      // @ts-ignore: vtkjs incorrect typing\n      activeCamera.setFreezeFocalPoint(true);\n\n      // We shouldn't restore the focalPoint, position and parallelScale after reset\n      // if it is the first render or we have completely re-created the vtkImageData\n      this._restoreCameraProps(\n        cameraProps,\n        previousCameraProps,\n        panCache as Point3\n      );\n\n      this._setPropertiesFromCache();\n\n      return;\n    }\n\n    const {\n      origin,\n      direction,\n      dimensions,\n      spacing,\n      numComps,\n      imagePixelModule,\n    } = this._getImageDataMetadata(image);\n\n    // 3b. If we cannot reuse the vtkImageData object (either the first render\n    // or the size has changed), create a new one\n    this._createVTKImageData({\n      origin,\n      direction,\n      dimensions,\n      spacing,\n      numComps,\n      pixelArray: image.getPixelData(),\n    });\n\n    // Set the scalar data of the vtkImageData object from the Cornerstone\n    // Image's pixel data\n    this._updateVTKImageDataFromCornerstoneImage(image);\n\n    // Create a VTK Image Slice actor to display the vtkImageData object\n    const actor = this.createActorMapper(this._imageData);\n    const actors = [];\n    actors.push({ uid: this.id, actor });\n    this.setActors(actors);\n    // Adjusting the camera based on slice axis. this is required if stack\n    // contains various image orientations (axial ct, sagittal xray)\n    const { viewPlaneNormal, viewUp } = this._getCameraOrientation(direction);\n\n    this.setCameraNoEvent({ viewUp, viewPlaneNormal });\n\n    // Setting this makes the following comment about resetCameraNoEvent not modifying viewUp true.\n    this.initialViewUp = viewUp;\n\n    // Reset the camera to point to the new slice location, reset camera doesn't\n    // modify the direction of projection and viewUp\n    this.resetCameraNoEvent();\n\n    this.triggerCameraEvent(this.getCamera(), previousCameraProps);\n\n    // This is necessary to initialize the clipping range and it is not related\n    // to our custom slabThickness.\n    // @ts-ignore: vtkjs incorrect typing\n    activeCamera.setFreezeFocalPoint(true);\n\n    const monochrome1 =\n      imagePixelModule.photometricInterpretation === 'MONOCHROME1';\n\n    // invalidate the stack so that we can set the voi range\n    this.stackInvalidated = true;\n\n    this.setVOI(this._getInitialVOIRange(image), {\n      forceRecreateLUTFunction: !!monochrome1,\n    });\n\n    // should carry over the invert color from the previous image if has been applied\n    this.setInvertColor(this.invert || !!monochrome1);\n\n    // Saving position of camera on render, to cache the panning\n    this.cameraFocalPointOnRender = this.getCamera().focalPoint;\n    this.stackInvalidated = false;\n\n    if (this._publishCalibratedEvent) {\n      this.triggerCalibrationEvent();\n    }\n  }\n\n  private _getInitialVOIRange(image: IImage) {\n    if (this.voiRange && this.voiUpdatedWithSetProperties) {\n      return this.voiRange;\n    }\n    const { windowCenter, windowWidth } = image;\n\n    let voiRange = this._getVOIRangeFromWindowLevel(windowWidth, windowCenter);\n\n    // Get the range for the PT since if it is prescaled\n    // we set a default range of 0-5\n    voiRange = this._getPTPreScaledRange() || voiRange;\n\n    return voiRange;\n  }\n\n  private _getPTPreScaledRange() {\n    if (!this._isCurrentImagePTPrescaled()) {\n      return undefined;\n    }\n\n    return this._getDefaultPTPrescaledVOIRange();\n  }\n\n  private _isCurrentImagePTPrescaled() {\n    if (this.modality !== 'PT' || !this.csImage.isPreScaled) {\n      return false;\n    }\n\n    if (!this.csImage.preScale?.scalingParameters?.suvbw) {\n      return false;\n    }\n\n    return true;\n  }\n\n  private _getDefaultPTPrescaledVOIRange() {\n    return { lower: 0, upper: 5 };\n  }\n\n  private _getVOIRangeFromWindowLevel(\n    windowWidth: number | number[],\n    windowCenter: number | number[]\n  ): { lower: number; upper: number } | undefined {\n    let center, width;\n\n    if (typeof windowCenter === 'number' && typeof windowWidth === 'number') {\n      center = windowCenter;\n      width = windowWidth;\n    } else if (Array.isArray(windowCenter) && Array.isArray(windowWidth)) {\n      center = windowCenter[0];\n      width = windowWidth[0];\n    }\n\n    // If center and width are defined, convert them to low-high range\n    if (center !== undefined && width !== undefined) {\n      return windowLevelUtil.toLowHighRange(width, center);\n    }\n  }\n\n  /**\n   * Loads the image based on the provided imageIdIndex\n   * @param imageIdIndex - number represents imageId index\n   */\n  private async _setImageIdIndex(imageIdIndex: number): Promise<string> {\n    if (imageIdIndex >= this.imageIds.length) {\n      throw new Error(\n        `ImageIdIndex provided ${imageIdIndex} is invalid, the stack only has ${this.imageIds.length} elements`\n      );\n    }\n\n    // Update the state of the viewport to the new imageIdIndex;\n    this.currentImageIdIndex = imageIdIndex;\n    this.hasPixelSpacing = true;\n\n    // Todo: trigger an event to allow applications to hook into START of loading state\n    // Currently we use loadHandlerManagers for this\n    const imageId = await this._loadAndDisplayImage(\n      this.imageIds[imageIdIndex],\n      imageIdIndex\n    );\n\n    return imageId;\n  }\n\n  private resetCameraCPU(resetPan, resetZoom) {\n    const { image } = this._cpuFallbackEnabledElement;\n\n    if (!image) {\n      return;\n    }\n\n    resetCamera(this._cpuFallbackEnabledElement, resetPan, resetZoom);\n\n    const { scale } = this._cpuFallbackEnabledElement.viewport;\n\n    // canvas center is the focal point\n    const { clientWidth, clientHeight } = this.element;\n    const center: Point2 = [clientWidth / 2, clientHeight / 2];\n\n    const centerWorld = this.canvasToWorldCPU(center);\n\n    this.setCameraCPU({\n      focalPoint: centerWorld,\n      scale,\n    });\n  }\n\n  private resetCameraGPU(resetPan, resetZoom): boolean {\n    // Todo: we need to make the rotation a camera properties so that\n    // we can reset it there, right now it is not possible to reset the rotation\n    // without this\n\n    // We do not know the ordering of various flips and rotations that have been applied,\n    // so the rotation and flip must be reset together.\n    this.setCamera({\n      flipHorizontal: false,\n      flipVertical: false,\n      viewUp: this.initialViewUp,\n    });\n\n    // For stack Viewport we since we have only one slice\n    // it should be enough to reset the camera to the center of the image\n    const resetToCenter = true;\n    return super.resetCamera(resetPan, resetZoom, resetToCenter);\n  }\n\n  /**\n   * It scrolls the stack of imageIds by the delta amount provided. If the debounce\n   * flag is set, it will only scroll the stack if the delta is greater than the\n   * debounceThreshold which is 40 milliseconds by default.\n   * @param delta - number of indices to scroll, it can be positive or negative\n   * @param debounce - whether to debounce the scroll event\n   * @param loop - whether to loop the stack\n   */\n  public scroll(delta: number, debounce = true, loop = false): void {\n    const imageIds = this.imageIds;\n\n    const currentTargetImageIdIndex = this.targetImageIdIndex;\n    const numberOfFrames = imageIds.length;\n\n    let newTargetImageIdIndex = currentTargetImageIdIndex + delta;\n    newTargetImageIdIndex = Math.max(0, newTargetImageIdIndex);\n\n    if (loop) {\n      newTargetImageIdIndex = newTargetImageIdIndex % numberOfFrames;\n    } else {\n      newTargetImageIdIndex = Math.min(\n        numberOfFrames - 1,\n        newTargetImageIdIndex\n      );\n    }\n\n    this.targetImageIdIndex = newTargetImageIdIndex;\n\n    const targetImageId = imageIds[newTargetImageIdIndex];\n\n    const imageAlreadyLoaded = cache.isImageIdCached(targetImageId);\n\n    // If image is already cached we want to scroll right away; however, if it is\n    // not cached, we can debounce the scroll event to avoid firing multiple scroll\n    // events for the images that might happen to be passing by (as a result of infinite\n    // scrolling).\n    if (imageAlreadyLoaded || !debounce) {\n      this.setImageIdIndex(newTargetImageIdIndex);\n    } else {\n      clearTimeout(this.debouncedTimeout);\n      this.debouncedTimeout = window.setTimeout(() => {\n        this.setImageIdIndex(newTargetImageIdIndex);\n      }, 40);\n    }\n\n    const eventData: StackViewportScrollEventDetail = {\n      newImageIdIndex: newTargetImageIdIndex,\n      imageId: targetImageId,\n      direction: delta,\n    };\n\n    if (newTargetImageIdIndex !== currentTargetImageIdIndex) {\n      triggerEvent(this.element, Events.STACK_VIEWPORT_SCROLL, eventData);\n    }\n  }\n\n  /**\n   * Loads the image based on the provided imageIdIndex. It is an Async function which\n   * returns a promise that resolves to the imageId.\n   *\n   * @param imageIdIndex - number represents imageId index in the list of\n   * provided imageIds in setStack\n   */\n  public async setImageIdIndex(imageIdIndex: number): Promise<string> {\n    this._throwIfDestroyed();\n\n    // If we are already on this imageId index, stop here\n    if (this.currentImageIdIndex === imageIdIndex) {\n      return this.getCurrentImageId();\n    }\n\n    // Otherwise, get the imageId and attempt to display it\n    const imageId = this._setImageIdIndex(imageIdIndex);\n\n    return imageId;\n  }\n\n  /**\n   * Calibrates the image with new metadata that has been added for imageId. To calibrate\n   * a viewport, you should add your calibration data manually to\n   * calibratedPixelSpacingMetadataProvider and call viewport.calibrateSpacing\n   * for it get applied.\n   *\n   * @param imageId - imageId to be calibrated\n   */\n  public calibrateSpacing(imageId: string): void {\n    const imageIdIndex = this.getImageIds().indexOf(imageId);\n    this.stackInvalidated = true;\n    this._loadAndDisplayImage(imageId, imageIdIndex);\n  }\n\n  /**\n   * Restores the camera props such zooming and panning after an image is\n   * changed, if needed (after scroll)\n   *\n   * @param parallelScale - camera parallel scale\n   */\n  private _restoreCameraProps(\n    { parallelScale: prevScale }: ICamera,\n    previousCamera: ICamera,\n    panCache: Point3\n  ): void {\n    const renderer = this.getRenderer();\n\n    // get the focalPoint and position after the reset\n    const { position, focalPoint } = this.getCamera();\n\n    const newPosition = vec3.subtract(vec3.create(), position, panCache);\n    const newFocal = vec3.subtract(vec3.create(), focalPoint, panCache);\n\n    // Restoring previous state x,y and scale, keeping the new z\n    // we need to break the flip operations since they also work on the\n    // camera position and focal point\n    this.setCameraNoEvent({\n      parallelScale: prevScale,\n      position: newPosition as Point3,\n      focalPoint: newFocal as Point3,\n    });\n\n    const camera = this.getCamera();\n\n    this.triggerCameraEvent(camera, previousCamera);\n\n    // Invoking render\n    const RESET_CAMERA_EVENT = {\n      type: 'ResetCameraEvent',\n      renderer,\n    };\n\n    renderer.invokeEvent(RESET_CAMERA_EVENT);\n  }\n\n  private triggerCameraEvent(camera: ICamera, previousCamera: ICamera) {\n    // Finally emit event for the full camera change cause during load image.\n    const eventDetail: EventTypes.CameraModifiedEventDetail = {\n      previousCamera,\n      camera,\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n    };\n\n    if (!this.suppressEvents) {\n      // For crosshairs to adapt to new viewport size\n      triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n    }\n  }\n\n  private triggerCalibrationEvent() {\n    // Update the indexToWorld and WorldToIndex for viewport\n    const { imageData } = this.getImageData();\n    // Finally emit event for the full camera change cause during load image.\n    const eventDetail: EventTypes.ImageSpacingCalibratedEventDetail = {\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n      imageId: this.getCurrentImageId(),\n      // Todo: why do we need to pass imageData? isn't' indexToWorld and worldToIndex enough?\n      imageData: imageData as vtkImageData,\n      worldToIndex: imageData.getWorldToIndex() as mat4,\n      ...this._calibrationEvent,\n    };\n\n    if (!this.suppressEvents) {\n      // Let the tools know the image spacing has been calibrated\n      triggerEvent(this.element, Events.IMAGE_SPACING_CALIBRATED, eventDetail);\n    }\n\n    this._publishCalibratedEvent = false;\n  }\n\n  private canvasToWorldCPU = (canvasPos: Point2): Point3 => {\n    if (!this._cpuFallbackEnabledElement.image) {\n      return;\n    }\n    // compute the pixel coordinate in the image\n    const [px, py] = canvasToPixel(this._cpuFallbackEnabledElement, canvasPos);\n\n    // convert pixel coordinate to world coordinate\n    const { origin, spacing, direction } = this.getImageData();\n\n    const worldPos = vec3.fromValues(0, 0, 0);\n\n    // Calculate size of spacing vector in normal direction\n    const iVector = direction.slice(0, 3) as Point3;\n    const jVector = direction.slice(3, 6) as Point3;\n\n    // Calculate the world coordinate of the pixel\n    vec3.scaleAndAdd(worldPos, origin, iVector, px * spacing[0]);\n    vec3.scaleAndAdd(worldPos, worldPos, jVector, py * spacing[1]);\n\n    return [worldPos[0], worldPos[1], worldPos[2]] as Point3;\n  };\n\n  private worldToCanvasCPU = (worldPos: Point3): Point2 => {\n    // world to pixel\n    const { spacing, direction, origin } = this.getImageData();\n\n    const iVector = direction.slice(0, 3) as Point3;\n    const jVector = direction.slice(3, 6) as Point3;\n\n    const diff = vec3.subtract(vec3.create(), worldPos, origin);\n\n    const worldPoint: Point2 = [\n      vec3.dot(diff, iVector) / spacing[0],\n      vec3.dot(diff, jVector) / spacing[1],\n    ];\n\n    // pixel to canvas\n    const canvasPoint = pixelToCanvas(\n      this._cpuFallbackEnabledElement,\n      worldPoint\n    );\n    return canvasPoint;\n  };\n\n  private canvasToWorldGPU = (canvasPos: Point2): Point3 => {\n    const renderer = this.getRenderer();\n\n    // Temporary setting the clipping range to the distance and distance + 0.1\n    // in order to calculate the transformations correctly.\n    // This is similar to the vtkSlabCamera isPerformingCoordinateTransformations\n    // You can read more about it here there.\n    const vtkCamera = this.getVtkActiveCamera();\n    const crange = vtkCamera.getClippingRange();\n    const distance = vtkCamera.getDistance();\n\n    vtkCamera.setClippingRange(distance, distance + 0.1);\n\n    const offscreenMultiRenderWindow =\n      this.getRenderingEngine().offscreenMultiRenderWindow;\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const size = openGLRenderWindow.getSize();\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const canvasPosWithDPR = [\n      canvasPos[0] * devicePixelRatio,\n      canvasPos[1] * devicePixelRatio,\n    ];\n    const displayCoord = [\n      canvasPosWithDPR[0] + this.sx,\n      canvasPosWithDPR[1] + this.sy,\n    ];\n\n    // The y axis display coordinates are inverted with respect to canvas coords\n    displayCoord[1] = size[1] - displayCoord[1];\n\n    const worldCoord = openGLRenderWindow.displayToWorld(\n      displayCoord[0],\n      displayCoord[1],\n      0,\n      renderer\n    );\n\n    // set clipping range back to original to be able\n    vtkCamera.setClippingRange(crange[0], crange[1]);\n\n    return [worldCoord[0], worldCoord[1], worldCoord[2]];\n  };\n\n  private worldToCanvasGPU = (worldPos: Point3): Point2 => {\n    const renderer = this.getRenderer();\n\n    // Temporary setting the clipping range to the distance and distance + 0.1\n    // in order to calculate the transformations correctly.\n    // This is similar to the vtkSlabCamera isPerformingCoordinateTransformations\n    // You can read more about it here there.\n    const vtkCamera = this.getVtkActiveCamera();\n    const crange = vtkCamera.getClippingRange();\n    const distance = vtkCamera.getDistance();\n\n    vtkCamera.setClippingRange(distance, distance + 0.1);\n\n    const offscreenMultiRenderWindow =\n      this.getRenderingEngine().offscreenMultiRenderWindow;\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const size = openGLRenderWindow.getSize();\n    const displayCoord = openGLRenderWindow.worldToDisplay(\n      ...worldPos,\n      renderer\n    );\n\n    // The y axis display coordinates are inverted with respect to canvas coords\n    displayCoord[1] = size[1] - displayCoord[1];\n\n    const canvasCoord = <Point2>[\n      displayCoord[0] - this.sx,\n      displayCoord[1] - this.sy,\n    ];\n\n    // set clipping range back to original to be able\n    vtkCamera.setClippingRange(crange[0], crange[1]);\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const canvasCoordWithDPR = <Point2>[\n      canvasCoord[0] / devicePixelRatio,\n      canvasCoord[1] / devicePixelRatio,\n    ];\n\n    return canvasCoordWithDPR;\n  };\n\n  private _getVOIRangeForCurrentImage() {\n    const { windowCenter, windowWidth } = this.csImage;\n\n    return this._getVOIRangeFromWindowLevel(windowWidth, windowCenter);\n  }\n\n  private _getValidVOILUTFunction(voiLUTFunction: any) {\n    if (Object.values(VOILUTFunctionType).indexOf(voiLUTFunction) === -1) {\n      voiLUTFunction = VOILUTFunctionType.LINEAR;\n    }\n    return voiLUTFunction;\n  }\n\n  /**\n   * Returns the index of the imageId being renderer\n   *\n   * @returns currently shown imageId index\n   */\n  public getCurrentImageIdIndex = (): number => {\n    return this.currentImageIdIndex;\n  };\n\n  /**\n   *\n   * Returns the imageIdIndex that is targeted to be loaded, in case of debounced\n   * loading (with scroll), the targetImageIdIndex is the latest imageId\n   * index that is requested to be loaded but debounced.\n   */\n  public getTargetImageIdIndex = (): number => {\n    return this.targetImageIdIndex;\n  };\n\n  /**\n   * Returns the list of image Ids for the current viewport\n   * @returns list of strings for image Ids\n   */\n  public getImageIds = (): Array<string> => {\n    return this.imageIds;\n  };\n\n  /**\n   * Returns the currently rendered imageId\n   * @returns string for imageId\n   */\n  public getCurrentImageId = (): string => {\n    return this.imageIds[this.currentImageIdIndex];\n  };\n\n  /**\n   * Returns true if the viewport contains the given imageId\n   * @param imageId - imageId\n   * @returns boolean if imageId is in viewport\n   */\n  public hasImageId = (imageId: string): boolean => {\n    return this.imageIds.includes(imageId);\n  };\n\n  /**\n   * Returns true if the viewport contains the given imageURI (no data loader scheme)\n   * @param imageURI - imageURI\n   * @returns boolean if imageURI is in viewport\n   */\n  public hasImageURI = (imageURI: string): boolean => {\n    const imageIds = this.imageIds;\n    for (let i = 0; i < imageIds.length; i++) {\n      if (imageIdToURI(imageIds[i]) === imageURI) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  private getCPUFallbackError(method: string): Error {\n    return new Error(\n      `method ${method} cannot be used during CPU Fallback mode`\n    );\n  }\n\n  private fillWithBackgroundColor() {\n    const renderingEngine = this.getRenderingEngine();\n\n    if (renderingEngine) {\n      renderingEngine.fillCanvasWithBackgroundColor(\n        this.canvas,\n        this.options.background\n      );\n    }\n  }\n\n  public customRenderViewportToCanvas = () => {\n    if (!this.useCPURendering) {\n      throw new Error(\n        'Custom cpu rendering pipeline should only be hit in CPU rendering mode'\n      );\n    }\n\n    if (this._cpuFallbackEnabledElement.image) {\n      drawImageSync(\n        this._cpuFallbackEnabledElement,\n        this.cpuRenderingInvalidated\n      );\n      // reset flags\n      this.cpuRenderingInvalidated = false;\n    } else {\n      this.fillWithBackgroundColor();\n    }\n\n    return {\n      canvas: this.canvas,\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n      viewportStatus: this.viewportStatus,\n    };\n  };\n\n  private unsetColormapCPU() {\n    delete this._cpuFallbackEnabledElement.viewport.colormap;\n    this._cpuFallbackEnabledElement.renderingTools = {};\n\n    this.cpuRenderingInvalidated = true;\n\n    this.fillWithBackgroundColor();\n\n    this.render();\n  }\n\n  private setColormapCPU(colormapData: CPUFallbackColormapData) {\n    const colormap = getColormap(colormapData.name, colormapData);\n\n    this._cpuFallbackEnabledElement.viewport.colormap = colormap;\n    this._cpuFallbackEnabledElement.renderingTools = {};\n\n    this.fillWithBackgroundColor();\n    this.cpuRenderingInvalidated = true;\n\n    this.render();\n  }\n\n  private setColormapGPU(colormap: ColormapRegistration) {\n    const ActorEntry = this.getDefaultActor();\n    const actor = ActorEntry.actor as ImageActor;\n    const actorProp = actor.getProperty();\n    const rgbTransferFunction = actorProp.getRGBTransferFunction();\n\n    if (!rgbTransferFunction) {\n      const cfun = vtkColorTransferFunction.newInstance();\n      const voiRange = this._getVOIRangeForCurrentImage();\n      cfun.applyColorMap(colormap);\n      cfun.setMappingRange(voiRange.lower, voiRange.upper);\n      actorProp.setRGBTransferFunction(0, cfun);\n    } else {\n      rgbTransferFunction.applyColorMap(colormap);\n      actorProp.setRGBTransferFunction(0, rgbTransferFunction);\n    }\n\n    this.render();\n  }\n\n  private unsetColormapGPU() {\n    // TODO -> vtk has full colormaps which are piecewise and frankly better?\n    // Do we really want a pre defined 256 color map just for the sake of harmonization?\n    throw new Error('unsetColormapGPU not implemented.');\n  }\n\n  // create default values for imagePlaneModule if values are undefined\n  private _getImagePlaneModule(imageId: string): ImagePlaneModule {\n    const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n    const calibratedPixelSpacing = metaData.get(\n      'calibratedPixelSpacing',\n      imageId\n    );\n\n    this.calibration ||= imagePlaneModule.calibration;\n\n    const newImagePlaneModule: ImagePlaneModule = {\n      ...imagePlaneModule,\n    };\n\n    if (!newImagePlaneModule.columnPixelSpacing) {\n      newImagePlaneModule.columnPixelSpacing = 1;\n      this.hasPixelSpacing = this.calibration?.scale > 0;\n    }\n\n    if (!newImagePlaneModule.rowPixelSpacing) {\n      newImagePlaneModule.rowPixelSpacing = 1;\n      this.hasPixelSpacing = this.calibration?.scale > 0;\n    }\n\n    if (!newImagePlaneModule.columnCosines) {\n      newImagePlaneModule.columnCosines = [0, 1, 0];\n    }\n\n    if (!newImagePlaneModule.rowCosines) {\n      newImagePlaneModule.rowCosines = [1, 0, 0];\n    }\n\n    if (!newImagePlaneModule.imagePositionPatient) {\n      newImagePlaneModule.imagePositionPatient = [0, 0, 0];\n    }\n\n    if (!newImagePlaneModule.imageOrientationPatient) {\n      newImagePlaneModule.imageOrientationPatient = new Float32Array([\n        1, 0, 0, 0, 1, 0,\n      ]);\n    }\n\n    return newImagePlaneModule;\n  }\n\n  private renderingPipelineFunctions = {\n    getImageData: {\n      cpu: this.getImageDataCPU,\n      gpu: this.getImageDataGPU,\n    },\n    setColormap: {\n      cpu: this.setColormapCPU,\n      gpu: this.setColormapGPU,\n    },\n    getCamera: {\n      cpu: this.getCameraCPU,\n      gpu: super.getCamera,\n    },\n    setCamera: {\n      cpu: this.setCameraCPU,\n      gpu: super.setCamera,\n    },\n    setVOI: {\n      cpu: this.setVOICPU,\n      gpu: this.setVOIGPU,\n    },\n    getRotation: {\n      cpu: this.getRotationCPU,\n      gpu: this.getRotationGPU,\n    },\n    setInterpolationType: {\n      cpu: this.setInterpolationTypeCPU,\n      gpu: this.setInterpolationTypeGPU,\n    },\n    setInvertColor: {\n      cpu: this.setInvertColorCPU,\n      gpu: this.setInvertColorGPU,\n    },\n    resetCamera: {\n      cpu: (resetPan = true, resetZoom = true): boolean => {\n        this.resetCameraCPU(resetPan, resetZoom);\n        return true;\n      },\n      gpu: (resetPan = true, resetZoom = true): boolean => {\n        this.resetCameraGPU(resetPan, resetZoom);\n        return true;\n      },\n    },\n    canvasToWorld: {\n      cpu: this.canvasToWorldCPU,\n      gpu: this.canvasToWorldGPU,\n    },\n    worldToCanvas: {\n      cpu: this.worldToCanvasCPU,\n      gpu: this.worldToCanvasGPU,\n    },\n    getRenderer: {\n      cpu: () => this.getCPUFallbackError('getRenderer'),\n      gpu: super.getRenderer,\n    },\n    getDefaultActor: {\n      cpu: () => this.getCPUFallbackError('getDefaultActor'),\n      gpu: super.getDefaultActor,\n    },\n    getActors: {\n      cpu: () => this.getCPUFallbackError('getActors'),\n      gpu: super.getActors,\n    },\n    getActor: {\n      cpu: () => this.getCPUFallbackError('getActor'),\n      gpu: super.getActor,\n    },\n    setActors: {\n      cpu: () => this.getCPUFallbackError('setActors'),\n      gpu: super.setActors,\n    },\n    addActors: {\n      cpu: () => this.getCPUFallbackError('addActors'),\n      gpu: super.addActors,\n    },\n    addActor: {\n      cpu: () => this.getCPUFallbackError('addActor'),\n      gpu: super.addActor,\n    },\n    removeAllActors: {\n      cpu: () => this.getCPUFallbackError('removeAllActors'),\n      gpu: super.removeAllActors,\n    },\n    unsetColormap: {\n      cpu: this.unsetColormapCPU,\n      gpu: this.unsetColormapGPU,\n    },\n  };\n}\n\nexport default StackViewport;\n","import fitToWindow from './fitToWindow';\nimport getImageSize from './getImageSize';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * This module is responsible for enabling an element to display images with cornerstone\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {HTMLDivElement} canvas The Canvas DOM element within the DOM element enabled for Cornerstone\n * @returns {void}\n */\nfunction setCanvasSize(enabledElement: CPUFallbackEnabledElement) {\n  const { canvas } = enabledElement;\n  const { clientWidth, clientHeight } = canvas;\n\n  // Set the canvas to be same resolution as the client.\n  if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n    canvas.width = clientWidth;\n    canvas.height = clientHeight;\n  }\n}\n\n/**\n * Checks if the image of a given enabled element fitted the window\n * before the resize\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {Boolean} true if it fitted the windows, false otherwise\n */\nfunction wasFitToWindow(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): boolean {\n  const scale = enabledElement.viewport.scale;\n  const imageSize = getImageSize(\n    enabledElement.image,\n    enabledElement.viewport.rotation\n  );\n  const imageWidth = Math.round(imageSize.width * scale);\n  const imageHeight = Math.round(imageSize.height * scale);\n  const x = enabledElement.viewport.translation.x;\n  const y = enabledElement.viewport.translation.y;\n\n  return (\n    (imageWidth === oldCanvasWidth && imageHeight <= oldCanvasHeight) ||\n    (imageWidth <= oldCanvasWidth &&\n      imageHeight === oldCanvasHeight &&\n      x === 0 &&\n      y === 0)\n  );\n}\n\n/**\n * Rescale the image relative to the changed size of the canvas\n *\n * @param {EnabledElement} enabledElement The Cornerstone Enabled Element\n * @param {number} oldCanvasWidth The width of the canvas before the resize\n * @param {number} oldCanvasHeight The height of the canvas before the resize\n * @return {void}\n */\nfunction relativeRescale(\n  enabledElement: CPUFallbackEnabledElement,\n  oldCanvasWidth: number,\n  oldCanvasHeight: number\n): void {\n  const scale = enabledElement.viewport.scale;\n  const canvasWidth = enabledElement.canvas.width;\n  const canvasHeight = enabledElement.canvas.height;\n  const relWidthChange = canvasWidth / oldCanvasWidth;\n  const relHeightChange = canvasHeight / oldCanvasHeight;\n  const relChange = Math.sqrt(relWidthChange * relHeightChange);\n\n  enabledElement.viewport.scale = relChange * scale;\n}\n\n/**\n * Resizes an enabled element and optionally fits the image to window\n *\n * @param {HTMLDivElement} element The DOM element enabled for Cornerstone\n * @param {Boolean} forceFitToWindow true to to force a refit, false to rescale accordingly\n * @returns {void}\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  forceFitToWindow = false\n): void {\n  const oldCanvasWidth = enabledElement.canvas.width;\n  const oldCanvasHeight = enabledElement.canvas.height;\n\n  setCanvasSize(enabledElement);\n\n  if (enabledElement.image === undefined) {\n    return;\n  }\n\n  if (\n    forceFitToWindow ||\n    wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight)\n  ) {\n    // Fit the image to the window again if it fitted before the resize\n    fitToWindow(enabledElement);\n  } else {\n    // Adapt the scale of a zoomed or panned image relative to the size change\n    relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight);\n  }\n}\n","import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Adjusts an image's scale and translation so the image is centered and all pixels\n * in the image are viewable.\n *\n * @param element - The Cornerstone element to update\n */\nexport default function (enabledElement: CPUFallbackEnabledElement): void {\n  const { image } = enabledElement;\n\n  // The new scale is the minimum of the horizontal and vertical scale values\n  enabledElement.viewport.scale = getImageFitScale(\n    enabledElement.canvas,\n    image,\n    enabledElement.viewport.rotation\n  ).scaleFactor;\n\n  enabledElement.viewport.translation.x = 0;\n  enabledElement.viewport.translation.y = 0;\n}\n","import { CPUFallbackViewport, Point2 } from '../../../../types';\n\ntype Shift = {\n  x: number;\n  y: number;\n};\n/**\n * Corrects the shift by accounting for viewport rotation and flips.\n *\n * @param shift - The shift to correct.\n * @param viewportOrientation - Object containing information on the viewport orientation.\n */\nexport default function (\n  shift: Shift,\n  viewportOrientation: CPUFallbackViewport\n): Shift {\n  const { hflip, vflip, rotation } = viewportOrientation;\n\n  // Apply Flips\n  shift.x *= hflip ? -1 : 1;\n  shift.y *= vflip ? -1 : 1;\n\n  // Apply rotations\n  if (rotation !== 0) {\n    const angle = (rotation * Math.PI) / 180;\n\n    const cosA = Math.cos(angle);\n    const sinA = Math.sin(angle);\n\n    const newX = shift.x * cosA - shift.y * sinA;\n    const newY = shift.x * sinA + shift.y * cosA;\n\n    shift.x = newX;\n    shift.y = newY;\n  }\n\n  return shift;\n}\n","import getImageFitScale from './getImageFitScale';\nimport { CPUFallbackEnabledElement } from '../../../../types';\n\n/**\n * Resets the camera to the default position. which would be the center of the image.\n * with no translation, no flipping, no zoom and proper scale.\n */\nexport default function (\n  enabledElement: CPUFallbackEnabledElement,\n  resetPan = true,\n  resetZoom = true\n): void {\n  const { canvas, image, viewport } = enabledElement;\n  const scale = getImageFitScale(canvas, image, 0).scaleFactor;\n\n  viewport.vflip = false;\n  viewport.hflip = false;\n\n  if (resetPan) {\n    viewport.translation.x = 0;\n    viewport.translation.y = 0;\n  }\n\n  if (resetZoom) {\n    viewport.displayedArea.tlhc.x = 1;\n    viewport.displayedArea.tlhc.y = 1;\n    viewport.displayedArea.brhc.x = image.columns;\n    viewport.displayedArea.brhc.y = image.rows;\n\n    viewport.scale = scale;\n  }\n}\n","import { BlendModes, OrientationAxis } from '../enums';\nimport type { ViewportInput } from '../types/IViewport';\nimport BaseVolumeViewport from './BaseVolumeViewport';\n\n/**\n * An object representing a 3-dimensional volume viewport. VolumeViewport3Ds are used to render\n * 3D volumes in their entirety, and not just load a single slice at a time.\n *\n * For setting volumes on viewports you need to use {@link addVolumesToViewports}\n * which will add volumes to the specified viewports.\n */\nclass VolumeViewport3D extends BaseVolumeViewport {\n  constructor(props: ViewportInput) {\n    super(props);\n\n    const { parallelProjection, orientation } = this.options;\n\n    const activeCamera = this.getVtkActiveCamera();\n\n    if (parallelProjection != null) {\n      activeCamera.setParallelProjection(parallelProjection);\n    }\n\n    if (orientation && orientation !== OrientationAxis.ACQUISITION) {\n      this.applyViewOrientation(orientation);\n    }\n  }\n\n  public resetCamera(\n    resetPan = true,\n    resetZoom = true,\n    resetToCenter = true\n  ): boolean {\n    super.resetCamera(resetPan, resetZoom, resetToCenter);\n    this.resetVolumeViewportClippingRange();\n    return;\n  }\n\n  getRotation = (): number => 0;\n\n  getCurrentImageIdIndex = (): number | undefined => {\n    return undefined;\n  };\n\n  getCurrentImageId = (): string => {\n    return null;\n  };\n\n  setSlabThickness(\n    slabThickness: number,\n    filterActorUIDs?: Array<string>\n  ): void {\n    return null;\n  }\n\n  setBlendMode(\n    blendMode: BlendModes,\n    filterActorUIDs?: string[],\n    immediate?: boolean\n  ): void {\n    return null;\n  }\n\n  resetProperties(volumeId?: string): void {\n    return null;\n  }\n}\n\nexport default VolumeViewport3D;\n","// TODO -> Eventually we'll need to register to this list\nimport StackViewport from '../StackViewport';\nimport VolumeViewport from '../VolumeViewport';\nimport ViewportType from '../../enums/ViewportType';\nimport VolumeViewport3D from '../VolumeViewport3D';\n\nconst viewportTypeToViewportClass = {\n  [ViewportType.ORTHOGRAPHIC]: VolumeViewport,\n  [ViewportType.PERSPECTIVE]: VolumeViewport,\n  [ViewportType.STACK]: StackViewport,\n  [ViewportType.VOLUME_3D]: VolumeViewport3D,\n};\n\nexport default viewportTypeToViewportClass;\n","import viewportTypeToViewportClass from './viewportTypeToViewportClass';\n\nexport default function viewportTypeUsesCustomRenderingPipeline(\n  viewportType: string\n) {\n  return viewportTypeToViewportClass[viewportType].useCustomRenderingPipeline;\n}\n","import Events from '../enums/Events';\nimport renderingEngineCache from './renderingEngineCache';\nimport eventTarget from '../eventTarget';\nimport { triggerEvent, uuidv4 } from '../utilities';\nimport { vtkOffscreenMultiRenderWindow } from './vtkClasses';\nimport ViewportType from '../enums/ViewportType';\nimport VolumeViewport from './VolumeViewport';\nimport BaseVolumeViewport from './BaseVolumeViewport';\nimport StackViewport from './StackViewport';\nimport viewportTypeUsesCustomRenderingPipeline from './helpers/viewportTypeUsesCustomRenderingPipeline';\nimport getOrCreateCanvas from './helpers/getOrCreateCanvas';\nimport { getShouldUseCPURendering, isCornerstoneInitialized } from '../init';\nimport type IStackViewport from '../types/IStackViewport';\nimport type IRenderingEngine from '../types/IRenderingEngine';\nimport type IVolumeViewport from '../types/IVolumeViewport';\nimport type * as EventTypes from '../types/EventTypes';\nimport type {\n  ViewportInput,\n  PublicViewportInput,\n  InternalViewportInput,\n  NormalizedViewportInput,\n} from '../types/IViewport';\nimport { OrientationAxis, ViewportStatus } from '../enums';\nimport VolumeViewport3D from './VolumeViewport3D';\n\ntype ViewportDisplayCoords = {\n  sxStartDisplayCoords: number;\n  syStartDisplayCoords: number;\n  sxEndDisplayCoords: number;\n  syEndDisplayCoords: number;\n  sx: number;\n  sy: number;\n  sWidth: number;\n  sHeight: number;\n};\n\n// Rendering engines seem to not like rendering things less than 2 pixels per side\nconst VIEWPORT_MIN_SIZE = 2;\n\n/**\n * A RenderingEngine takes care of the full pipeline of creating viewports and rendering\n * them on a large offscreen canvas and transmitting this data back to the screen. This allows us\n * to leverage the power of vtk.js whilst only using one WebGL context for the processing, and allowing\n * us to share texture memory across on-screen viewports that show the same data.\n *\n * Instantiating a rendering engine:\n * ```js\n * const renderingEngine = new RenderingEngine('pet-ct-rendering-engine');\n * ```\n *\n * There are various ways you can trigger a render on viewports. The simplest is to call `render()`\n * on the rendering engine; however, it will trigger a render on all viewports. A more efficient\n * way to do this is to call `renderViewports([viewportId])` on the rendering engine to\n * trigger a render on a specific viewport(s). Each viewport also has a `.render` method which can be used to trigger a render on that\n * viewport.\n *\n * Rendering engine uses `detect-gpu` external library to detect if GPU is available and\n * it has minimum requirement to be able to render a volume with vtk.js. If GPU is not available\n * RenderingEngine will throw an error if you try to render a volume; however, for StackViewports\n * it is capable of falling back to CPU rendering for Stack images.\n *\n * By default RenderingEngine will use vtk.js enabled pipeline for rendering viewports,\n * however, if a custom rendering pipeline is specified by a custom viewport, it will be used instead.\n * We use this custom pipeline to render a StackViewport on CPU using Cornerstone-legacy cpu rendering pipeline.\n *\n * @public\n */\nclass RenderingEngine implements IRenderingEngine {\n  /** Unique identifier for renderingEngine */\n  readonly id: string;\n  /** A flag which tells if the renderingEngine has been destroyed */\n  public hasBeenDestroyed: boolean;\n  public offscreenMultiRenderWindow: any;\n  readonly offScreenCanvasContainer: any; // WebGL\n  private _viewports: Map<string, IStackViewport | IVolumeViewport>;\n  private _needsRender: Set<string> = new Set();\n  private _animationFrameSet = false;\n  private _animationFrameHandle: number | null = null;\n  private useCPURendering: boolean;\n\n  /**\n   * @param uid - Unique identifier for RenderingEngine\n   */\n  constructor(id?: string) {\n    this.id = id ? id : uuidv4();\n    this.useCPURendering = getShouldUseCPURendering();\n\n    renderingEngineCache.set(this);\n\n    if (!isCornerstoneInitialized()) {\n      throw new Error(\n        '@cornerstonejs/core is not initialized, run init() first'\n      );\n    }\n\n    if (!this.useCPURendering) {\n      this.offscreenMultiRenderWindow =\n        vtkOffscreenMultiRenderWindow.newInstance();\n      this.offScreenCanvasContainer = document.createElement('div');\n      this.offscreenMultiRenderWindow.setContainer(\n        this.offScreenCanvasContainer\n      );\n    }\n\n    this._viewports = new Map();\n    this.hasBeenDestroyed = false;\n  }\n\n  /**\n   * Enables the requested viewport and add it to the viewports. It will\n   * properly create the Stack viewport or Volume viewport:\n   *\n   * 1) Checks if the viewport is defined already, if yes, remove it first\n   * 2) Checks if the viewport is using a custom rendering pipeline, if no,\n   * it calculates a new offscreen canvas with the new requested viewport\n   * 3) Adds the viewport\n   *\n   *\n   * ```\n   * renderingEngine.enableElement({\n   *  viewportId: viewportId,\n   *  type: ViewportType.ORTHOGRAPHIC,\n   *  element,\n   *  defaultOptions: {\n   *    orientation: Enums.OrientationAxis.AXIAL,\n   *    background: [1, 0, 1],\n   *  },\n   * })\n   * ```\n   *\n   * @fires Events.ELEMENT_ENABLED\n   *\n   * @param viewportInputEntry - viewport specifications\n   */\n  public enableElement(viewportInputEntry: PublicViewportInput): void {\n    const viewportInput = this._normalizeViewportInputEntry(viewportInputEntry);\n\n    this._throwIfDestroyed();\n    const { element, viewportId } = viewportInput;\n\n    // Throw error if no canvas\n    if (!element) {\n      throw new Error('No element provided');\n    }\n\n    // 1. Get the viewport from the list of available viewports.\n    const viewport = this.getViewport(viewportId);\n\n    // 1.a) If there is a found viewport, we remove the viewport and create a new viewport\n    if (viewport) {\n      console.log('Viewport already exists, disabling it first');\n      this.disableElement(viewportId);\n      console.log(`Viewport ${viewportId} disabled`);\n    }\n\n    // 2.a) See if viewport uses a custom rendering pipeline.\n    const { type } = viewportInput;\n\n    const viewportUsesCustomRenderingPipeline =\n      viewportTypeUsesCustomRenderingPipeline(type);\n\n    // 2.b) Retrieving the list of viewports for calculation of the new size for\n    // offScreen canvas.\n\n    // If the viewport being added uses a custom pipeline, or we aren't using\n    // GPU rendering, we don't need to resize the offscreen canvas.\n    if (!this.useCPURendering && !viewportUsesCustomRenderingPipeline) {\n      this.enableVTKjsDrivenViewport(viewportInput);\n    } else {\n      // 3 Add the requested viewport to rendering Engine\n      this.addCustomViewport(viewportInput);\n    }\n\n    // 5. Set the background color for the canvas\n    const canvas = getOrCreateCanvas(element);\n    const { background } = viewportInput.defaultOptions;\n    this.fillCanvasWithBackgroundColor(canvas, background);\n  }\n\n  /**\n   * Disables the requested viewportId from the rendering engine:\n   *\n   * 1) It removes the viewport from the the list of viewports\n   * 2) remove the renderer from the offScreen render window if using vtk.js driven\n   * rendering pipeline\n   * 3) resetting the viewport to remove the canvas attributes and canvas data\n   * 4) resize the offScreen appropriately (if using vtk.js driven rendering pipeline)\n   *\n   * @fires Events.ELEMENT_ENABLED\n   *\n   * @param viewportId - viewport Id\n   *\n   */\n  public disableElement(viewportId: string): void {\n    this._throwIfDestroyed();\n    // 1. Getting the viewport to remove it\n    const viewport = this.getViewport(viewportId);\n\n    // 2 To throw if there is no viewport stored in rendering engine\n    if (!viewport) {\n      console.warn(`viewport ${viewportId} does not exist`);\n      return;\n    }\n\n    // 3. Reset the viewport to remove attributes, and reset the canvas\n    this._resetViewport(viewport);\n\n    // 4. Remove the related renderer from the offScreenMultiRenderWindow\n    if (\n      !viewportTypeUsesCustomRenderingPipeline(viewport.type) &&\n      !this.useCPURendering\n    ) {\n      this.offscreenMultiRenderWindow.removeRenderer(viewportId);\n    }\n\n    // 5. Remove the requested viewport from the rendering engine\n    this._removeViewport(viewportId);\n    viewport.isDisabled = true;\n\n    // 6. Avoid rendering for the disabled viewport\n    this._needsRender.delete(viewportId);\n\n    // 7. Clear RAF if no viewport is left\n    const viewports = this.getViewports();\n    if (!viewports.length) {\n      this._clearAnimationFrame();\n    }\n\n    // 8. Resize the offScreen canvas to accommodate for the new size (after removal)\n    // Note: Resize should not reset pan and zoom when disabling an element.\n    // This is because we are only resizing the offscreen canvas to deal with the element\n    // which was removed, and do not wish to alter the current state of any other currently enabled element\n    const immediate = true;\n    const keepCamera = true;\n    this.resize(immediate, keepCamera);\n  }\n\n  /**\n   * It takes an array of viewport input objects including element, viewportId, type\n   * and defaultOptions. It will add the viewport to the rendering engine and enables them.\n   *\n   *\n   * ```typescript\n   *renderingEngine.setViewports([\n   *   {\n   *     viewportId: axialViewportId,\n   *     type: ViewportType.ORTHOGRAPHIC,\n   *     element: document.getElementById('axialDiv'),\n   *     defaultOptions: {\n   *       orientation: Enums.OrientationAxis.AXIAL,\n   *     },\n   *   },\n   *   {\n   *     viewportId: sagittalViewportId,\n   *     type: ViewportType.ORTHOGRAPHIC,\n   *     element: document.getElementById('sagittalDiv'),\n   *     defaultOptions: {\n   *       orientation: Enums.OrientationAxis.SAGITTAL,\n   *     },\n   *   },\n   *   {\n   *     viewportId: customOrientationViewportId,\n   *     type: ViewportType.ORTHOGRAPHIC,\n   *     element: document.getElementById('customOrientationDiv'),\n   *     defaultOptions: {\n   *       orientation: { viewPlaneNormal: [0, 0, 1], viewUp: [0, 1, 0] },\n   *     },\n   *   },\n   * ])\n   * ```\n   *\n   * @fires Events.ELEMENT_ENABLED\n   *\n   * @param viewportInputEntries - Array<PublicViewportInput>\n   */\n\n  public setViewports(\n    publicViewportInputEntries: Array<PublicViewportInput>\n  ): void {\n    const viewportInputEntries = this._normalizeViewportInputEntries(\n      publicViewportInputEntries\n    );\n    this._throwIfDestroyed();\n    this._reset();\n\n    // 1. Split viewports based on whether they use vtk.js or a custom pipeline.\n\n    const vtkDrivenViewportInputEntries: NormalizedViewportInput[] = [];\n    const customRenderingViewportInputEntries: NormalizedViewportInput[] = [];\n\n    viewportInputEntries.forEach((vpie) => {\n      if (\n        !this.useCPURendering &&\n        !viewportTypeUsesCustomRenderingPipeline(vpie.type)\n      ) {\n        vtkDrivenViewportInputEntries.push(vpie);\n      } else {\n        customRenderingViewportInputEntries.push(vpie);\n      }\n    });\n\n    this.setVtkjsDrivenViewports(vtkDrivenViewportInputEntries);\n    this.setCustomViewports(customRenderingViewportInputEntries);\n  }\n\n  /**\n   * Resizes the offscreen viewport and recalculates translations to on screen canvases.\n   * It is up to the parent app to call the resize of the on-screen canvas changes.\n   * This is left as an app level concern as one might want to debounce the changes, or the like.\n   *\n   * @param immediate - Whether all of the viewports should be rendered immediately.\n   * @param keepCamera - Whether to keep the camera for other viewports while resizing the offscreen canvas\n   */\n  public resize(immediate = true, keepCamera = true): void {\n    this._throwIfDestroyed();\n    // 1. Get the viewports' canvases\n    const viewports = this._getViewportsAsArray();\n\n    const vtkDrivenViewports = [];\n    const customRenderingViewports = [];\n\n    viewports.forEach((vpie) => {\n      if (!viewportTypeUsesCustomRenderingPipeline(vpie.type)) {\n        vtkDrivenViewports.push(vpie);\n      } else {\n        customRenderingViewports.push(vpie);\n      }\n    });\n\n    if (vtkDrivenViewports.length) {\n      this._resizeVTKViewports(vtkDrivenViewports, keepCamera, immediate);\n    }\n\n    if (customRenderingViewports.length) {\n      this._resizeUsingCustomResizeHandler(\n        customRenderingViewports,\n        keepCamera,\n        immediate\n      );\n    }\n  }\n\n  /**\n   * Returns the viewport by Id\n   *\n   * @returns viewport\n   */\n  public getViewport(viewportId: string): IStackViewport | IVolumeViewport {\n    return this._viewports.get(viewportId);\n  }\n\n  /**\n   * getViewports Returns an array of all `Viewport`s on the `RenderingEngine` instance.\n   *\n   * @returns Array of viewports\n   */\n  public getViewports(): Array<IStackViewport | IVolumeViewport> {\n    this._throwIfDestroyed();\n\n    return this._getViewportsAsArray();\n  }\n\n  /**\n   * Filters all the available viewports and return the stack viewports\n   * @returns stack viewports registered on the rendering Engine\n   */\n  public getStackViewports(): Array<IStackViewport> {\n    this._throwIfDestroyed();\n\n    const viewports = this.getViewports();\n\n    const isStackViewport = (\n      viewport: IStackViewport | IVolumeViewport\n    ): viewport is StackViewport => {\n      return viewport instanceof StackViewport;\n    };\n\n    return viewports.filter(isStackViewport);\n  }\n\n  /**\n   * Return all the viewports that are volume viewports\n   * @returns An array of VolumeViewport objects.\n   */\n  public getVolumeViewports(): Array<IVolumeViewport> {\n    this._throwIfDestroyed();\n\n    const viewports = this.getViewports();\n\n    const isVolumeViewport = (\n      viewport: IStackViewport | IVolumeViewport\n    ): viewport is BaseVolumeViewport => {\n      return viewport instanceof BaseVolumeViewport;\n    };\n\n    return viewports.filter(isVolumeViewport);\n  }\n\n  /**\n   * Renders all viewports on the next animation frame.\n   *\n   * @fires Events.IMAGE_RENDERED\n   */\n  public render(): void {\n    const viewports = this.getViewports();\n    const viewportIds = viewports.map((vp) => vp.id);\n\n    this._setViewportsToBeRenderedNextFrame(viewportIds);\n  }\n\n  /**\n   * Renders any viewports viewing the given Frame Of Reference.\n   *\n   * @param FrameOfReferenceUID - The unique identifier of the\n   * Frame Of Reference.\n   */\n  public renderFrameOfReference = (FrameOfReferenceUID: string): void => {\n    const viewports = this._getViewportsAsArray();\n    const viewportIdsWithSameFrameOfReferenceUID = viewports.map((vp) => {\n      if (vp.getFrameOfReferenceUID() === FrameOfReferenceUID) {\n        return vp.id;\n      }\n    });\n\n    return this.renderViewports(viewportIdsWithSameFrameOfReferenceUID);\n  };\n\n  /**\n   * Renders the provided Viewport IDs.\n   *\n   */\n  public renderViewports(viewportIds: Array<string>): void {\n    this._setViewportsToBeRenderedNextFrame(viewportIds);\n  }\n\n  /**\n   * Renders only a specific `Viewport` on the next animation frame.\n   *\n   * @param viewportId - The Id of the viewport.\n   */\n  public renderViewport(viewportId: string): void {\n    this._setViewportsToBeRenderedNextFrame([viewportId]);\n  }\n\n  /**\n   * destroy the rendering engine. It will remove all the viewports and,\n   * if the rendering engine is using the GPU, it will also destroy the GPU\n   * resources.\n   */\n  public destroy(): void {\n    if (this.hasBeenDestroyed) {\n      return;\n    }\n\n    // remove vtk rendered first before resetting the viewport\n    if (!this.useCPURendering) {\n      const viewports = this._getViewportsAsArray();\n      viewports.forEach((vp) => {\n        this.offscreenMultiRenderWindow.removeRenderer(vp.id);\n      });\n\n      // Free up WebGL resources\n      this.offscreenMultiRenderWindow.delete();\n\n      // Make sure all references go stale and are garbage collected.\n      delete this.offscreenMultiRenderWindow;\n    }\n\n    this._reset();\n    renderingEngineCache.delete(this.id);\n\n    this.hasBeenDestroyed = true;\n  }\n\n  /**\n   * Fill the canvas with the background color\n   * @param canvas - The canvas element to draw on.\n   * @param backgroundColor - An array of three numbers between 0 and 1 that\n   * specify the red, green, and blue values of the background color.\n   */\n  public fillCanvasWithBackgroundColor(\n    canvas: HTMLCanvasElement,\n    backgroundColor: [number, number, number]\n  ): void {\n    const ctx = canvas.getContext('2d');\n\n    // Default to black if no background color is set\n    let fillStyle;\n    if (backgroundColor) {\n      const rgb = backgroundColor.map((f) => Math.floor(255 * f));\n      fillStyle = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n    } else {\n      fillStyle = 'black';\n    }\n\n    // We draw over the previous stack with the background color while we\n    // wait for the next stack to load\n    ctx.fillStyle = fillStyle;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  }\n\n  private _normalizeViewportInputEntry(\n    viewportInputEntry: PublicViewportInput\n  ) {\n    const { type, defaultOptions } = viewportInputEntry;\n    let options = defaultOptions;\n\n    if (!options || Object.keys(options).length === 0) {\n      options = {\n        background: [0, 0, 0],\n        orientation: null,\n        displayArea: null,\n      };\n\n      if (type === ViewportType.ORTHOGRAPHIC) {\n        options = {\n          ...options,\n          orientation: OrientationAxis.AXIAL,\n        };\n      }\n    }\n\n    return {\n      ...viewportInputEntry,\n      defaultOptions: options,\n    };\n  }\n\n  private _normalizeViewportInputEntries(\n    viewportInputEntries: Array<PublicViewportInput>\n  ): Array<NormalizedViewportInput> {\n    const normalizedViewportInputs = [];\n\n    viewportInputEntries.forEach((viewportInput) => {\n      normalizedViewportInputs.push(\n        this._normalizeViewportInputEntry(viewportInput)\n      );\n    });\n\n    return normalizedViewportInputs;\n  }\n\n  private _resizeUsingCustomResizeHandler(\n    customRenderingViewports: StackViewport[],\n    keepCamera = true,\n    immediate = true\n  ) {\n    // 1. If viewport has a custom resize method, call it here.\n    customRenderingViewports.forEach((vp) => {\n      if (typeof vp.resize === 'function') {\n        vp.resize();\n      }\n    });\n\n    // 3. Reset viewport cameras\n    customRenderingViewports.forEach((vp) => {\n      const prevCamera = vp.getCamera();\n      vp.resetCamera();\n\n      if (keepCamera) {\n        vp.setCamera(prevCamera);\n      }\n    });\n\n    // 2. If render is immediate: Render all\n    if (immediate === true) {\n      this.render();\n    }\n  }\n\n  private _resizeVTKViewports(\n    vtkDrivenViewports: Array<IStackViewport | IVolumeViewport>,\n    keepCamera = true,\n    immediate = true\n  ) {\n    const canvasesDrivenByVtkJs = vtkDrivenViewports.map((vp) => vp.canvas);\n\n    if (canvasesDrivenByVtkJs.length) {\n      // 1. Recalculate and resize the offscreen canvas size\n      const { offScreenCanvasWidth, offScreenCanvasHeight } =\n        this._resizeOffScreenCanvas(canvasesDrivenByVtkJs);\n\n      // 2. Recalculate the viewports location on the off screen canvas\n      this._resize(\n        vtkDrivenViewports,\n        offScreenCanvasWidth,\n        offScreenCanvasHeight\n      );\n    }\n\n    // 3. Reset viewport cameras\n    vtkDrivenViewports.forEach((vp: IStackViewport | IVolumeViewport) => {\n      const canvas = getOrCreateCanvas(vp.element);\n      const rect = canvas.getBoundingClientRect();\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      canvas.width = rect.width * devicePixelRatio;\n      canvas.height = rect.height * devicePixelRatio;\n\n      const prevCamera = vp.getCamera();\n      vp.resetCamera();\n\n      if (keepCamera) {\n        vp.setCamera(prevCamera);\n      }\n    });\n\n    // 4. If render is immediate: Render all\n    if (immediate === true) {\n      this.render();\n    }\n  }\n\n  /**\n   * Enables a viewport to be driven by the offscreen vtk.js rendering engine.\n   *\n   * @param viewportInputEntry - Information object used to\n   * construct and enable the viewport.\n   */\n  private enableVTKjsDrivenViewport(\n    viewportInputEntry: NormalizedViewportInput\n  ) {\n    const viewports = this._getViewportsAsArray();\n    const viewportsDrivenByVtkJs = viewports.filter(\n      (vp) => viewportTypeUsesCustomRenderingPipeline(vp.type) === false\n    );\n\n    const canvasesDrivenByVtkJs = viewportsDrivenByVtkJs.map((vp) => vp.canvas);\n\n    const canvas = getOrCreateCanvas(viewportInputEntry.element);\n    canvasesDrivenByVtkJs.push(canvas);\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * devicePixelRatio;\n    canvas.height = rect.height * devicePixelRatio;\n\n    // 2.c Calculating the new size for offScreen Canvas\n    const { offScreenCanvasWidth, offScreenCanvasHeight } =\n      this._resizeOffScreenCanvas(canvasesDrivenByVtkJs);\n\n    // 2.d Re-position previous viewports on the offScreen Canvas based on the new\n    // offScreen canvas size\n    const xOffset = this._resize(\n      viewportsDrivenByVtkJs,\n      offScreenCanvasWidth,\n      offScreenCanvasHeight\n    );\n\n    const internalViewportEntry = { ...viewportInputEntry, canvas };\n\n    // 3 Add the requested viewport to rendering Engine\n    this.addVtkjsDrivenViewport(internalViewportEntry, {\n      offScreenCanvasWidth,\n      offScreenCanvasHeight,\n      xOffset,\n    });\n  }\n\n  /**\n   * Disables the requested viewportId from the rendering engine:\n   * 1) It removes the viewport from the the list of viewports\n   * 2) remove the renderer from the offScreen render window\n   * 3) resetting the viewport to remove the canvas attributes and canvas data\n   * 4) resize the offScreen appropriately\n   *\n   * @param viewportId - viewport Id\n   *\n   */\n  private _removeViewport(viewportId: string): void {\n    // 1. Get the viewport\n    const viewport = this.getViewport(viewportId);\n    if (!viewport) {\n      console.warn(`viewport ${viewportId} does not exist`);\n      return;\n    }\n\n    // 2. Delete the viewports from the the viewports\n    this._viewports.delete(viewportId);\n  }\n\n  /**\n   *  Adds a viewport driven by vtk.js to the `RenderingEngine`.\n   *\n   * @param viewportInputEntry - Information object used to construct and enable the viewport.\n   * @param options - Options object used to configure the viewport.\n   * @param options.offScreenCanvasWidth - The width of the offscreen canvas.\n   * @param options.offScreenCanvasHeight - The height of the offscreen canvas.\n   * @param options.xOffset - The x offset of the viewport on the offscreen canvas.\n   */\n  private addVtkjsDrivenViewport(\n    viewportInputEntry: InternalViewportInput,\n    offscreenCanvasProperties?: {\n      offScreenCanvasWidth: number;\n      offScreenCanvasHeight: number;\n      xOffset: number;\n    }\n  ): void {\n    const { element, canvas, viewportId, type, defaultOptions } =\n      viewportInputEntry;\n\n    // Make the element not focusable, we use this for modifier keys to work\n    element.tabIndex = -1;\n\n    const { offScreenCanvasWidth, offScreenCanvasHeight, xOffset } =\n      offscreenCanvasProperties;\n\n    // 1. Calculate the size of location of the viewport on the offScreen canvas\n    const {\n      sxStartDisplayCoords,\n      syStartDisplayCoords,\n      sxEndDisplayCoords,\n      syEndDisplayCoords,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n    } = this._getViewportCoordsOnOffScreenCanvas(\n      viewportInputEntry,\n      offScreenCanvasWidth,\n      offScreenCanvasHeight,\n      xOffset\n    );\n\n    // 2. Add a renderer to the offScreenMultiRenderWindow\n    this.offscreenMultiRenderWindow.addRenderer({\n      viewport: [\n        sxStartDisplayCoords,\n        syStartDisplayCoords,\n        sxEndDisplayCoords,\n        syEndDisplayCoords,\n      ],\n      id: viewportId,\n      background: defaultOptions.background\n        ? defaultOptions.background\n        : [0, 0, 0],\n    });\n\n    // 3. ViewportInput to be passed to a stack/volume viewport\n    const viewportInput = <ViewportInput>{\n      id: viewportId,\n      element, // div\n      renderingEngineId: this.id,\n      type,\n      canvas,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      defaultOptions: defaultOptions || {},\n    };\n\n    // 4. Create a proper viewport based on the type of the viewport\n    let viewport;\n    if (type === ViewportType.STACK) {\n      // 4.a Create stack viewport\n      viewport = new StackViewport(viewportInput);\n    } else if (\n      type === ViewportType.ORTHOGRAPHIC ||\n      type === ViewportType.PERSPECTIVE\n    ) {\n      // 4.b Create a volume viewport\n      viewport = new VolumeViewport(viewportInput);\n    } else if (type === ViewportType.VOLUME_3D) {\n      viewport = new VolumeViewport3D(viewportInput);\n    } else {\n      throw new Error(`Viewport Type ${type} is not supported`);\n    }\n\n    // 5. Storing the viewports\n    this._viewports.set(viewportId, viewport);\n\n    const eventDetail: EventTypes.ElementEnabledEventDetail = {\n      element,\n      viewportId,\n      renderingEngineId: this.id,\n    };\n\n    if (!viewport.suppressEvents) {\n      triggerEvent(eventTarget, Events.ELEMENT_ENABLED, eventDetail);\n    }\n  }\n\n  /**\n   * Adds a viewport using a custom rendering pipeline to the `RenderingEngine`.\n   *\n   * @param viewportInputEntry - Information object used to\n   * construct and enable the viewport.\n   */\n  private addCustomViewport(viewportInputEntry: PublicViewportInput): void {\n    const { element, viewportId, type, defaultOptions } = viewportInputEntry;\n\n    // Make the element not focusable, we use this for modifier keys to work\n    element.tabIndex = -1;\n\n    const canvas = getOrCreateCanvas(element);\n\n    // Add a viewport with no offset\n    const { clientWidth, clientHeight } = canvas;\n\n    // Set the canvas to be same resolution as the client.\n    // Note: This ignores devicePixelRatio for now. We may want to change it in the\n    // future but it has no benefit for the Cornerstone CPU rendering pathway at the\n    // moment anyway.\n    if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n      canvas.width = clientWidth;\n      canvas.height = clientHeight;\n    }\n\n    const viewportInput = <ViewportInput>{\n      id: viewportId,\n      renderingEngineId: this.id,\n      element, // div\n      type,\n      canvas,\n      sx: 0, // No offset, uses own renderer\n      sy: 0,\n      sWidth: clientWidth,\n      sHeight: clientHeight,\n      defaultOptions: defaultOptions || {},\n    };\n\n    // 4. Create a proper viewport based on the type of the viewport\n\n    if (type !== ViewportType.STACK) {\n      // In the future these will need to be pluggable, but we aren't there yet\n      // and these are just Stacks for now.\n      throw new Error('Support for fully custom viewports not yet implemented');\n    }\n\n    // 4.a Create stack viewport\n    const viewport = new StackViewport(viewportInput);\n\n    // 5. Storing the viewports\n    this._viewports.set(viewportId, viewport);\n\n    const eventDetail: EventTypes.ElementEnabledEventDetail = {\n      element,\n      viewportId,\n      renderingEngineId: this.id,\n    };\n\n    triggerEvent(eventTarget, Events.ELEMENT_ENABLED, eventDetail);\n  }\n\n  /**\n   * Sets multiple viewports using custom rendering\n   * pipelines to the `RenderingEngine`.\n   *\n   * @param viewportInputEntries - An array of information\n   * objects used to construct and enable the viewports.\n   */\n  private setCustomViewports(viewportInputEntries: PublicViewportInput[]) {\n    viewportInputEntries.forEach((vpie) => this.addCustomViewport(vpie));\n  }\n\n  /**\n   * Sets multiple vtk.js driven viewports to\n   * the `RenderingEngine`.\n   *\n   * @param viewportInputEntries - An array of information\n   * objects used to construct and enable the viewports.\n   */\n  private setVtkjsDrivenViewports(\n    viewportInputEntries: NormalizedViewportInput[]\n  ) {\n    // Deal with vtkjs driven viewports\n    if (viewportInputEntries.length) {\n      // 1. Getting all the canvases from viewports calculation of the new offScreen size\n      const vtkDrivenCanvases = viewportInputEntries.map((vp) =>\n        getOrCreateCanvas(vp.element)\n      );\n\n      // Ensure the canvas size includes any scaling due to device pixel ratio\n      vtkDrivenCanvases.forEach((canvas) => {\n        const devicePixelRatio = window.devicePixelRatio || 1;\n\n        const rect = canvas.getBoundingClientRect();\n        canvas.width = rect.width * devicePixelRatio;\n        canvas.height = rect.height * devicePixelRatio;\n      });\n\n      // 2. Set canvas size based on height and sum of widths\n      const { offScreenCanvasWidth, offScreenCanvasHeight } =\n        this._resizeOffScreenCanvas(vtkDrivenCanvases);\n\n      /*\n          TODO: Commenting this out until we can mock the Canvas usage in the tests (or use jsdom?)\n          if (!offScreenCanvasWidth || !offScreenCanvasHeight) {\n            throw new Error('Invalid offscreen canvas width or height')\n          }*/\n\n      // 3. Adding the viewports based on the viewportInputEntry definition to the\n      // rendering engine.\n      let xOffset = 0;\n      for (let i = 0; i < viewportInputEntries.length; i++) {\n        const vtkDrivenViewportInputEntry = viewportInputEntries[i];\n        const canvas = vtkDrivenCanvases[i];\n        const internalViewportEntry = {\n          ...vtkDrivenViewportInputEntry,\n          canvas,\n        };\n\n        this.addVtkjsDrivenViewport(internalViewportEntry, {\n          offScreenCanvasWidth,\n          offScreenCanvasHeight,\n          xOffset,\n        });\n\n        // Incrementing the xOffset which provides the horizontal location of each\n        // viewport on the offScreen canvas\n        xOffset += canvas.width;\n      }\n    }\n  }\n\n  /**\n   * Resizes the offscreen canvas based on the provided vtk.js driven canvases.\n   *\n   * @param canvases - An array of HTML Canvas\n   */\n  private _resizeOffScreenCanvas(\n    canvasesDrivenByVtkJs: Array<HTMLCanvasElement>\n  ): { offScreenCanvasWidth: number; offScreenCanvasHeight: number } {\n    const { offScreenCanvasContainer, offscreenMultiRenderWindow } = this;\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    // 1. Calculated the height of the offScreen canvas to be the maximum height\n    // between canvases\n    const offScreenCanvasHeight = Math.max(\n      ...canvasesDrivenByVtkJs.map(\n        (canvas) => canvas.clientHeight * devicePixelRatio\n      )\n    );\n\n    // 2. Calculating the width of the offScreen canvas to be the sum of all\n    let offScreenCanvasWidth = 0;\n\n    canvasesDrivenByVtkJs.forEach((canvas) => {\n      offScreenCanvasWidth += canvas.clientWidth * devicePixelRatio;\n    });\n\n    offScreenCanvasContainer.width = offScreenCanvasWidth;\n    offScreenCanvasContainer.height = offScreenCanvasHeight;\n\n    // 3. Resize command\n    offscreenMultiRenderWindow.resize();\n\n    return { offScreenCanvasWidth, offScreenCanvasHeight };\n  }\n\n  /**\n   * Recalculates and updates the viewports location on the offScreen canvas upon its resize\n   *\n   * @param viewports - An array of viewports\n   * @param offScreenCanvasWidth - new offScreen canvas width\n   * @param offScreenCanvasHeight - new offScreen canvas height\n   *\n   * @returns _xOffset the final offset which will be used for the next viewport\n   */\n  private _resize(\n    viewportsDrivenByVtkJs: Array<IStackViewport | IVolumeViewport>,\n    offScreenCanvasWidth: number,\n    offScreenCanvasHeight: number\n  ): number {\n    // Redefine viewport properties\n    let _xOffset = 0;\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    for (let i = 0; i < viewportsDrivenByVtkJs.length; i++) {\n      const viewport = viewportsDrivenByVtkJs[i];\n      const {\n        sxStartDisplayCoords,\n        syStartDisplayCoords,\n        sxEndDisplayCoords,\n        syEndDisplayCoords,\n        sx,\n        sy,\n        sWidth,\n        sHeight,\n      } = this._getViewportCoordsOnOffScreenCanvas(\n        viewport,\n        offScreenCanvasWidth,\n        offScreenCanvasHeight,\n        _xOffset\n      );\n\n      _xOffset += viewport.canvas.clientWidth * devicePixelRatio;\n\n      viewport.sx = sx;\n      viewport.sy = sy;\n      viewport.sWidth = sWidth;\n      viewport.sHeight = sHeight;\n\n      // Updating the renderer for the viewport\n      const renderer = this.offscreenMultiRenderWindow.getRenderer(viewport.id);\n      renderer.setViewport([\n        sxStartDisplayCoords,\n        syStartDisplayCoords,\n        sxEndDisplayCoords,\n        syEndDisplayCoords,\n      ]);\n    }\n\n    // Returns the final xOffset\n    return _xOffset;\n  }\n\n  /**\n   * Calculates the location of the provided viewport on the offScreenCanvas\n   *\n   * @param viewports - An array of viewports\n   * @param offScreenCanvasWidth - new offScreen canvas width\n   * @param offScreenCanvasHeight - new offScreen canvas height\n   * @param _xOffset - xOffSet to draw\n   */\n  private _getViewportCoordsOnOffScreenCanvas(\n    viewport: InternalViewportInput | IStackViewport | IVolumeViewport,\n    offScreenCanvasWidth: number,\n    offScreenCanvasHeight: number,\n    _xOffset: number\n  ): ViewportDisplayCoords {\n    const { canvas } = viewport;\n    const { clientWidth, clientHeight } = canvas;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const height = clientHeight * devicePixelRatio;\n    const width = clientWidth * devicePixelRatio;\n\n    // Update the canvas drawImage offsets.\n    const sx = _xOffset;\n    const sy = 0;\n    const sWidth = width;\n    const sHeight = height;\n\n    const sxStartDisplayCoords = sx / offScreenCanvasWidth;\n\n    // Need to offset y if it not max height\n    const syStartDisplayCoords =\n      sy + (offScreenCanvasHeight - height) / offScreenCanvasHeight;\n\n    const sWidthDisplayCoords = sWidth / offScreenCanvasWidth;\n    const sHeightDisplayCoords = sHeight / offScreenCanvasHeight;\n\n    return {\n      sxStartDisplayCoords,\n      syStartDisplayCoords,\n      sxEndDisplayCoords: sxStartDisplayCoords + sWidthDisplayCoords,\n      syEndDisplayCoords: syStartDisplayCoords + sHeightDisplayCoords,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n    };\n  }\n\n  /**\n   * @method _getViewportsAsArray Returns an array of all viewports\n   *\n   * @returns {Array} Array of viewports.\n   */\n  private _getViewportsAsArray() {\n    return Array.from(this._viewports.values());\n  }\n\n  private _setViewportsToBeRenderedNextFrame(viewportIds: string[]) {\n    // Add the viewports to the set of flagged viewports\n    viewportIds.forEach((viewportId) => {\n      this._needsRender.add(viewportId);\n    });\n\n    // Render any flagged viewports\n    this._render();\n  }\n\n  /**\n   * Sets up animation frame if necessary\n   */\n  private _render() {\n    // If we have viewports that need rendering and we have not already\n    // set the RAF callback to run on the next frame.\n    if (this._needsRender.size > 0 && this._animationFrameSet === false) {\n      this._animationFrameHandle = window.requestAnimationFrame(\n        this._renderFlaggedViewports\n      );\n\n      // Set the flag that we have already set up the next RAF call.\n      this._animationFrameSet = true;\n    }\n  }\n\n  /**\n   * Renders all viewports.\n   */\n  private _renderFlaggedViewports = () => {\n    this._throwIfDestroyed();\n\n    if (!this.useCPURendering) {\n      this.performVtkDrawCall();\n    }\n\n    const viewports = this._getViewportsAsArray();\n    const eventDetailArray = [];\n\n    for (let i = 0; i < viewports.length; i++) {\n      const viewport = viewports[i];\n      if (this._needsRender.has(viewport.id)) {\n        const eventDetail =\n          this.renderViewportUsingCustomOrVtkPipeline(viewport);\n        eventDetailArray.push(eventDetail);\n        viewport.setRendered();\n\n        // This viewport has been rendered, we can remove it from the set\n        this._needsRender.delete(viewport.id);\n\n        // If there is nothing left that is flagged for rendering, stop the loop\n        if (this._needsRender.size === 0) {\n          break;\n        }\n      }\n    }\n\n    // allow RAF to be called again\n    this._animationFrameSet = false;\n    this._animationFrameHandle = null;\n\n    eventDetailArray.forEach((eventDetail) => {\n      // Very small viewports won't have an element\n      if (!eventDetail?.element) {\n        return;\n      }\n      triggerEvent(eventDetail.element, Events.IMAGE_RENDERED, eventDetail);\n    });\n  };\n\n  /**\n   * Performs the single `vtk.js` draw call which is used to render the offscreen\n   * canvas for vtk.js. This is a bulk rendering step for all Volume and Stack\n   * viewports when GPU rendering is available.\n   */\n  private performVtkDrawCall() {\n    // Render all viewports under vtk.js' control.\n    const { offscreenMultiRenderWindow } = this;\n    const renderWindow = offscreenMultiRenderWindow.getRenderWindow();\n\n    const renderers = offscreenMultiRenderWindow.getRenderers();\n\n    if (!renderers.length) {\n      return;\n    }\n\n    for (let i = 0; i < renderers.length; i++) {\n      const { renderer, id } = renderers[i];\n\n      // Requesting viewports that need rendering to be rendered only\n      if (this._needsRender.has(id)) {\n        renderer.setDraw(true);\n      } else {\n        renderer.setDraw(false);\n      }\n    }\n\n    renderWindow.render();\n\n    // After redraw we set all renderers to not render until necessary\n    for (let i = 0; i < renderers.length; i++) {\n      renderers[i].renderer.setDraw(false);\n    }\n  }\n\n  /**\n   * Renders the given viewport\n   * using its proffered method.\n   *\n   * @param viewport - The viewport to render\n   */\n  private renderViewportUsingCustomOrVtkPipeline(\n    viewport: IStackViewport | IVolumeViewport\n  ): EventTypes.ImageRenderedEventDetail[] {\n    let eventDetail;\n\n    // Rendering engines start having issues without at least two pixels\n    // in each direction\n    if (\n      viewport.sWidth < VIEWPORT_MIN_SIZE ||\n      viewport.sHeight < VIEWPORT_MIN_SIZE\n    ) {\n      console.log('Viewport is too small', viewport.sWidth, viewport.sHeight);\n      return;\n    }\n    if (viewportTypeUsesCustomRenderingPipeline(viewport.type) === true) {\n      eventDetail =\n        viewport.customRenderViewportToCanvas() as EventTypes.ImageRenderedEventDetail;\n    } else {\n      if (this.useCPURendering) {\n        throw new Error(\n          'GPU not available, and using a viewport with no custom render pipeline.'\n        );\n      }\n\n      const { offscreenMultiRenderWindow } = this;\n      const openGLRenderWindow =\n        offscreenMultiRenderWindow.getOpenGLRenderWindow();\n      const context = openGLRenderWindow.get3DContext();\n      const offScreenCanvas = context.canvas;\n\n      eventDetail = this._renderViewportFromVtkCanvasToOnscreenCanvas(\n        viewport,\n        offScreenCanvas\n      );\n    }\n\n    return eventDetail;\n  }\n\n  /**\n   * Renders a particular `Viewport`'s on screen canvas.\n   * @param viewport - The `Viewport` to render.\n   * @param offScreenCanvas - The offscreen canvas to render from.\n   */\n  private _renderViewportFromVtkCanvasToOnscreenCanvas(\n    viewport: IStackViewport | IVolumeViewport,\n    offScreenCanvas\n  ): EventTypes.ImageRenderedEventDetail {\n    const {\n      element,\n      canvas,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      id: viewportId,\n      renderingEngineId,\n      suppressEvents,\n    } = viewport;\n\n    const { width: dWidth, height: dHeight } = canvas;\n\n    const onScreenContext = canvas.getContext('2d');\n\n    onScreenContext.drawImage(\n      offScreenCanvas,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      0, //dx\n      0, // dy\n      dWidth,\n      dHeight\n    );\n\n    return {\n      element,\n      suppressEvents,\n      viewportId,\n      renderingEngineId,\n      viewportStatus: viewport.viewportStatus,\n    };\n  }\n\n  /**\n   * Reset the viewport by removing the data attributes\n   * and clearing the context of draw. It also emits an element disabled event\n   *\n   * @param viewport - The `Viewport` to render.\n   */\n  private _resetViewport(viewport: IStackViewport | IVolumeViewport) {\n    const renderingEngineId = this.id;\n\n    const { element, canvas, id: viewportId } = viewport;\n\n    const eventDetail: EventTypes.ElementDisabledEventDetail = {\n      element,\n      viewportId,\n      renderingEngineId,\n    };\n\n    // Trigger first before removing the data attributes, as we need the enabled\n    // element to remove tools associated with the viewport\n    triggerEvent(eventTarget, Events.ELEMENT_DISABLED, eventDetail);\n\n    element.removeAttribute('data-viewport-uid');\n    element.removeAttribute('data-rendering-engine-uid');\n\n    // clear drawing\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  private _clearAnimationFrame() {\n    window.cancelAnimationFrame(this._animationFrameHandle);\n\n    this._needsRender.clear();\n    this._animationFrameSet = false;\n    this._animationFrameHandle = null;\n  }\n\n  /**\n   * Resets the `RenderingEngine`\n   */\n  private _reset() {\n    const viewports = this._getViewportsAsArray();\n\n    viewports.forEach((viewport) => {\n      this._resetViewport(viewport);\n    });\n\n    this._clearAnimationFrame();\n\n    this._viewports = new Map();\n  }\n\n  /**\n   * Throws an error if trying to interact with the `RenderingEngine`\n   * instance after its `destroy` method has been called.\n   */\n  private _throwIfDestroyed() {\n    if (this.hasBeenDestroyed) {\n      throw new Error(\n        'this.destroy() has been manually called to free up memory, can not longer use this instance. Instead make a new one.'\n      );\n    }\n  }\n\n  // debugging utils for offScreen canvas\n  _downloadOffScreenCanvas() {\n    const dataURL = this._debugRender();\n    _TEMPDownloadURI(dataURL);\n  }\n\n  // debugging utils for offScreen canvas\n  _debugRender(): void {\n    const { offscreenMultiRenderWindow } = this;\n    const renderWindow = offscreenMultiRenderWindow.getRenderWindow();\n\n    const renderers = offscreenMultiRenderWindow.getRenderers();\n\n    for (let i = 0; i < renderers.length; i++) {\n      renderers[i].renderer.setDraw(true);\n    }\n\n    renderWindow.render();\n    const openGLRenderWindow =\n      offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const context = openGLRenderWindow.get3DContext();\n\n    const offScreenCanvas = context.canvas;\n    const dataURL = offScreenCanvas.toDataURL();\n\n    this._getViewportsAsArray().forEach((viewport) => {\n      const { sx, sy, sWidth, sHeight } = viewport;\n\n      const canvas = <HTMLCanvasElement>viewport.canvas;\n      const { width: dWidth, height: dHeight } = canvas;\n\n      const onScreenContext = canvas.getContext('2d');\n\n      //sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight\n      onScreenContext.drawImage(\n        offScreenCanvas,\n        sx,\n        sy,\n        sWidth,\n        sHeight,\n        0, //dx\n        0, // dy\n        dWidth,\n        dHeight\n      );\n    });\n\n    return dataURL;\n  }\n}\n\nexport default RenderingEngine;\n\n// debugging utils for offScreen canvas\nfunction _TEMPDownloadURI(uri) {\n  const link = document.createElement('a');\n\n  link.download = 'viewport.png';\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","import RenderingEngine from './RenderingEngine';\nimport getRenderingEngine from './getRenderingEngine';\nimport VolumeViewport from './VolumeViewport';\nimport StackViewport from './StackViewport';\nimport VolumeViewport3D from './VolumeViewport3D';\nimport {\n  createVolumeActor,\n  createVolumeMapper,\n  getOrCreateCanvas,\n} from './helpers';\n\nexport {\n  getRenderingEngine,\n  RenderingEngine,\n  VolumeViewport,\n  VolumeViewport3D,\n  createVolumeActor,\n  createVolumeMapper,\n  getOrCreateCanvas,\n  StackViewport,\n};\n\nexport default RenderingEngine;\n","import { RequestPoolManager } from './requestPoolManager';\nimport RequestType from '../enums/RequestType';\n\n/**\n * ImageRetrievalPoolManager\n * You don't need to directly use the imageRetrievalPoolManager to load images\n * since the imageLoadPoolManager will automatically use it for retrieval. However,\n * maximum number of concurrent requests can be set by calling `setMaxConcurrentRequests`.\n *\n * Retrieval (usually) === XHR requests\n */\nconst imageRetrievalPoolManager = new RequestPoolManager('imageRetrievalPool');\n\nimageRetrievalPoolManager.setMaxSimultaneousRequests(\n  RequestType.Interaction,\n  200\n);\nimageRetrievalPoolManager.setMaxSimultaneousRequests(\n  RequestType.Thumbnail,\n  200\n);\nimageRetrievalPoolManager.setMaxSimultaneousRequests(RequestType.Prefetch, 200);\nimageRetrievalPoolManager.grabDelay = 0;\n\nexport default imageRetrievalPoolManager;\n","import getRenderingEngine, {\n  getRenderingEngines,\n} from './RenderingEngine/getRenderingEngine';\nimport { IEnabledElement } from './types';\n\n/**\n * A convenience method to find an EnabledElement given a reference to its\n * associated element. Commonly used in code that's handling a custom\n * event emitted by this library.\n *\n * @example\n * Using the renderingEngine to find the enabled element:\n * ```javascript\n * const element = getRenderingEngine(renderingEngineId)\n *    .getViewport(viewportId)\n *    .element\n *\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @example\n * Using a cornerstone event's \"element\"\n * ```javascript\n * // Our \"cornerstone events\" contain the source element, which is\n * // raised on the viewport's div element\n * const { element } = evt.detail\n * const enabledElement = getEnabledElement(element)\n * ```\n *\n * @param element - a reference to an EnabledElement/Viewport's div element\n * @returns the associated EnabledElement, or undefined if no matching EnabledElement\n * can be found\n */\nexport default function getEnabledElement(\n  element: HTMLDivElement | undefined\n): IEnabledElement | undefined {\n  if (!element) {\n    return;\n  }\n\n  const { viewportUid, renderingEngineUid } = element.dataset;\n\n  return getEnabledElementByIds(viewportUid, renderingEngineUid);\n}\n\n/**\n * Similar to {@link getEnabledElement}, but takes the IDs of the\n * renderingEngine and viewport as parameters to return the associated\n * EnabledElement.\n *\n * @param viewportId - The Id of the viewport\n * @param renderingEngineId - The Id of the rendering engine.\n * @returns The enabled element which is an object that contains the viewport, rendering\n * engine, viewport Id, rendering engine Id, and the Frame of Reference UID.\n */\nexport function getEnabledElementByIds(\n  viewportId: string,\n  renderingEngineId: string\n): IEnabledElement {\n  if (!renderingEngineId || !viewportId) {\n    return;\n  }\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n    return;\n  }\n\n  const viewport = renderingEngine.getViewport(viewportId);\n\n  if (!viewport) {\n    return;\n  }\n\n  const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n  return {\n    viewport,\n    renderingEngine,\n    viewportId,\n    renderingEngineId,\n    FrameOfReferenceUID,\n  };\n}\n\n/**\n * Get all the enabled elements from all the rendering engines\n * @returns An array of enabled elements.\n */\nexport function getEnabledElements(): IEnabledElement[] {\n  const enabledElements = [];\n\n  const renderingEngines = getRenderingEngines();\n\n  renderingEngines.forEach((renderingEngine) => {\n    const viewports = renderingEngine.getViewports();\n\n    viewports.forEach(({ element }) => {\n      enabledElements.push(getEnabledElement(element));\n    });\n  });\n\n  return enabledElements;\n}\n","/*\n * Constants\n */\n\nconst DEFAULT_SETTINGS = Symbol('DefaultSettings');\nconst RUNTIME_SETTINGS = Symbol('RuntimeSettings');\nconst OBJECT_SETTINGS_MAP = Symbol('ObjectSettingsMap');\nconst DICTIONARY = Symbol('Dictionary');\n\n/**\n * Settings\n */\nexport default class Settings {\n  constructor(base?: Settings) {\n    const dictionary = Object.create(\n      base instanceof Settings && DICTIONARY in base ? base[DICTIONARY] : null\n    );\n    Object.seal(\n      Object.defineProperty(this, DICTIONARY, {\n        value: dictionary,\n      })\n    );\n  }\n\n  set(key: string, value: unknown): boolean {\n    return set(this[DICTIONARY], key, value, null);\n  }\n\n  get(key: string): unknown {\n    return get(this[DICTIONARY], key);\n  }\n\n  /**\n   * Unset a specific key or a set of keys within a namespace when the key ends with a dot (ASCII #46).\n   * If the key is \".\", all keys will be removed and this command works as a reset.\n   * @param key - name The key to be unset or a namespace.\n   * @returns boolean\n   */\n  unset(key: string): boolean {\n    return unset(this[DICTIONARY], key + '');\n  }\n\n  forEach(callback: (key: string, value: unknown) => void): void {\n    iterate(this[DICTIONARY], callback);\n  }\n\n  extend(): Settings {\n    return new Settings(this);\n  }\n\n  /**\n   * Recursively import all properties from the given plain JavaScript object.\n   * This method has the opposite effect of the `dump` method.\n   * @param root - The root object whose properties will\n   * be imported.\n   */\n  import(root: Record<string, unknown>): void {\n    if (isPlainObject(root)) {\n      Object.keys(root).forEach((key) => {\n        set(this[DICTIONARY], key, root[key], null);\n      });\n    }\n  }\n\n  /**\n   * Build a JSON representation of the current internal state of this settings\n   * object. The returned object can be safely passed to `JSON.stringify`\n   * function.\n   * @returns The JSON representation of the current\n   * state of this settings instance\n   */\n  dump(): Record<string, unknown> {\n    const context = {};\n    iterate(this[DICTIONARY], (key, value) => {\n      if (typeof value !== 'undefined') {\n        deepSet(context, key, value);\n      }\n    });\n    return context;\n  }\n\n  static assert(subject: Settings): Settings {\n    return subject instanceof Settings\n      ? subject\n      : Settings.getRuntimeSettings();\n  }\n\n  static getDefaultSettings(subfield = null): Settings | any {\n    let defaultSettings = Settings[DEFAULT_SETTINGS];\n    if (!(defaultSettings instanceof Settings)) {\n      defaultSettings = new Settings();\n      Settings[DEFAULT_SETTINGS] = defaultSettings;\n    }\n\n    // Given subfield of 'segmentation' it will return all settings\n    // that starts with segmentation.*\n    if (subfield) {\n      const settingObj = {};\n      defaultSettings.forEach((name: string) => {\n        if (name.startsWith(subfield)) {\n          const setting = name.split(`${subfield}.`)[1];\n          settingObj[setting] = defaultSettings.get(name);\n        }\n      });\n      return settingObj;\n    }\n\n    return defaultSettings;\n  }\n\n  static getRuntimeSettings(): Settings {\n    let runtimeSettings = Settings[RUNTIME_SETTINGS];\n    if (!(runtimeSettings instanceof Settings)) {\n      runtimeSettings = new Settings(Settings.getDefaultSettings());\n      Settings[RUNTIME_SETTINGS] = runtimeSettings;\n    }\n    return runtimeSettings;\n  }\n\n  static getObjectSettings(subject: unknown, from?: unknown): Settings {\n    let settings = null;\n    if (subject instanceof Settings) {\n      settings = subject;\n    } else if (typeof subject === 'object' && subject !== null) {\n      let objectSettingsMap = Settings[OBJECT_SETTINGS_MAP];\n      if (!(objectSettingsMap instanceof WeakMap)) {\n        objectSettingsMap = new WeakMap();\n        Settings[OBJECT_SETTINGS_MAP] = objectSettingsMap;\n      }\n      settings = objectSettingsMap.get(subject);\n      if (!(settings instanceof Settings)) {\n        settings = new Settings(\n          Settings.assert(Settings.getObjectSettings(from))\n        );\n        objectSettingsMap.set(subject, settings);\n      }\n    }\n    return settings;\n  }\n\n  static extendRuntimeSettings(): Settings {\n    return Settings.getRuntimeSettings().extend();\n  }\n}\n\n/*\n * Local Helpers\n */\n\nfunction unset(dictionary: Record<string, unknown>, name: string): boolean {\n  if (name.endsWith('.')) {\n    let deleteCount = 0;\n    const namespace = name;\n    const base = namespace.slice(0, -1);\n    const deleteAll = base.length === 0;\n    for (const key in dictionary) {\n      if (\n        Object.prototype.hasOwnProperty.call(dictionary, key) &&\n        (deleteAll || key.startsWith(namespace) || key === base)\n      ) {\n        delete dictionary[key];\n        ++deleteCount;\n      }\n    }\n    return deleteCount > 0;\n  }\n  return delete dictionary[name];\n}\n\nfunction iterate(\n  dictionary: Record<string, unknown>,\n  callback: (key: string, value: unknown) => void\n): void {\n  for (const key in dictionary) {\n    callback(key, dictionary[key]);\n  }\n}\n\nfunction setAll(\n  dictionary: Record<string, unknown>,\n  prefix: string,\n  record: Record<string, unknown>,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  let failCount: number;\n  if (references.has(record)) {\n    return set(dictionary, prefix, null, references);\n  }\n  references.add(record);\n  failCount = 0;\n  for (const field in record) {\n    if (Object.prototype.hasOwnProperty.call(record, field)) {\n      const key = field.length === 0 ? prefix : `${prefix}.${field}`;\n      if (!set(dictionary, key, record[field], references)) {\n        ++failCount;\n      }\n    }\n  }\n  references.delete(record);\n  return failCount === 0;\n}\n\n/**\n * Set the key-value pair on a given dictionary. If the given value is a\n * plain javascript object, every property of that object will also be set.\n * @param dictionary {Record<string, unknown>} The target dictionary\n * @param key {string} The given key\n * @param value {unknown} The given value\n * @param references {WeakSet<Record<string, unknown>>} references is a WeakSet\n *  instance used to keep track of which objects have already been iterated\n *  through preventing thus possible stack overflows caused by cyclic references\n * @returns {boolean} Returns true if every given key-value pair has been\n * successfully set\n */\nfunction set(\n  dictionary: Record<string, unknown>,\n  key: string,\n  value: unknown,\n  references: WeakSet<Record<string, unknown>>\n): boolean {\n  if (isValidKey(key)) {\n    if (isPlainObject(value)) {\n      return setAll(\n        dictionary,\n        key,\n        value as Record<string, unknown>,\n        references instanceof WeakSet ? references : new WeakSet()\n      );\n    }\n    dictionary[key] = value;\n    return true;\n  }\n  return false;\n}\n\nfunction get(dictionary: Record<string, unknown>, key: string): unknown {\n  return dictionary[key];\n}\n\n/**\n * Make sure the -provided key correctly formatted.\n * e.g.:\n *  \"my.cool.property\" (valid)\n *  \"my.cool.property.\" (invalid)\n *  \".my.cool.property\" (invalid)\n *  \"my.cool..property\" (invalid)\n * @param key {string} The property name to be used as key within the internal\n *  dictionary\n * @returns {boolean} True on success, false otherwise\n */\nfunction isValidKey(key: string): boolean {\n  let last: number, current: number, previous: number;\n  if (typeof key !== 'string' || (last = key.length - 1) < 0) {\n    return false;\n  }\n  previous = -1;\n  while ((current = key.indexOf('.', previous + 1)) >= 0) {\n    if (current - previous < 2 || current === last) {\n      return false;\n    }\n    previous = current;\n  }\n  return true;\n}\n\nfunction isPlainObject(subject: unknown) {\n  if (typeof subject === 'object' && subject !== null) {\n    const prototype = Object.getPrototypeOf(subject);\n    if (prototype === Object.prototype || prototype === null) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction deepSet(context, key, value) {\n  const separator = key.indexOf('.');\n  if (separator >= 0) {\n    const subKey = key.slice(0, separator);\n    let subContext = context[subKey];\n    if (typeof subContext !== 'object' || subContext === null) {\n      const subContextValue = subContext;\n      subContext = {};\n      if (typeof subContextValue !== 'undefined') {\n        subContext[''] = subContextValue;\n      }\n      context[subKey] = subContext;\n    }\n    deepSet(subContext, key.slice(separator + 1, key.length), value);\n  } else {\n    context[key] = value;\n  }\n}\n\n/**\n * Initial Settings for the repository\n */\nSettings.getDefaultSettings().set('useCursors', true);\n","import { Point3, ContourData, IContour } from '../../types';\nimport { ContourType } from '../../enums';\n\ntype ContourProps = {\n  id: string;\n  data: ContourData;\n  color: Point3;\n  segmentIndex: number;\n};\n\n/**\n * The `Contour` class implements the `IContour` interface and represents a contour in 3D space.\n * It holds information about the contour's id, size in bytes, points, color, and type.\n * The class also provides methods to retrieve the points, color, and type of the contour.\n * Each Contour is part of a ContourSet, and each ContourSet is part of a Geometry.\n */\nexport class Contour implements IContour {\n  readonly id: string;\n  readonly sizeInBytes: number;\n  points: Point3[];\n  color: Point3;\n  type: ContourType;\n  segmentIndex: number;\n\n  constructor(props: ContourProps) {\n    const { points, type } = props.data;\n    this.id = props.id;\n    this.points = points;\n    this.type = type;\n    this.color = props.color;\n    this.segmentIndex = props.segmentIndex;\n\n    this.sizeInBytes = this._getSizeInBytes();\n  }\n\n  _getSizeInBytes(): number {\n    let sizeInBytes = 0;\n\n    // Assuming each point is 1 byte\n    sizeInBytes += this.points.length * 3;\n    return sizeInBytes;\n  }\n\n  /**\n   * It returns the value of the points property of the data object\n   * @returns The points property of the data object.\n   */\n  public getPoints(): Point3[] {\n    return this.points;\n  }\n\n  public getFlatPointsArray(): number[] {\n    return this.points.map((point) => [...point]).flat();\n  }\n\n  /**\n   * This function returns the color of the contour\n   * @returns The color of the contour\n   */\n  public getColor(): Point3 {\n    return this.color;\n  }\n\n  /**\n   * It returns the type of the contour, closed or open\n   * @returns The type of the contour.\n   */\n  public getType(): ContourType {\n    return this.type;\n  }\n}\n\nexport default Contour;\n","import vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nimport { Point3, IContourSet, IContour, ContourData } from '../../types';\nimport Contour from './Contour';\n\ntype ContourSetProps = {\n  id: string;\n  data: ContourData[];\n  frameOfReferenceUID: string;\n  segmentIndex: number;\n  color?: Point3;\n};\n\n/**\n * This class represents a set of contours in 3d space.\n * Usually contours are grouped together in a contour set to represent a meaningful shape.\n */\nexport class ContourSet implements IContourSet {\n  readonly id: string;\n  readonly sizeInBytes: number;\n  readonly frameOfReferenceUID: string;\n  private color: Point3 = [200, 0, 0]; // default color\n  private segmentIndex: number;\n  private polyData: vtkPolyData;\n  private centroid: Point3;\n  contours: IContour[];\n\n  constructor(props: ContourSetProps) {\n    this.id = props.id;\n    this.contours = [];\n    this.color = props.color ?? this.color;\n    this.frameOfReferenceUID = props.frameOfReferenceUID;\n    this.segmentIndex = props.segmentIndex;\n    this._createEachContour(props.data);\n    this.sizeInBytes = this._getSizeInBytes();\n  }\n\n  _createEachContour(contourDataArray: ContourData[]): void {\n    contourDataArray.forEach((contourData) => {\n      const { points, type, color } = contourData;\n\n      const contour = new Contour({\n        id: `${this.id}-segment-${this.segmentIndex}`,\n        data: {\n          points,\n          type,\n          segmentIndex: this.segmentIndex,\n          color: color ?? this.color,\n        },\n        segmentIndex: this.segmentIndex,\n        color: color ?? this.color,\n      });\n\n      this.contours.push(contour);\n    });\n\n    this._updateContourSetCentroid();\n  }\n\n  // Todo: this centroid calculation has limitation in which\n  // it will not work for MPR, the reason is that we are finding\n  // the centroid of all points but at the end we are picking the\n  // closest point to the centroid, which will not work for MPR\n  // The reason for picking the closest is a rendering issue since\n  // the centroid can be not exactly in the middle of the slice\n  // and it might cause the contour to be rendered in the wrong slice\n  // or not rendered at all\n  _updateContourSetCentroid(): void {\n    const numberOfPoints = this.getTotalNumberOfPoints();\n    const flatPointsArray = this.getFlatPointsArray();\n\n    const sumOfPoints = flatPointsArray.reduce(\n      (acc, point) => {\n        return [acc[0] + point[0], acc[1] + point[1], acc[2] + point[2]];\n      },\n      [0, 0, 0]\n    );\n\n    const centroid = [\n      sumOfPoints[0] / numberOfPoints,\n      sumOfPoints[1] / numberOfPoints,\n      sumOfPoints[2] / numberOfPoints,\n    ];\n\n    const closestPoint = flatPointsArray.reduce((closestPoint, point) => {\n      const distanceToPoint = this._getDistance(centroid, point);\n      const distanceToClosestPoint = this._getDistance(centroid, closestPoint);\n\n      if (distanceToPoint < distanceToClosestPoint) {\n        return point;\n      } else {\n        return closestPoint;\n      }\n    }, flatPointsArray[0]);\n\n    this.centroid = closestPoint;\n  }\n\n  _getSizeInBytes(): number {\n    return this.contours.reduce((sizeInBytes, contour) => {\n      return sizeInBytes + contour.sizeInBytes;\n    }, 0);\n  }\n\n  public getCentroid(): Point3 {\n    return this.centroid;\n  }\n\n  public getSegmentIndex(): number {\n    return this.segmentIndex;\n  }\n\n  public getColor(): Point3 {\n    // Currently, all contours in a contour set have the same color.\n    // This may change in the future.\n    return this.color;\n  }\n\n  /**\n   * This function returns the contours of the image\n   * @returns The contours of the image.\n   */\n  public getContours(): IContour[] {\n    return this.contours;\n  }\n\n  public getSizeInBytes(): number {\n    return this.sizeInBytes;\n  }\n\n  /**\n   * It returns an array of all the points in the glyph\n   * @returns An array of points.\n   */\n  public getFlatPointsArray(): Point3[] {\n    return this.contours.map((contour) => contour.getPoints()).flat();\n  }\n\n  /**\n   * This function returns the number of contours in the current shape.\n   * @returns The number of contours in the glyph.\n   */\n  public getNumberOfContours(): number {\n    return this.contours.length;\n  }\n\n  /**\n   * It loops through each contour in the `contours` array, and adds the number of\n   * points in each contour to the `numberOfPoints` variable\n   * @returns The number of points in the contours.\n   */\n  public getTotalNumberOfPoints(): number {\n    return this.contours.reduce((numberOfPoints, contour) => {\n      return numberOfPoints + contour.getPoints().length;\n    }, 0);\n  }\n\n  /**\n   * It returns an array of the number of points in each contour.\n   * @returns An array of numbers.\n   */\n  public getNumberOfPointsArray(): number[] {\n    return this.contours.reduce((acc, _, i) => {\n      acc[i] = this.getNumberOfPointsInAContour(i);\n      return acc;\n    }, []);\n  }\n\n  /**\n   * It returns the points in a contour.\n   * @param contourIndex - The index of the contour you want to get the\n   * points from.\n   * @returns An array of Point3 objects.\n   */\n  public getPointsInContour(contourIndex: number): Point3[] {\n    return this.contours[contourIndex].getPoints();\n  }\n  /**\n   * \"This function returns the number of points in a contour.\"\n   *\n   * @param contourIndex - The index of the contour you want to get the\n   * number of points from.\n   * @returns The number of points in the contour.\n   */\n  public getNumberOfPointsInAContour(contourIndex: number): number {\n    return this.getPointsInContour(contourIndex).length;\n  }\n\n  private _getDistance(pointA, pointB) {\n    return Math.sqrt(\n      (pointA[0] - pointB[0]) ** 2 +\n        (pointA[1] - pointB[1]) ** 2 +\n        (pointA[2] - pointB[2]) ** 2\n    );\n  }\n  /**\n  public convertToClosedSurface(): ClosedSurface {\n    const flatPointsArray = this.getFlatPointsArray();\n    const numPointsArray = this.getNumberOfPointsArray();\n\n    const closedSurfaceData = polySeg.convertToClosedSurface(\n      flatPointsArray,\n      numPointsArray\n    );\n\n    const closedSurface = new ClosedSurface({\n      id: this.id,\n      data: closedSurfaceData,\n      color: this.color,\n    });\n\n    // cache the closed surface\n    return closedSurface;\n  }\n   */\n}\n\nexport default Contour;\n","import '@kitware/vtk.js/Rendering/Profiles/Geometry';\n\nimport cache from '../cache';\nimport { ContourSet } from '../cache/classes/ContourSet';\nimport { GeometryType } from '../enums';\nimport { IGeometry, PublicContourSetData } from '../types';\n\ntype GeometryOptions = {\n  type: GeometryType;\n  geometryData: PublicContourSetData; // | PublicClosedSurfaceData, ...\n};\n\n/**\n * Todo: currently we are not targeting loading geometry from a file.\n * This is a placeholder for future work. For instance, separate loaders\n * for .vti, .vtk, .obj, .dat etc. can be created and registered here.\n */\n\n/**\n * It creates a geometry object and caches it\n * @param geometryId - A unique identifier for the geometry.\n * @param options - GeometryOptions\n * @returns A promise that resolves to a geometry object.\n */\nasync function createAndCacheGeometry(\n  geometryId: string,\n  options: GeometryOptions\n): Promise<IGeometry> {\n  let geometry = cache.getGeometry(geometryId);\n\n  if (geometry) {\n    return geometry;\n  }\n\n  if (options.type === GeometryType.CONTOUR) {\n    geometry = _createContourSet(geometryId, options.geometryData);\n  } else {\n    throw new Error('Unknown geometry type, Only CONTOUR is supported');\n  }\n\n  const geometryLoadObject = {\n    promise: Promise.resolve(geometry),\n  };\n\n  await cache.putGeometryLoadObject(geometryId, geometryLoadObject);\n\n  return geometry;\n}\n\n// Todo: this should be moved\nfunction _createContourSet(\n  geometryId: string,\n  contourSetData: PublicContourSetData\n) {\n  // validate the data to make sure it is a valid contour set\n  if (!contourSetData || contourSetData.data.length === 0) {\n    throw new Error(\n      'Invalid contour set data, see publicContourSetData type for more info'\n    );\n  }\n\n  // make sure it each has id, and each has data of type Point3[]\n  if (!contourSetData.id) {\n    throw new Error(\n      'Invalid contour set data, each contour set must have an id'\n    );\n  }\n\n  if (!contourSetData.data || !Array.isArray(contourSetData.data)) {\n    throw new Error(\n      'Invalid contour set data, each contour set must have an array of contours'\n    );\n  }\n\n  contourSetData.data.forEach((contourData) => {\n    if (!contourData.points || !Array.isArray(contourData.points)) {\n      throw new Error(\n        'Invalid contour set data, each contour must have an array of points'\n      );\n    }\n\n    contourData.points.forEach((point) => {\n      if (!point || !Array.isArray(point) || point.length !== 3) {\n        throw new Error(\n          'Invalid contour set data, each point must be an array of length 3'\n        );\n      }\n    });\n  });\n\n  const contourSet = new ContourSet({\n    id: contourSetData.id,\n    data: contourSetData.data,\n    color: contourSetData.color,\n    frameOfReferenceUID: contourSetData.frameOfReferenceUID,\n    segmentIndex: contourSetData.segmentIndex,\n  });\n\n  const geometry: IGeometry = {\n    id: geometryId,\n    type: GeometryType.CONTOUR,\n    data: contourSet,\n    sizeInBytes: contourSet.getSizeInBytes(),\n  };\n\n  return geometry;\n}\n\nexport { createAndCacheGeometry };\n","/**\n * A utility that can be used to scale (in place) an RgbTransferFunction. We\n * often use this to scale the transfer function based on a PET calculation.\n *\n * @example\n * Grabbing a reference to the RGB Transfer function from the viewport:\n * ```\n * const rgbTransferFunction = viewport\n *   .getActor()\n *   .getProperty()\n *   .getRGBTransferFunction(0);\n *\n * scaleRgbTransferFunction(rgbTransferFunction, 2);\n * ```\n *\n * @see {@link https://kitware.github.io/vtk-js/api/Rendering_Core_ColorTransferFunction.html|VTK.js: ColorTransferFunction}\n * @param rgbTransferFunction\n * @param scalingFactor\n */\nexport default function scaleRGBTransferFunction(\n  rgbTransferFunction: any,\n  scalingFactor: number\n): void {\n  const size = rgbTransferFunction.getSize();\n\n  for (let index = 0; index < size; index++) {\n    const nodeValue1 = [];\n\n    rgbTransferFunction.getNodeValue(index, nodeValue1);\n\n    nodeValue1[1] = nodeValue1[1] * scalingFactor;\n    nodeValue1[2] = nodeValue1[2] * scalingFactor;\n    nodeValue1[3] = nodeValue1[3] * scalingFactor;\n\n    rgbTransferFunction.setNodeValue(index, nodeValue1);\n  }\n}\n","const LAST_RUNTIME_ID = Symbol('LastRuntimeId');\nconst GLOBAL_CONTEXT = {};\nconst DEFAULT_MAX = 0xffffffff; // Max 32-bit integer\nconst DEFAULT_SEPARATOR = '-';\n\n/**\n * Generate a unique numeric ID string valid during a single runtime session;\n *\n * @param context - An optional object to be used as context.\n *  Defaults to a global context;\n * @param separator - The component separator. Defaults to \"-\";\n * @param max - The maximum component value. Defaults to 4294967295;\n * @returns The string representation of the the unique ID;\n */\nexport default function getRuntimeId(\n  context?: unknown,\n  separator?: string,\n  max?: number\n): string {\n  return getNextRuntimeId(\n    // @ts-ignore\n    context !== null && typeof context === 'object' ? context : GLOBAL_CONTEXT,\n    LAST_RUNTIME_ID,\n    (typeof max === 'number' && max > 0 ? max : DEFAULT_MAX) >>> 0\n  ).join(typeof separator === 'string' ? separator : DEFAULT_SEPARATOR);\n}\n\n/*\n * Helpers\n */\n\nfunction getNextRuntimeId(\n  context: Record<symbol, Array<number>>,\n  symbol: symbol,\n  max: number\n): Array<number> {\n  let idComponents = context[symbol];\n  if (!(idComponents instanceof Array)) {\n    idComponents = [0];\n    Object.defineProperty(context, symbol, { value: idComponents });\n  }\n  for (let carry = true, i = 0; carry && i < idComponents.length; ++i) {\n    let n = idComponents[i] | 0;\n    if (n < max) {\n      carry = false;\n      n = n + 1;\n    } else {\n      n = 0;\n      if (i + 1 === idComponents.length) {\n        idComponents.push(0);\n      }\n    }\n    idComponents[i] = n;\n  }\n  return idComponents;\n}\n","import imageIdToURI from './imageIdToURI';\nimport { IImageCalibration } from '../types';\n\nconst state: Record<string, IImageCalibration> = {}; // Calibrated pixel spacing per imageId\n\n/**\n * Simple metadataProvider object to store metadata for calibrated spacings.\n * This can be added via cornerstone.metaData.addProvider(...) in order to store\n * and return calibrated pixel spacings when metaData type is \"calibratedPixelSpacing\".\n */\nconst metadataProvider = {\n  /**\n   * Adds metadata for an imageId.\n   * @param imageId - the imageId for the metadata to store\n   * @param payload - the payload composed of new calibrated pixel spacings\n   */\n  add: (imageId: string, payload: IImageCalibration): void => {\n    const imageURI = imageIdToURI(imageId);\n    state[imageURI] = payload;\n  },\n\n  /**\n   * Returns the metadata for an imageId if it exists.\n   * @param type - the type of metadata to enquire about\n   * @param imageId - the imageId to enquire about\n   * @returns the calibrated pixel spacings for the imageId if it exists, otherwise undefined\n   */\n  get: (type: string, imageId: string): IImageCalibration => {\n    if (type === 'calibratedPixelSpacing') {\n      const imageURI = imageIdToURI(imageId);\n      return state[imageURI];\n    }\n  },\n};\n\nexport default metadataProvider;\n","import type Point3 from '../types/Point3';\n\n/**\n * returns equal if the two vec3s are opposite within the\n * given tolerance in each dimension.\n *\n * @param v1 - The first 3 vector\n * @param v2 - The second 3 vector.\n * @param tolerance - The acceptable tolerance.\n *\n * @returns True if the two values are within the tolerance levels.\n */\nexport default function isOpposite(\n  v1: Point3,\n  v2: Point3,\n  tolerance = 1e-5\n): boolean {\n  return (\n    Math.abs(v1[0] + v2[0]) < tolerance &&\n    Math.abs(v1[1] + v2[1]) < tolerance &&\n    Math.abs(v1[2] + v2[2]) < tolerance\n  );\n}\n","import global from '../global';\nimport { getShouldUseSharedArrayBuffer } from '../init';\n\n/**\n * A helper function that creates a new Float32Array that utilized a shared\n * array buffer. This allows the array to be updated  simultaneously in\n * workers or the main thread. Depending on the system (the CPU, the OS, the Browser)\n * it can take a while until the change is propagated to all contexts.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer|MDN: SharedArrayBuffer}\n * @remarks\n * We use SharedArrayBuffers in our ImageCache class. It's what allows us to\n * stream data to build a volume. It's important to note that SharedArrayBuffer\n * does not work out of the box for all web browsers. In some, it is disabled\n * behind a flag; in others, it has been removed entirely.\n *\n * @example\n * Creating an array for a Volume with known dimensions:\n * ```\n * const dimensions = [512, 512, 25];\n * const scalarData = createUint8SharedArray(dimensions[0] * dimensions[1] * dimensions[2]);\n * ```\n *\n * @param length - frame size * number of frames\n * @returns a Uint8Array with an underlying SharedArrayBuffer\n * @public\n */\nfunction createUint8SharedArray(length: number): Uint8Array {\n  if (!getShouldUseSharedArrayBuffer()) {\n    throw new Error(\n      'Your page is NOT cross-origin isolated, see https://developer.mozilla.org/en-US/docs/Web/API/crossOriginIsolated'\n    );\n  }\n  if (window.SharedArrayBuffer === undefined) {\n    throw new Error(\n      'SharedArrayBuffer is NOT supported in your browser see https://developer.chrome.com/blog/enabling-shared-array-buffer/'\n    );\n  }\n\n  const sharedArrayBuffer = new SharedArrayBuffer(length);\n\n  return new Uint8Array(sharedArrayBuffer);\n}\n\nexport default createUint8SharedArray;\n","import global from '../global';\nimport { getShouldUseSharedArrayBuffer } from '../init';\n\n/**\n * A helper function that creates a new Float32Array that utilized a shared\n * array buffer. This allows the array to be updated  simultaneously in\n * workers or the main thread. Depending on the system (the CPU, the OS, the Browser)\n * it can take a while until the change is propagated to all contexts.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer|MDN: SharedArrayBuffer}\n * @remarks\n * We use SharedArrayBuffers in our ImageCache class. It's what allows us to\n * stream data to build a volume. It's important to note that SharedArrayBuffer\n * does not work out of the box for all web browsers. In some, it is disabled\n * behind a flag; in others, it has been removed entirely.\n *\n * @example\n * Creating an array for a Volume with known dimensions:\n * ```\n * const dimensions = [512, 512, 25];\n * const scalarData = createFloat32SharedArray(dimensions[0] * dimensions[1] * dimensions[2]);\n * ```\n *\n * @param length - frame size * number of frames\n * @returns a Float32Array with an underlying SharedArrayBuffer\n * @public\n */\nfunction createFloat32SharedArray(length: number): Float32Array {\n  if (!getShouldUseSharedArrayBuffer()) {\n    throw new Error(\n      'Your page is NOT cross-origin isolated, see https://developer.mozilla.org/en-US/docs/Web/API/crossOriginIsolated'\n    );\n  }\n  if (window.SharedArrayBuffer === undefined) {\n    throw new Error(\n      'SharedArrayBuffer is NOT supported in your browser see https://developer.chrome.com/blog/enabling-shared-array-buffer/'\n    );\n  }\n\n  const sharedArrayBuffer = new SharedArrayBuffer(length * 4);\n\n  return new Float32Array(sharedArrayBuffer);\n}\n\nexport default createFloat32SharedArray;\n","import global from '../global';\n/**\n * A helper function that creates a new Uint16 that utilized a shared\n * array buffer. This allows the array to be updated  simultaneously in\n * workers or the main thread. Depending on the system (the CPU, the OS, the Browser)\n * it can take a while until the change is propagated to all contexts.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer|MDN: SharedArrayBuffer}\n * @remarks\n * We use SharedArrayBuffers in our ImageCache class. It's what allows us to\n * stream data to build a volume. It's important to note that SharedArrayBuffer\n * does not work out of the box for all web browsers. In some, it is disabled\n * behind a flag; in others, it has been removed entirely.\n *\n * @example\n * Creating an array for a Volume with known dimensions:\n * ```\n * const dimensions = [512, 512, 25];\n * const scalarData = createUint16SharedArray(dimensions[0] * dimensions[1] * dimensions[2]);\n * ```\n *\n * @param length - frame size * number of frames\n * @returns a Uint8Array with an underlying SharedArrayBuffer\n * @public\n */\nfunction createUint16SharedArray(length: number): Uint16Array {\n  if (!window.crossOriginIsolated) {\n    throw new Error(\n      'Your page is NOT cross-origin isolated, see https://developer.mozilla.org/en-US/docs/Web/API/crossOriginIsolated'\n    );\n  }\n  if (window.SharedArrayBuffer === undefined) {\n    throw new Error(\n      'SharedArrayBuffer is NOT supported in your browser see https://developer.chrome.com/blog/enabling-shared-array-buffer/'\n    );\n  }\n\n  const sharedArrayBuffer = new SharedArrayBuffer(length * 2);\n\n  return new Uint16Array(sharedArrayBuffer);\n}\n\nexport default createUint16SharedArray;\n","import global from '../global';\n/**\n * A helper function that creates a new Int16 that utilized a shared\n * array buffer. This allows the array to be updated  simultaneously in\n * workers or the main thread. Depending on the system (the CPU, the OS, the Browser)\n * it can take a while until the change is propagated to all contexts.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer|MDN: SharedArrayBuffer}\n * @remarks\n * We use SharedArrayBuffers in our ImageCache class. It's what allows us to\n * stream data to build a volume. It's important to note that SharedArrayBuffer\n * does not work out of the box for all web browsers. In some, it is disabled\n * behind a flag; in others, it has been removed entirely.\n *\n * @example\n * Creating an array for a Volume with known dimensions:\n * ```\n * const dimensions = [512, 512, 25];\n * const scalarData = createInt16SharedArray(dimensions[0] * dimensions[1] * dimensions[2]);\n * ```\n *\n * @param length - frame size * number of frames\n * @returns a Int8Array with an underlying SharedArrayBuffer\n * @public\n */\nfunction createInt16SharedArray(length: number): Int16Array {\n  if (!window.crossOriginIsolated) {\n    throw new Error(\n      'Your page is NOT cross-origin isolated, see https://developer.mozilla.org/en-US/docs/Web/API/crossOriginIsolated'\n    );\n  }\n  if (window.SharedArrayBuffer === undefined) {\n    throw new Error(\n      'SharedArrayBuffer is NOT supported in your browser see https://developer.chrome.com/blog/enabling-shared-array-buffer/'\n    );\n  }\n\n  const sharedArrayBuffer = new SharedArrayBuffer(length * 2);\n\n  return new Int16Array(sharedArrayBuffer);\n}\n\nexport default createInt16SharedArray;\n","import { Point3 } from '../types';\n\n/**\n * Returns true if the specified index is within the given dimensions.\n *\n * @param index - The index to check.\n * @param dimensions - The dimensions to check against.\n *\n * @returns True if the index is in-bounds.\n */\nexport default function indexWithinDimensions(\n  index: Point3,\n  dimensions: Point3\n): boolean {\n  if (\n    index[0] < 0 ||\n    index[0] >= dimensions[0] ||\n    index[1] < 0 ||\n    index[1] >= dimensions[1] ||\n    index[2] < 0 ||\n    index[2] >= dimensions[2]\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import { IVolumeViewport } from '../types';\nimport {\n  getRenderingEngines,\n  getRenderingEngine,\n} from '../RenderingEngine/getRenderingEngine';\n\n/**\n * Returns the viewports containing the same volume actors (all actors) the same\n * as the target viewport. If renderingEngineId is provided, it will only return\n * viewports that are associated with the renderingEngineId; otherwise, it will\n * return search in all rendering engines.\n *\n * This method is useful for finding viewports that are associated with the same\n * volume (e.g., for tools that share state between viewports).\n *\n * @param viewport - target viewport\n * @returns array of viewports that have the same volume actor as the target viewport\n */\nfunction getVolumeViewportsContainingSameVolumes(\n  targetViewport: IVolumeViewport,\n  renderingEngineId?: string\n): Array<IVolumeViewport> {\n  // If rendering engine is not provided, use all rendering engines\n  let renderingEngines;\n  if (renderingEngineId) {\n    renderingEngines = [getRenderingEngine(renderingEngineId)];\n  } else {\n    renderingEngines = getRenderingEngines();\n  }\n\n  const sameVolumesViewports = [];\n\n  renderingEngines.forEach((renderingEngine) => {\n    const targetActors = targetViewport.getActors();\n    const viewports = renderingEngine.getVolumeViewports();\n\n    for (const vp of viewports) {\n      const vpActors = vp.getActors();\n\n      if (vpActors.length !== targetActors.length) {\n        continue;\n      }\n\n      // every targetActors should be in the vpActors\n      const sameVolumes = targetActors.every(({ uid }) =>\n        vpActors.find((vpActor) => uid === vpActor.uid)\n      );\n\n      if (sameVolumes) {\n        sameVolumesViewports.push(vp);\n      }\n    }\n  });\n\n  return sameVolumesViewports;\n}\n\nexport default getVolumeViewportsContainingSameVolumes;\n","import { IVolumeViewport } from '../types';\nimport {\n  getRenderingEngines,\n  getRenderingEngine,\n} from '../RenderingEngine/getRenderingEngine';\n\n/**\n * Similar to {@link getVolumeViewportsContainingSameVolumes}, but uses the volumeId\n * to filter viewports that contain the same volume.\n *\n * @returns VolumeViewport viewports array\n */\nfunction getViewportsWithVolumeId(\n  volumeId: string,\n  renderingEngineId?: string\n): Array<IVolumeViewport> {\n  // If rendering engine is not provided, use all rendering engines\n  let renderingEngines;\n  if (renderingEngineId) {\n    renderingEngines = [getRenderingEngine(renderingEngineId)];\n  } else {\n    renderingEngines = getRenderingEngines();\n  }\n\n  const targetViewports = [];\n\n  renderingEngines.forEach((renderingEngine) => {\n    const viewports = renderingEngine.getVolumeViewports();\n    const filteredViewports = viewports.filter((vp) =>\n      vp.hasVolumeId(volumeId)\n    );\n    targetViewports.push(...filteredViewports);\n  });\n\n  return targetViewports;\n}\n\nexport default getViewportsWithVolumeId;\n","import { IImage } from '../types';\n\nconst isPTPrescaledWithSUV = (image: IImage) => {\n  return image.preScale?.scaled && image.preScale.scalingParameters?.suvbw;\n};\n\nexport default isPTPrescaledWithSUV;\n","import getOrCreateCanvas from '../RenderingEngine/helpers/getOrCreateCanvas';\nimport { ViewportType, Events } from '../enums';\nimport StackViewport from '../RenderingEngine/StackViewport';\nimport { IImage } from '../types';\nimport { getRenderingEngine } from '../RenderingEngine/getRenderingEngine';\nimport RenderingEngine from '../RenderingEngine';\nimport isPTPrescaledWithSUV from './isPTPrescaledWithSUV';\n\n/**\n * Renders an cornerstone image to a Canvas. This method will handle creation\n * of a temporary enabledElement, setting the imageId, and rendering the image via\n * a StackViewport, copying the canvas drawing to the given canvas Element, and\n * disabling the created temporary element. SuppressEvents argument is used to\n * prevent events from firing during the render process (e.g. during a series\n * of renders to a thumbnail image).\n *\n * @example\n * ```\n * const canvas = document.getElementById('myCanvas')\n *\n * renderToCanvasGPU(canvas, image)\n * ```\n * @param canvas - Canvas element to render to\n * @param image - The image to render\n * @param modality - [Default = undefined] The modality of the image\n * @returns - A promise that resolves when the image has been rendered with the imageId\n */\nexport default function renderToCanvasGPU(\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  modality = undefined,\n  renderingEngineId = '_thumbnails'\n): Promise<string> {\n  if (!canvas || !(canvas instanceof HTMLCanvasElement)) {\n    throw new Error('canvas element is required');\n  }\n\n  const imageIdToPrint = image.imageId;\n  const viewportId = `renderGPUViewport-${imageIdToPrint}`;\n  const imageId = image.imageId;\n  const element = document.createElement('div');\n  element.style.width = `${canvas.width}px`;\n  element.style.height = `${canvas.height}px`;\n  element.style.visibility = 'hidden';\n  element.style.position = 'absolute';\n\n  // Up-sampling the provided canvas to match the device pixel ratio\n  // since we use device pixel ratio to determine the size of the canvas\n  // inside the rendering engine.\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const originalWidth = canvas.width;\n  const originalHeight = canvas.height;\n  canvas.width = originalWidth * devicePixelRatio;\n  canvas.height = originalHeight * devicePixelRatio;\n  canvas.style.width = `${originalWidth}px`;\n  canvas.style.height = `${originalHeight}px`;\n\n  document.body.appendChild(element);\n\n  // add id to the element so we can find it later, and fix the : which is not allowed in css\n  const uniqueId = viewportId.split(':').join('-');\n  element.setAttribute('viewport-id-for-remove', uniqueId);\n\n  const renderingEngine =\n    (getRenderingEngine(renderingEngineId) as RenderingEngine) ||\n    new RenderingEngine(renderingEngineId);\n\n  let viewport = renderingEngine.getViewport(viewportId) as StackViewport;\n\n  if (!viewport) {\n    const stackViewportInput = {\n      viewportId,\n      type: ViewportType.STACK,\n      element,\n      defaultOptions: {\n        suppressEvents: true,\n      },\n    };\n    renderingEngine.enableElement(stackViewportInput);\n    viewport = renderingEngine.getViewport(viewportId) as StackViewport;\n  }\n\n  return new Promise((resolve) => {\n    // Creating a temporary HTML element so that we can\n    // enable it and later disable it without losing the canvas context\n    let elementRendered = false;\n\n    // Create a named function to handle the event\n    const onImageRendered = (eventDetail) => {\n      if (elementRendered) {\n        return;\n      }\n\n      // get the canvas element that is the child of the div\n      const temporaryCanvas = getOrCreateCanvas(element);\n\n      // Copy the temporary canvas to the given canvas\n      const context = canvas.getContext('2d');\n      context.drawImage(\n        temporaryCanvas,\n        0,\n        0,\n        temporaryCanvas.width,\n        temporaryCanvas.height, // source dimensions\n        0,\n        0,\n        canvas.width,\n        canvas.height // destination dimensions\n      );\n\n      elementRendered = true;\n\n      // remove based on id\n      element.removeEventListener(Events.IMAGE_RENDERED, onImageRendered);\n\n      // Ensure pending previous resize calls are done which might have been\n      // triggered by the same disableElement call. This is to avoid potential\n      // grab of the wrong canvas coordinate from the offscreen renderer since\n      // disable might have not finished resizing yet and it will cause weird\n      // copy to on screen from an incorrect location in the offscreen renderer.\n      setTimeout(() => {\n        renderingEngine.disableElement(viewportId);\n\n        // remove all the elements that has the same id\n        const elements = document.querySelectorAll(\n          `[viewport-id-for-remove=\"${uniqueId}\"]`\n        );\n        elements.forEach((element) => {\n          element.remove();\n        });\n      }, 0);\n      resolve(imageId);\n    };\n\n    element.addEventListener(Events.IMAGE_RENDERED, onImageRendered);\n    viewport.renderImageObject(image);\n\n    // force a reset camera to center the image\n    viewport.resetCamera();\n\n    if (modality === 'PT' && !isPTPrescaledWithSUV(image)) {\n      viewport.setProperties({\n        voiRange: {\n          lower: image.minPixelValue,\n          upper: image.maxPixelValue,\n        },\n      });\n    }\n\n    viewport.render();\n  });\n}\n","import { IImage, CPUFallbackEnabledElement } from '../types';\n\nimport getDefaultViewport from '../RenderingEngine/helpers/cpuFallback/rendering/getDefaultViewport';\nimport calculateTransform from '../RenderingEngine/helpers/cpuFallback/rendering/calculateTransform';\nimport drawImageSync from '../RenderingEngine/helpers/cpuFallback/drawImageSync';\n\n/**\n * Renders a cornerstone image object to a canvas.\n * Note: this does not load the image but only takes care of the rendering pipeline\n *\n * @param image - Cornerstone image object\n * @param canvas - Canvas element to render to\n */\nexport default function renderToCanvasCPU(\n  canvas: HTMLCanvasElement,\n  image: IImage,\n  modality?: string,\n  renderingEngineId?: string\n): Promise<string> {\n  const viewport = getDefaultViewport(canvas, image, modality);\n\n  const enabledElement: CPUFallbackEnabledElement = {\n    canvas,\n    viewport,\n    image,\n    renderingTools: {},\n  };\n\n  enabledElement.transform = calculateTransform(enabledElement);\n\n  const invalidated = true;\n  return new Promise((resolve, reject) => {\n    drawImageSync(enabledElement, invalidated);\n    resolve(image.imageId);\n  });\n}\n","import { IImage } from '../types';\n\nimport { loadAndCacheImage } from '../loaders/imageLoader';\nimport * as metaData from '../metaData';\nimport { RequestType } from '../enums';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport renderToCanvasGPU from './renderToCanvasGPU';\nimport renderToCanvasCPU from './renderToCanvasCPU';\nimport { getConfiguration } from '../init';\n\ninterface LoadImageOptions {\n  canvas: HTMLCanvasElement;\n  imageId: string;\n  requestType?: RequestType;\n  priority?: number;\n  renderingEngineId?: string;\n  useCPURendering?: boolean;\n}\n\n/**\n * Loads and renders an imageId to a Canvas. It will use the GPU rendering pipeline\n * for image by default but you can force the CPU rendering pipeline by setting the\n * useCPURendering parameter to true.\n *\n * @example\n * ```\n * const canvas = document.getElementById('myCanvas')\n * const imageId = 'myImageId'\n *\n * loadImageToCanvas(canvas, imageId)\n * ```\n * @param canvas - Canvas element to render to\n * @param imageId - The imageId to render\n * @param requestType - The type of request (default to interaction), can be 'interaction' or 'prefetch' or 'thumbnail'\n * the order of loading for the pool manager is interaction, thumbnail, prefetch\n * @param priority - The priority of the request within the request type (lower is higher priority)\n * @param useCPURendering - Force the use of the CPU rendering pipeline (default to false)\n * @returns - A promise that resolves when the image has been rendered with the imageId\n */\nexport default function loadImageToCanvas(\n  options: LoadImageOptions\n): Promise<string> {\n  const {\n    canvas,\n    imageId,\n    requestType = RequestType.Thumbnail,\n    priority = -5,\n    renderingEngineId = '_thumbnails',\n    useCPURendering = false,\n  } = options;\n\n  const renderFn = useCPURendering ? renderToCanvasCPU : renderToCanvasGPU;\n\n  return new Promise((resolve, reject) => {\n    function successCallback(image: IImage, imageId: string) {\n      const { modality } = metaData.get('generalSeriesModule', imageId) || {};\n\n      image.isPreScaled = image.isPreScaled || image.preScale?.scaled;\n\n      renderFn(canvas, image, modality, renderingEngineId).then(() => {\n        resolve(imageId);\n      });\n    }\n\n    function errorCallback(error: Error, imageId: string) {\n      console.error(error, imageId);\n      reject(error);\n    }\n\n    function sendRequest(imageId, imageIdIndex, options) {\n      return loadAndCacheImage(imageId, options).then(\n        (image) => {\n          successCallback.call(this, image, imageId);\n        },\n        (error) => {\n          errorCallback.call(this, error, imageId);\n        }\n      );\n    }\n\n    const { useNorm16Texture } = getConfiguration().rendering;\n\n    // IMPORTANT: Request type should be passed if not the 'interaction'\n    // highest priority will be used for the request type in the imageRetrievalPool\n    const options = {\n      targetBuffer: {\n        type: useNorm16Texture ? undefined : 'Float32Array',\n      },\n      preScale: {\n        enabled: true,\n      },\n      useRGBA: !!useCPURendering,\n      requestType,\n    };\n\n    imageLoadPoolManager.addRequest(\n      sendRequest.bind(null, imageId, null, options),\n      requestType,\n      { imageId },\n      priority\n    );\n  });\n}\n","import { vec3 } from 'gl-matrix';\nimport { metaData } from '..';\nimport { Point2, Point3 } from '../types';\n\n/**\n * Given the imageId, and 3d coordinates on the world space, it returns the continuos\n * image coordinates (IJ) on the image space. The image space is\n * defined with [0,0] being on the top left corner of the top left pixel,\n * the [1,1] being on the bottom right corner of the top left pixel.\n * @param imageId - The image id\n * @param worldCoords - The 3d coordinates on the world.\n * @returns The 2d coordinates on the image.\n *\n */\nfunction worldToImageCoords(\n  imageId: string,\n  worldCoords: Point3\n): Point2 | undefined {\n  const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n  if (!imagePlaneModule) {\n    throw new Error(`No imagePlaneModule found for imageId: ${imageId}`);\n  }\n\n  // For the image coordinates we need to calculate the transformation matrix\n  // from the world coordinates to the image coordinates.\n\n  const {\n    columnCosines,\n    rowCosines,\n    imagePositionPatient: origin,\n  } = imagePlaneModule;\n\n  let { columnPixelSpacing, rowPixelSpacing } = imagePlaneModule;\n  // Use ||= to convert null and 0 as well as undefined to 1\n  columnPixelSpacing ||= 1;\n  rowPixelSpacing ||= 1;\n\n  // The origin is the image position patient, but since image coordinates start\n  // from [0,0] for the top left hand of the first pixel, and the origin is at the\n  // center of the first pixel, we need to account for this.\n  const newOrigin = vec3.create();\n\n  vec3.scaleAndAdd(newOrigin, origin, columnCosines, -columnPixelSpacing / 2);\n  vec3.scaleAndAdd(newOrigin, newOrigin, rowCosines, -rowPixelSpacing / 2);\n\n  // Get the subtraction vector from the origin to the world coordinates\n  const sub = vec3.create();\n  vec3.sub(sub, worldCoords, newOrigin);\n\n  // Projected distance of the sub vector onto the rowCosines\n  const rowDistance = vec3.dot(sub, rowCosines);\n\n  // Projected distance of the sub vector onto the columnCosines\n  const columnDistance = vec3.dot(sub, columnCosines);\n\n  const imageCoords = [\n    rowDistance / rowPixelSpacing,\n    columnDistance / columnPixelSpacing,\n  ];\n\n  return imageCoords as Point2;\n}\n\nexport default worldToImageCoords;\n","import { vec3 } from 'gl-matrix';\nimport { metaData } from '..';\nimport { Point2, Point3 } from '../types';\n\n/**\n * Given the imageId and a 2d coordinates on the image space with [0,0] being the top left corner\n * of the top left pixel, and options which includes the imageId, it returns the\n * 3d coordinates on the world space.\n * @param imageId - The image id\n * @param imageCoords - The 2d coordinates on the image\n * @returns The 3d coordinates on the world.\n *\n */\nexport default function imageToWorldCoords(\n  imageId: string,\n  imageCoords: Point2\n): Point3 | undefined {\n  const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n\n  if (!imagePlaneModule) {\n    throw new Error(`No imagePlaneModule found for imageId: ${imageId}`);\n  }\n\n  const {\n    columnCosines,\n    rowCosines,\n    imagePositionPatient: origin,\n  } = imagePlaneModule;\n\n  let { columnPixelSpacing, rowPixelSpacing } = imagePlaneModule;\n  // Use ||= to convert null and 0 as well as undefined to 1\n  columnPixelSpacing ||= 1;\n  rowPixelSpacing ||= 1;\n\n  // calculate the image coordinates in the world space\n  const imageCoordsInWorld = vec3.create();\n\n  // move from origin in the direction of the row cosines with the amount of\n  // row pixel spacing times the first element of the image coordinates vector\n  vec3.scaleAndAdd(\n    imageCoordsInWorld,\n    origin,\n    rowCosines,\n    // to accommodate the [0,0] being on the top left corner of the top left pixel\n    // but the origin is at the center of the top left pixel\n    rowPixelSpacing * (imageCoords[0] - 0.5)\n  );\n\n  vec3.scaleAndAdd(\n    imageCoordsInWorld,\n    imageCoordsInWorld,\n    columnCosines,\n    columnPixelSpacing * (imageCoords[1] - 0.5)\n  );\n\n  return Array.from(imageCoordsInWorld) as Point3;\n}\n","import getSliceRange from './getSliceRange';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\nimport {\n  ActorSliceRange,\n  IVolumeViewport,\n  ICamera,\n  VolumeActor,\n} from '../types';\n\n/**\n * Calculates the slice range for the given volume based on its orientation\n * @param viewport - Volume viewport\n * @param volumeId - Id of one of the volumes loaded on the given viewport\n * @returns slice range information\n */\nfunction getVolumeSliceRangeInfo(\n  viewport: IVolumeViewport,\n  volumeId: string\n): {\n  sliceRange: ActorSliceRange;\n  spacingInNormalDirection: number;\n  camera: ICamera;\n} {\n  const camera = viewport.getCamera();\n  const { focalPoint, viewPlaneNormal } = camera;\n  const { spacingInNormalDirection, actorUID } =\n    getTargetVolumeAndSpacingInNormalDir(viewport, camera, volumeId);\n\n  if (!actorUID) {\n    throw new Error(\n      `Could not find image volume with id ${volumeId} in the viewport`\n    );\n  }\n\n  const actorEntry = viewport.getActor(actorUID);\n\n  if (!actorEntry) {\n    console.warn('No actor found for with actorUID of', actorUID);\n    return null;\n  }\n\n  const volumeActor = actorEntry.actor as VolumeActor;\n  const sliceRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint);\n\n  return {\n    sliceRange,\n    spacingInNormalDirection,\n    camera,\n  };\n}\n\nexport default getVolumeSliceRangeInfo;\n","import { IVolumeViewport } from '../types';\nimport getVolumeSliceRangeInfo from './getVolumeSliceRangeInfo';\n\n/**\n * Calculates the number os steps the volume can scroll based on its orientation\n * @param viewport - Volume viewport\n * @param volumeId - Id of one of the volumes loaded on the given viewport\n * @returns number of steps the volume can scroll and its current position\n */\nfunction getVolumeViewportScrollInfo(\n  viewport: IVolumeViewport,\n  volumeId: string\n) {\n  const { sliceRange, spacingInNormalDirection, camera } =\n    getVolumeSliceRangeInfo(viewport, volumeId);\n\n  const { min, max, current } = sliceRange;\n\n  // Now we can see how many steps there are in this direction\n  const numScrollSteps = Math.round((max - min) / spacingInNormalDirection);\n\n  // Find out current frameIndex\n  const fraction = (current - min) / (max - min);\n  const floatingStepNumber = fraction * numScrollSteps;\n  const currentStepIndex = Math.round(floatingStepNumber);\n\n  return {\n    numScrollSteps,\n    currentStepIndex,\n    sliceRangeInfo: {\n      sliceRange,\n      spacingInNormalDirection,\n      camera,\n    },\n  };\n}\n\nexport default getVolumeViewportScrollInfo;\n","import { vec3 } from 'gl-matrix';\nimport { ActorSliceRange, Point3 } from '../types';\n\n/**\n * Given a number of frames, `deltaFrames`,\n * move the `focalPoint` and camera `position` so that it moves forward/backwards\n * `deltaFrames` in the camera's normal direction, and snaps to the nearest frame.\n *\n * @param focalPoint - The focal point to move.\n * @param position - The camera position to move.\n * @param sliceRange - The scroll range used to find the current\n * position in the stack, as well as prevent scrolling past the extent of the volume.\n * @param viewPlaneNormal - The normal direction of the camera.\n * @param spacingInNormalDirection - The spacing of frames the normal direction of the camera.\n * @param deltaFrames - The number of frames to jump.\n *\n * @returns The `newFocalPoint` and `newPosition` of the camera.\n */\nexport default function snapFocalPointToSlice(\n  focalPoint: Point3,\n  position: Point3,\n  sliceRange: ActorSliceRange,\n  viewPlaneNormal: Point3,\n  spacingInNormalDirection: number,\n  deltaFrames: number\n): { newFocalPoint: Point3; newPosition: Point3 } {\n  const { min, max, current } = sliceRange;\n\n  // Get the current offset off the camera position so we can add it on at the end.\n  const posDiffFromFocalPoint = vec3.create();\n\n  vec3.sub(posDiffFromFocalPoint, <vec3>position, <vec3>focalPoint);\n\n  // Now we can see how many steps there are in this direction\n  const steps = Math.round((max - min) / spacingInNormalDirection);\n\n  // Find out current frameIndex\n  const fraction = (current - min) / (max - min);\n  const floatingStepNumber = fraction * steps;\n  let frameIndex = Math.round(floatingStepNumber);\n\n  // Dolly the focal point back to min slice focal point.\n  let newFocalPoint = <Point3>[\n    focalPoint[0] -\n      viewPlaneNormal[0] * floatingStepNumber * spacingInNormalDirection,\n    focalPoint[1] -\n      viewPlaneNormal[1] * floatingStepNumber * spacingInNormalDirection,\n    focalPoint[2] -\n      viewPlaneNormal[2] * floatingStepNumber * spacingInNormalDirection,\n  ];\n\n  // Increment the slice number by deltaFrames.\n  frameIndex += deltaFrames;\n\n  // Clamp sliceNumber to volume.\n  if (frameIndex > steps) {\n    frameIndex = steps;\n  } else if (frameIndex < 0) {\n    frameIndex = 0;\n  }\n\n  // Dolly the focal towards to the correct frame focal point.\n  const newSlicePosFromMin = frameIndex * spacingInNormalDirection;\n\n  newFocalPoint = <Point3>[\n    newFocalPoint[0] + viewPlaneNormal[0] * newSlicePosFromMin,\n    newFocalPoint[1] + viewPlaneNormal[1] * newSlicePosFromMin,\n    newFocalPoint[2] + viewPlaneNormal[2] * newSlicePosFromMin,\n  ];\n\n  const newPosition = <Point3>[\n    newFocalPoint[0] + posDiffFromFocalPoint[0],\n    newFocalPoint[1] + posDiffFromFocalPoint[1],\n    newFocalPoint[2] + posDiffFromFocalPoint[2],\n  ];\n\n  return { newFocalPoint, newPosition };\n}\n","import { getRenderingEngine } from '../RenderingEngine';\nimport { getRenderingEngines } from '../RenderingEngine/getRenderingEngine';\nimport { IStackViewport, IVolumeViewport } from '../types';\n\ntype Viewport = IStackViewport | IVolumeViewport;\n\n/**\n * Get the viewport that is rendering the image with the given imageURI (imageId without\n * the loader schema), this can be a stackViewport or a volumeViewport.\n *\n * @param renderingEngine - The rendering engine that is rendering the viewports\n * @param imageURI - The imageURI of the image that is requested\n * @returns A Viewport\n */\nexport default function getViewportsWithImageURI(\n  imageURI: string,\n  renderingEngineId?: string\n): Array<Viewport> {\n  // If rendering engine is not provided, use all rendering engines\n  let renderingEngines;\n  if (renderingEngineId) {\n    renderingEngines = [getRenderingEngine(renderingEngineId)];\n  } else {\n    renderingEngines = getRenderingEngines();\n  }\n\n  const viewports = [];\n  renderingEngines.forEach((renderingEngine) => {\n    const stackViewports = renderingEngine.getStackViewports();\n\n    const filteredStackViewports = stackViewports.filter((viewport) =>\n      viewport.hasImageURI(imageURI)\n    );\n\n    // If no stack viewport found but a volumeViewport is rendering the same data\n    const volumeViewports = renderingEngine.getVolumeViewports();\n\n    const filteredVolumeViewports = volumeViewports.filter((viewport) =>\n      viewport.hasImageURI(imageURI)\n    );\n\n    viewports.push(...filteredStackViewports, ...filteredVolumeViewports);\n  });\n\n  return viewports;\n}\n","import { vec3 } from 'gl-matrix';\nimport { planar } from '.';\nimport { metaData } from '..';\nimport { IStackViewport, Point3 } from '../types';\n\n/**\n * Given a point in 3D space and a viewport it returns the index of the closest imageId, it assumes that stack images are sorted according to their sliceLocation\n * @param point - [A, B, C] coordinates of the point in 3D space\n * @param viewport - The StackViewport to search for the closest imageId\n *\n * @returns The imageId index of the closest imageId or null if no imageId is found\n */\nexport default function getClosestStackImageIndexForPoint(\n  point: Point3,\n  viewport: IStackViewport\n): number | null {\n  const minimalDistance = calculateMinimalDistanceForStackViewport(\n    point,\n    viewport\n  );\n  return minimalDistance ? minimalDistance.index : null;\n}\n\n//assumes that imageIds are sorted by slice location\nexport function calculateMinimalDistanceForStackViewport(\n  point: Point3,\n  viewport: IStackViewport\n): { distance: number; index: number } | null {\n  const imageIds = viewport.getImageIds();\n  const currentImageIdIndex = viewport.getCurrentImageIdIndex();\n\n  if (imageIds.length === 0) {\n    return null;\n  }\n\n  const getDistance = (imageId: string): null | number => {\n    const planeMetadata = getPlaneMetadata(imageId);\n    if (!planeMetadata) {\n      return null;\n    }\n    const plane = planar.planeEquation(\n      planeMetadata.planeNormal,\n      planeMetadata.imagePositionPatient\n    );\n    const distance = planar.planeDistanceToPoint(plane, point);\n    return distance;\n  };\n\n  const closestStack = {\n    distance: getDistance(imageIds[currentImageIdIndex]) ?? Infinity,\n    index: currentImageIdIndex,\n  };\n\n  //check higher indices\n  const higherImageIds = imageIds.slice(currentImageIdIndex + 1);\n\n  for (let i = 0; i < higherImageIds.length; i++) {\n    const id = higherImageIds[i];\n    const distance = getDistance(id);\n    if (distance === null) {\n      continue;\n    }\n    if (distance <= closestStack.distance) {\n      closestStack.distance = distance;\n      closestStack.index = i + currentImageIdIndex + 1;\n    } else {\n      break;\n    }\n  }\n  //check lower indices\n  const lowerImageIds = imageIds.slice(0, currentImageIdIndex);\n  for (let i = lowerImageIds.length - 1; i >= 0; i--) {\n    const id = lowerImageIds[i];\n    const distance = getDistance(id);\n    if (distance === null || distance === closestStack.distance) {\n      continue;\n    }\n    if (distance < closestStack.distance) {\n      closestStack.distance = distance;\n      closestStack.index = i;\n    } else {\n      break;\n    }\n  }\n  return closestStack.distance === Infinity ? null : closestStack;\n}\n\nfunction getPlaneMetadata(imageId: string): null | {\n  rowCosines: Point3;\n  columnCosines: Point3;\n  imagePositionPatient: Point3;\n  planeNormal: Point3;\n} {\n  const targetImagePlane = metaData.get('imagePlaneModule', imageId);\n\n  if (\n    !targetImagePlane ||\n    !(\n      targetImagePlane.rowCosines instanceof Array &&\n      targetImagePlane.rowCosines.length === 3\n    ) ||\n    !(\n      targetImagePlane.columnCosines instanceof Array &&\n      targetImagePlane.columnCosines.length === 3\n    ) ||\n    !(\n      targetImagePlane.imagePositionPatient instanceof Array &&\n      targetImagePlane.imagePositionPatient.length === 3\n    )\n  ) {\n    return null;\n  }\n  const {\n    rowCosines,\n    columnCosines,\n    imagePositionPatient,\n  }: {\n    rowCosines: Point3;\n    columnCosines: Point3;\n    imagePositionPatient: Point3;\n  } = targetImagePlane;\n\n  const rowVec = vec3.set(vec3.create(), ...rowCosines);\n  const colVec = vec3.set(vec3.create(), ...columnCosines);\n  const planeNormal = vec3.cross(vec3.create(), rowVec, colVec) as Point3;\n\n  return { rowCosines, columnCosines, imagePositionPatient, planeNormal };\n}\n","import { mat4 } from 'gl-matrix';\nimport { addProvider } from '../metaData';\n\nconst state = {};\n\n/**\n * Simple metadataProvider object to store metadata for spatial registration module.\n */\nconst spatialRegistrationMetadataProvider = {\n  /* Adding a new entry to the state object. */\n  add: (query: string[], payload: mat4): void => {\n    const [viewportId1, viewportId2] = query;\n    const entryId = `${viewportId1}_${viewportId2}`;\n\n    if (!state[entryId]) {\n      state[entryId] = {};\n    }\n\n    state[entryId] = payload;\n  },\n\n  get: (type: string, query: string[]): mat4 => {\n    if (type !== 'spatialRegistrationModule') {\n      return;\n    }\n\n    const [viewportId1, viewportId2] = query;\n\n    // check both ways\n    const entryId = `${viewportId1}_${viewportId2}`;\n\n    if (state[entryId]) {\n      return state[entryId];\n    }\n\n    const entryIdReverse = `${viewportId2}_${viewportId1}`;\n\n    if (state[entryIdReverse]) {\n      return mat4.invert(mat4.create(), state[entryIdReverse]);\n    }\n  },\n};\n\naddProvider(\n  spatialRegistrationMetadataProvider.get.bind(\n    spatialRegistrationMetadataProvider\n  )\n);\n\nexport default spatialRegistrationMetadataProvider;\n","import { vec3, mat4 } from 'gl-matrix';\nimport { IStackViewport } from '../types';\nimport { StackViewport } from '../RenderingEngine';\nimport spatialRegistrationMetadataProvider from './spatialRegistrationMetadataProvider';\nimport { metaData } from '..';\nimport isEqual from './isEqual';\n\n/**\n * It calculates the registration matrix between two viewports (currently only\n * translation is supported)\n * If the viewports are in the same frame of reference, it will return early,\n * but otherwise it will use the current image's metadata to calculate the\n * translation between the two viewports and adds it to the spatialRegistrationModule\n * metadata provider\n *\n *\n * @param viewport1 - The first stack viewport\n * @param viewport2 - The second stack viewport\n */\nfunction calculateViewportsSpatialRegistration(\n  viewport1: IStackViewport,\n  viewport2: IStackViewport\n): void {\n  if (\n    !(viewport1 instanceof StackViewport) ||\n    !(viewport2 instanceof StackViewport)\n  ) {\n    throw new Error(\n      'calculateViewportsSpatialRegistration: Both viewports must be StackViewports, volume viewports are not supported yet'\n    );\n  }\n\n  const isSameFrameOfReference =\n    viewport1.getFrameOfReferenceUID() === viewport2.getFrameOfReferenceUID();\n\n  if (isSameFrameOfReference) {\n    return;\n  }\n\n  const imageId1 = viewport1.getCurrentImageId();\n  const imageId2 = viewport2.getCurrentImageId();\n\n  const imagePlaneModule1 = metaData.get('imagePlaneModule', imageId1);\n  const imagePlaneModule2 = metaData.get('imagePlaneModule', imageId2);\n\n  const isSameImagePlane =\n    imagePlaneModule1 &&\n    imagePlaneModule2 &&\n    isEqual(\n      imagePlaneModule1.imageOrientationPatient,\n      imagePlaneModule2.imageOrientationPatient\n    );\n\n  if (!isSameImagePlane) {\n    throw new Error(\n      'Viewport spatial registration only supported for same orientation (hence translation only) for now'\n    );\n  }\n\n  const imagePositionPatient1 = imagePlaneModule1.imagePositionPatient;\n  const imagePositionPatient2 = imagePlaneModule2.imagePositionPatient;\n\n  const translation = vec3.subtract(\n    vec3.create(),\n    imagePositionPatient1,\n    imagePositionPatient2\n  );\n\n  const mat = mat4.fromTranslation(mat4.create(), translation);\n\n  spatialRegistrationMetadataProvider.add([viewport1.id, viewport2.id], mat);\n}\n\nexport default calculateViewportsSpatialRegistration;\n","import {\n  IImageData,\n  IStackViewport,\n  IVolumeViewport,\n  Point2,\n  Point3,\n} from '../types';\n\n/**\n * Given a viewport, return the corners of the image in the viewport in world coordinates.\n * Note that this is different than the corners of the canvas in world coordinates since\n * an image can be zoomed out and the canvas can be larger than the image; hence, the\n * corners of the canvas in world coordinates will be outside the image.\n *\n * @param viewport - The viewport to get the corners of.\n * @returns The corners of the image in the viewport in world coordinates.\n */\nexport default function getViewportImageCornersInWorld(\n  viewport: IStackViewport | IVolumeViewport\n): Point3[] {\n  const { imageData, dimensions } = viewport.getImageData() as IImageData;\n  const { canvas } = viewport;\n\n  const topLeftCanvas: Point2 = [0, 0];\n  const topRightCanvas: Point2 = [canvas.width, 0];\n  const bottomRightCanvas: Point2 = [canvas.width, canvas.height];\n  const bottomLeftCanvas: Point2 = [0, canvas.height];\n\n  const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n  const topRightWorld = viewport.canvasToWorld(topRightCanvas);\n  const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n  const bottomLeftWorld = viewport.canvasToWorld(bottomLeftCanvas);\n\n  const topLeftImage = imageData.worldToIndex(topLeftWorld);\n  const topRightImage = imageData.worldToIndex(topRightWorld);\n  const bottomRightImage = imageData.worldToIndex(bottomRightWorld);\n  const bottomLeftImage = imageData.worldToIndex(bottomLeftWorld);\n\n  return _getStackViewportImageCorners({\n    dimensions,\n    imageData,\n    topLeftImage,\n    topRightImage,\n    bottomRightImage,\n    bottomLeftImage,\n    topLeftWorld,\n    topRightWorld,\n    bottomRightWorld,\n    bottomLeftWorld,\n  });\n}\n\nfunction _getStackViewportImageCorners({\n  dimensions,\n  imageData,\n  topLeftImage,\n  topRightImage,\n  bottomRightImage,\n  bottomLeftImage,\n  topLeftWorld,\n  topRightWorld,\n  bottomRightWorld,\n  bottomLeftWorld,\n}) {\n  const topLeftImageWorld = _isInBounds(topLeftImage, dimensions)\n    ? topLeftWorld\n    : (imageData.indexToWorld([0, 0, 0]) as Point3);\n\n  const topRightImageWorld = _isInBounds(topRightImage, dimensions)\n    ? topRightWorld\n    : (imageData.indexToWorld([dimensions[0] - 1, 0, 0]) as Point3);\n\n  const bottomRightImageWorld = _isInBounds(bottomRightImage, dimensions)\n    ? bottomRightWorld\n    : (imageData.indexToWorld([\n        dimensions[0] - 1,\n        dimensions[1] - 1,\n        0,\n      ]) as Point3);\n\n  const bottomLeftImageWorld = _isInBounds(bottomLeftImage, dimensions)\n    ? bottomLeftWorld\n    : (imageData.indexToWorld([0, dimensions[1] - 1, 0]) as Point3);\n\n  return [\n    topLeftImageWorld,\n    topRightImageWorld,\n    bottomLeftImageWorld,\n    bottomRightImageWorld,\n  ];\n}\n\nfunction _isInBounds(imageCoord, dimensions) {\n  return (\n    imageCoord[0] > 0 ||\n    imageCoord[0] < dimensions[0] - 1 ||\n    imageCoord[1] > 0 ||\n    imageCoord[1] < dimensions[1] - 1 ||\n    imageCoord[2] > 0 ||\n    imageCoord[2] < dimensions[2] - 1\n  );\n}\n","import { get as metaDataGet } from '../metaData';\nimport { ScalingParameters } from '../types';\n\n/**\n * It returns the scaling parameters for the image with the given imageId. This can be\n * used to get passed (as an option) to the imageLoader in order to apply scaling to the image inside\n * the imageLoader.\n * @param imageId - The imageId of the image\n * @returns ScalingParameters\n */\nexport default function getScalingParameters(\n  imageId: string\n): ScalingParameters {\n  const modalityLutModule = metaDataGet('modalityLutModule', imageId) || {};\n  const generalSeriesModule = metaDataGet('generalSeriesModule', imageId) || {};\n\n  const { modality } = generalSeriesModule;\n\n  const scalingParameters = {\n    rescaleSlope: modalityLutModule.rescaleSlope,\n    rescaleIntercept: modalityLutModule.rescaleIntercept,\n    modality,\n  };\n\n  const suvFactor = metaDataGet('scalingModule', imageId) || {};\n\n  return {\n    ...scalingParameters,\n    ...(modality === 'PT' && {\n      suvbw: suvFactor.suvbw,\n      suvbsa: suvFactor.suvbsa,\n      suvlbm: suvFactor.suvlbm,\n    }),\n  };\n}\n","import { ScalingParameters } from '../types';\n\n/**\n * If the scalar data is a Uint8Array, return 'Uint8Array'. If the scalar data is a\n * Float32Array, return 'Float32Array'. If the scalar data is a Int16Array, return\n * 'Int16Array'. If the scalar data is a Uint16Array, return 'Uint16Array'. If the\n * scalar data is none of the above, throw an error.\n * @param {ScalingParameters} scalingParameters - {\n * @param {any} [scalarData] - The data to be converted.\n * @returns The data type of the scalar data.\n */\nexport default function getScalarDataType(\n  scalingParameters: ScalingParameters,\n  scalarData?: any\n): string {\n  let type;\n\n  if (scalarData && scalarData instanceof Uint8Array) {\n    type = 'Uint8Array';\n  } else if (scalarData instanceof Float32Array) {\n    type = 'Float32Array';\n  } else if (scalarData instanceof Int16Array) {\n    type = 'Int16Array';\n  } else if (scalarData instanceof Uint16Array) {\n    type = 'Uint16Array';\n  } else {\n    throw new Error('Unsupported array type');\n  }\n\n  return type;\n}\n","import { StackViewport, Types } from '..';\nimport getEnabledElement from '../getEnabledElement';\n\n/**\n * Gets the IImage rendered by the given element. This is provided as a\n * convenience for the legacy cornerstone getImage function. However it is\n * encouraged for IStackViewport.getImage to be used instead.\n * @param element - the element rendering/containing the image\n * @returns the image\n */\nfunction getImageLegacy(element: HTMLDivElement): Types.IImage | undefined {\n  const enabledElement = getEnabledElement(element);\n\n  if (!enabledElement) {\n    return;\n  }\n\n  const { viewport } = enabledElement;\n\n  if (!(viewport instanceof StackViewport)) {\n    throw new Error(\n      `An image can only be fetched for a stack viewport and not for a viewport of type: ${viewport.type}`\n    );\n  }\n\n  return viewport.getCornerstoneImage();\n}\n\nexport default getImageLegacy;\n","import BaseVolumeViewport from '../BaseVolumeViewport';\nimport type {\n  IVolumeInput,\n  IRenderingEngine,\n  IVolumeViewport,\n} from '../../types';\n\n/**\n * Similar to {@link addVolumesToViewports} it adds volumes to viewports; however,\n * this method will Set the volumes on the viewports which means that the previous\n * volumes will be removed.\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function setVolumesForViewports(\n  renderingEngine: IRenderingEngine,\n  volumeInputs: Array<IVolumeInput>,\n  viewportIds: Array<string>,\n  immediateRender = false,\n  suppressEvents = false\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  viewportIds.forEach((viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of BaseVolumeViewport, throw\n    if (!(viewport instanceof BaseVolumeViewport)) {\n      throw new Error(\n        'setVolumesForViewports only supports VolumeViewport and VolumeViewport3D'\n      );\n    }\n  });\n\n  const setVolumePromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as IVolumeViewport;\n\n    await viewport.setVolumes(volumeInputs, immediateRender, suppressEvents);\n  });\n\n  await Promise.all(setVolumePromises);\n\n  return;\n}\n\nexport default setVolumesForViewports;\n","import { VolumeViewport } from '../';\nimport BaseVolumeViewport from '../BaseVolumeViewport';\nimport type { IVolumeInput, IRenderingEngine } from '../../types';\n\n/**\n * For each provided viewport it adds a volume to the viewport using the\n * provided renderingEngine\n *\n *\n * @param renderingEngine - The rendering engine to use to get viewports from\n * @param volumeInputs - Array of volume inputs including volumeId. Other properties\n * such as visibility, callback, blendMode, slabThickness are optional\n * @param viewportIds - Array of viewport IDs to add the volume to\n * @param immediateRender - If true, the volumes will be rendered immediately\n * @returns A promise that resolves when all volumes have been added\n */\nasync function addVolumesToViewports(\n  renderingEngine: IRenderingEngine,\n  volumeInputs: Array<IVolumeInput>,\n  viewportIds: Array<string>,\n  immediateRender = false,\n  suppressEvents = false\n): Promise<void> {\n  // Check if all viewports are volumeViewports\n  for (const viewportId of viewportIds) {\n    const viewport = renderingEngine.getViewport(viewportId);\n\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n\n    // if not instance of BaseVolumeViewport, throw\n    if (!(viewport instanceof BaseVolumeViewport)) {\n      console.warn(\n        `Viewport with Id ${viewportId} is not a BaseVolumeViewport. Cannot add volume to this viewport.`\n      );\n\n      return;\n    }\n  }\n\n  const addVolumePromises = viewportIds.map(async (viewportId) => {\n    const viewport = renderingEngine.getViewport(viewportId) as VolumeViewport;\n\n    await viewport.addVolumes(volumeInputs, immediateRender, suppressEvents);\n  });\n\n  await Promise.all(addVolumePromises);\n  return;\n}\n\nexport default addVolumesToViewports;\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__9199__","__WEBPACK_EXTERNAL_MODULE__7468__","__WEBPACK_EXTERNAL_MODULE__4795__","__WEBPACK_EXTERNAL_MODULE__1038__","__WEBPACK_EXTERNAL_MODULE__1441__","__WEBPACK_EXTERNAL_MODULE__8197__","__WEBPACK_EXTERNAL_MODULE__9821__","__WEBPACK_EXTERNAL_MODULE__2976__","__WEBPACK_EXTERNAL_MODULE__8807__","__WEBPACK_EXTERNAL_MODULE__6215__","__WEBPACK_EXTERNAL_MODULE__7283__","__WEBPACK_EXTERNAL_MODULE__785__","__WEBPACK_EXTERNAL_MODULE__573__","__WEBPACK_EXTERNAL_MODULE__7953__","__WEBPACK_EXTERNAL_MODULE__7903__","__WEBPACK_EXTERNAL_MODULE__8847__","__WEBPACK_EXTERNAL_MODULE__3739__","__WEBPACK_EXTERNAL_MODULE__6009__","__WEBPACK_EXTERNAL_MODULE__1864__","__WEBPACK_EXTERNAL_MODULE__7896__","__WEBPACK_EXTERNAL_MODULE__9861__","__WEBPACK_EXTERNAL_MODULE__8281__","__WEBPACK_EXTERNAL_MODULE__2329__","__WEBPACK_EXTERNAL_MODULE__673__","__WEBPACK_EXTERNAL_MODULE__2348__","__WEBPACK_EXTERNAL_MODULE__2070__","__WEBPACK_EXTERNAL_MODULE__7474__","__WEBPACK_EXTERNAL_MODULE__6610__","__WEBPACK_EXTERNAL_MODULE__8021__","__WEBPACK_EXTERNAL_MODULE__6643__","__WEBPACK_EXTERNAL_MODULE__1128__","__WEBPACK_EXTERNAL_MODULE__7664__","__WEBPACK_EXTERNAL_MODULE__1474__","__WEBPACK_EXTERNAL_MODULE__2394__","__WEBPACK_EXTERNAL_MODULE__582__","__WEBPACK_EXTERNAL_MODULE__7482__","__WEBPACK_EXTERNAL_MODULE__6343__","__WEBPACK_EXTERNAL_MODULE__4363__","__WEBPACK_EXTERNAL_MODULE__3982__","__WEBPACK_EXTERNAL_MODULE__6130__","__WEBPACK_EXTERNAL_MODULE__298__","__WEBPACK_EXTERNAL_MODULE__2398__","__WEBPACK_EXTERNAL_MODULE__4388__","__WEBPACK_EXTERNAL_MODULE__2643__","__WEBPACK_EXTERNAL_MODULE__9395__","__WEBPACK_EXTERNAL_MODULE__3948__","__WEBPACK_EXTERNAL_MODULE__6478__","__WEBPACK_EXTERNAL_MODULE__6914__","_typeof","_regeneratorRuntime","__esModule","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","d","a","definition","o","get","prop","r","Events","RequestType","ViewportType","InterpolationType","BlendMode","vtkConstants","BlendModes","COMPOSITE_BLEND","MAXIMUM_INTENSITY_BLEND","MINIMUM_INTENSITY_BLEND","AVERAGE_INTENSITY_BLEND","OrientationAxis","SharedArrayBufferModes","GeometryType","ContourType","VOILUTFunctionType","DynamicOperatorType","CalibrationTypes","ViewportStatus","hotIron","numOfColors","colors","pet","numColors","hotMetalBlue","pet20Step","gray","gamma","segmentedData","red","green","blue","jet","hsv","hot","cool","spring","summer","autumn","winter","bone","copper","spectral","coolwarm","blues","RENDERING_DEFAULTS","MINIMUM_SLAB_THICKNESS","MAXIMUM_RAY_DISTANCE","freeze","deepFreeze","_step","_iterator","_createForOfIteratorHelper","getOwnPropertyNames","s","e","f","axial","viewPlaneNormal","viewUp","sagittal","coronal","gradientOpacity","specularPower","scalarOpacity","specular","shade","ambient","colorTransfer","diffuse","interpolation","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_toPropertyKey","input","hint","prim","toPrimitive","res","String","_defineProperty","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","imageIdToURI","imageId","colonIndex","indexOf","substring","cache","id","set","re","renderingEngineId","delete","getAll","renderingEngines","map","sort","b","getRenderingEngine","renderingEngineCache","getRenderingEngines","isMergeableObject","toString","cloneIfNecessary","optionsArgument","clone","deepMerge","Array","isArray","defaultArrayMerge","source","destination","array","arrayMerge","mergeObject","csRenderInitialized","useSharedArrayBuffer","sharedArrayBufferMode","defaultConfig","gpuTier","detectGPUConfig","rendering","useCPURendering","preferSizeOverAccuracy","useNorm16Texture","strictZSpacingForVolumeViewport","config","_hasActiveWebGLContext","canvas","gl","document","createElement","getContext","WebGLRenderingContext","WebGL2RenderingContext","init","_init","_callee","configuration","_args","_context","console","log","t0","getGPUTier","tier","setUseSharedArrayBuffer","setUseCPURendering","status","_updateRenderingPipelinesForAllViewports","setPreferSizeOverAccuracy","resetUseCPURendering","getShouldUseCPURendering","mode","SharedArrayBuffer","_unused","hasSharedArrayBuffer","warn","resetUseSharedArrayBuffer","getShouldUseSharedArrayBuffer","isCornerstoneInitialized","getConfiguration","setConfiguration","c","engine","getViewports","viewport","_viewport$updateRende","updateRenderingPipeline","DEFAULT_VALUES","updatedFrames","extend","publicAPI","model","initialValues","assign","vtkOpenGLTexture","classHierarchy","superCreate3DFilterableFromRaw","create3DFilterableFromRaw","width","height","depth","numComps","dataType","data","inputDataType","inputNumComps","update3DFromRaw","bytesPerVoxel","TypedArrayConstructor","_openGLRenderWindow","activateTexture","createTexture","bind","Uint8Array","Int16Array","Uint16Array","Float32Array","fillSubImage3D","generateMipmap","deactivate","frameIndex","buffer","zOffset","components","rowLength","MAX_TEXTURE_SIZE","getParameter","blockHeight","Math","floor","min","_getConfiguration$ren","multiRowBlockLength","multiRowBlockLengthInBytes","normalBlocks","lastBlockHeight","multiRowLastBlockLength","block","yOffset","dataView","useHalfFloat","idx","HalfFloat","texSubImage3D","format","openGLDataType","getTextureParameters","setUpdatedFrame","vtkStreamingOpenGLTexture","newInstance","macro","ImageVolume","Map","volumeId","metadata","dimensions","spacing","origin","direction","imageData","scalarData","sizeInBytes","numVoxels","scaling","referencedVolumeId","_imageIds","newImageIds","_reprocessImageIds","_this","_imageIdsIndexMap","clear","_imageURIsIndexMap","imageURI","Int8Array","Uint8ClampedArray","Int32Array","Uint32Array","Float64Array","releaseGraphicsResources","CornerstoneEventTarget","listeners","callback","stack","stackLength","splice","event","defaultPrevented","triggerEvent","el","eventTarget","detail","CustomEvent","cancelable","dispatchEvent","Cache","newMaxCacheSize","errorMessage","concat","_maxCacheSize","byteLength","getBytesAvailable","_imageCacheSize","_volumeCacheSize","imageLoadObject","_imageCache","cancelFn","decache","cachedVolume","_volumeCache","volumeLoadObject","volume","cancelLoading","imageIterator","_imageIterator$next","removeImageLoadObject","purgeVolumeCache","volumeIterator","_volumeIterator$next","removeVolumeLoadObject","timeStamp","Date","now","geometryId","cachedGeometry","_geometryCache","geometry","cachedImage","_incrementImageCacheSize","eventDetails","_decacheImage","_incrementVolumeCacheSize","_decacheVolume","geometryLoadObject","has","loaded","promise","Number","catch","increment","getMaxCacheSize","getCacheSize","numBytes","volumeImageIds","bytesAvailable","cachedImages","from","cachedImageIds","im","imageIdsToPurge","filter","includes","_step2","_iterator2","_this2","sharedCacheKey","image","toFixed","isCacheable","decacheIfNecessaryUntilBytesAvailable","volumeIds","imageIdToUse","_i","_volumeIds","_volume$imageIds","imageIds","imageIdIndex","getImageURIIndex","imageURIToUse","foundImageId","find","_this3","uuidv4","replace","crypto","getRandomValues","createInternalVTKRepresentation","numComponents","PhotometricInterpretation","vtkImageData","dataArrayAttrs","numberOfComponents","setDimensions","setSpacing","setDirection","setOrigin","isDynamicVolume","scalarDataArrays","vtkScalarArray","vtkDataArray","_objectSpread","getPointData","addArray","setActiveScalars","addScalarDataArraysToImageData","getScalarDataArrays","scalarArray","setScalars","addScalarDataToImageData","getScalarData","unknownVolumeLoader","volumeLoaders","loadVolumeFromVolumeLoader","options","scheme","loader","errorObject","loadVolume","createAndCacheVolume","_x","_x2","_createAndCacheVolume","createAndCacheDerivedVolume","_x3","_x4","_createAndCacheDerivedVolume","_callee2","referencedVolume","targetBuffer","scalarLength","TypedArray","volumeScalarData","derivedImageData","derivedVolume","_context2","sharedArrayBuffer","cloneDeep","createLocalVolume","preventCache","registerVolumeLoader","volumeLoader","getVolumeLoaderSchemes","registerUnknownVolumeLoader","oldVolumeLoader","scalarTexture","vtkVolumeMapper","superDelete","vtkSharedVolumeMapper","createVolumeMapper","volumeMapper","setInputData","getSpacing","sampleDistance","setMaximumSamplesPerRay","setSampleDistance","setScalarTexture","RequestPoolManager","interaction","thumbnail","prefetch","requestPool","grabDelay","awake","numRequests","maxNumRequests","timeoutHandle","window","clearTimeout","requestFn","additionalDetails","priority","requestDetails","startGrabbing","filterFunction","requestType","requestsToSend","getNextRequest","finally","startAgain","getSortedPriorityGroups","shift","hasRemainingInteractionRequests","sendRequests","hasRemainingThumbnailRequests","hasRemainingPrefetchRequests","setTimeout","_this4","imageLoadPoolManager","setMaxSimultaneousRequests","unknownImageLoader","imageLoaders","loadImageFromCacheOrVolume","cachedVolumeInfo","loadStatus","convertToCornerstoneImage","loadImageFromImageLoader","loadImage","loadAndCacheImage","loadAndCacheImages","cancelLoadImage","_ref","cancelLoadImages","cancelLoadAll","requests","loadObject","_requestDetails$addit","cancel","registerImageLoader","imageLoader","registerUnknownImageLoader","oldImageLoader","unregisterAllImageLoaders","providers","addProvider","provider","removeProvider","removeAllProviders","getMetaData","query","toWindowLevel","low","high","windowWidth","abs","windowCenter","toLowHighRange","lower","upper","getMinMax","storedPixelData","storedPixel","max","numPixels","index","PRIORITY","REQUEST_TYPE","_setDefaultVolumeVOI","volumeActor","imageVolume","use16BitTexture","voi","_voi","getVOIFromMetadata","getVOIFromMinMax","handlePreScaledVolume","getProperty","getRGBTransferFunction","setMappingRange","modality","_imageVolume$scaling","isPreScaled","PT","suvbw","_isCurrentImagePTPrescaled","metaData","voiLutModule","_windowLevel$toLowHig","windowLevel","_x5","_getVOIFromMinMax","generalSeriesModule","modalityLutModule","numImages","bytesPerImage","voxelsPerImage","bytePerPixel","scalingParameters","scalingParametersToUse","suvFactor","byteOffset","imageScalarData","_getMinMax","BYTES_PER_ELEMENT","rescaleSlope","rescaleIntercept","preScale","enabled","getPixelData","_getImageScalarDataFromImageVolume","volumeBuffer","volumeBufferView","_createVolumeActor","element","viewportId","suppressEvents","blendMode","setBlendMode","vtkVolume","setMapper","getScalars","getNumberOfComponents","setIndependentComponents","setDefaultVolumeVOI","triggerVOIModified","voiRange","getRange","voiModifiedEventDetail","range","VIEWPORT_ELEMENT","CANVAS_CSS_CLASS","getOrCreateCanvas","canvasSelector","viewportElement","internalDiv","querySelector","div","style","position","classList","add","appendChild","createViewportElement","createCanvas","arr","len","arr2","minLen","test","_toConsumableArray","vtkOpenGLVolumeMapper","previousState","buildBufferObjects","ren","actor","currentInput","scalars","vprop","jitterTexture","getHandle","oTable","random","setMinificationFilter","Filter","setMagnificationFilter","create2DFromRaw","VtkDataTypes","numComp","numIComps","getIndependentComponents","getMTime","opacityTextureString","oWidth","oSize","ofTable","tmpTable","ofun","getScalarOpacity","opacityFactor","renderable","getSampleDistance","getScalarOpacityUnitDistance","oRange","getTable","pow","opacityTexture","getWebgl2","getExtension","colorTextureString","cWidth","cTable","cfun","cRange","colorTexture","scalarTextureString","dims","getDimensions","previousTextureParameters","getDataType","getData","shouldReset","previousTextureSize","setOglNorm16Ext","resetFormatAndType","getPreferSizeOverAccuracy","tris","getCABO","getElementCount","ptsArray","cellArray","points","setName","cells","createVBO","Representation","cellOffset","VBOBuildTime","modified","getRenderTargetSize","_useSmallViewport","_smallViewportWidth","_smallViewportHeight","_model$_openGLRendere","_openGLRenderer","getTiledSizeAndOrigin","usize","vsize","getRenderTargetOffset","_model$_openGLRendere2","lowerLeftU","lowerLeftV","vtkStreamingOpenGLVolumeMapper","vtkViewNodeFactory","createNode","dataObject","isDeleted","cpt","className","getClassName","isObject","overrides","getModelInitialValues","vn","setMyFactory","getScalarTexture","vtkStreamingOpenGLViewNodeFactory","registerOverride","vtkOpenGLActor","vtkOpenGLActor2D","vtkOpenGLCamera","vtkOpenGLGlyph3DMapper","vtkOpenGLImageMapper","vtkOpenGLImageSlice","vtkOpenGLPolyDataMapper","vtkOpenGLPixelSpaceCallbackMapper","vtkOpenGLRenderer","vtkOpenGLSkybox","vtkOpenGLSphereMapper","vtkOpenGLStickMapper","vtkOpenGLVolume","vtkOpenGLRenderWindow","myFactory","vtkStreamingOpenGLRenderWindow","background","container","invokeResize","renderWindow","vtkRenderWindow","rendererMap","openGLRenderWindow","addView","interactor","vtkRenderWindowInteractor","setView","initialize","addRenderer","renderer","vtkRenderer","destroy","getInteractor","removeRenderer","getRenderer","getRenderers","resize","_model$container","setSize","render","setContainer","vtkOffscreenMultiRenderWindow","_assertThisInitialized","ReferenceError","_getPrototypeOf","_get","Reflect","property","receiver","base","getOwnPropertyDescriptor","_setPrototypeOf","p","_inherits","subClass","superClass","_possibleConstructorReturn","isImageActor","actorEntry","actorIsA","actorType","isA","getSpacingInNormalDirection","iVector","jVector","kVector","dotProducts","vec3","projectedSpacing","getClosestImageId","worldPos","EPSILON","imageIdForTool","halfSpacingInNormalDirection","imagePositionPatient","dir","dot","_slicedToArray","_s","_e","_r","_arr","_n","_d","getVoiFromSigmoidRGBTransferFunction","cfunRange","_cfun$getRange2","v","k","cfunDomain","y1","logy1","x1","y2","logy2","x2","ww","round","wc","_colormaps","registerColormap","colormap","Name","getColormap","getColormapNames","invertRgbTransferFunction","rgbTransferFunction","size","getSize","nodeValue1","getNodeValue","setNodeValue","createSigmoidRGBTransferFunction","approximationNodes","_windowLevelUtil$toWi","windowLevelUtil","table","reduce","y","x","logit","vtkColorTransferFunction","buildFunctionFromArray","applyPreset","preset","colorTransferArray","split","parseFloat","_getShiftRange","Infinity","center","shiftRange","getShiftRange","normColorTransferValuePoints","g","rescaled","_ref2","removeAllPoints","_ref3","_ref4","addRGBPoint","applyPointsToRGBFunction","setRGBTransferFunction","scalarOpacityArray","vtkPiecewiseFunction","normPoints","opacity","pwf","_ref5","_ref6","_ref7","_ref8","addPoint","applyPointsToPiecewiseFunction","setScalarOpacity","_preset$gradientOpaci2","gradientMinValue","gradientMinOpacity","gradientMaxValue","gradientMaxOpacity","setUseGradientOpacity","setGradientOpacityMinimumValue","setGradientOpacityMinimumOpacity","setGradientOpacityMaximumValue","setGradientOpacityMaximumOpacity","setInterpolationTypeToFastLinear","setAmbient","setDiffuse","setSpecular","setSpecularPower","getVolumeActorCorners","getMapper","getInputData","bounds","extentToBounds","getExtent","SMALL_EPSILON","isOne","isUnit","off","isOrthonormal","getSliceRange","focalPoint","corners","getDirection","_imageData$getDimensi2","dx","dy","dz","it","indexToWorld","transform","vtkMatrixBuilder","identity","rotateFromDirections","pt","transformedFocalPoint","currentSlice","minX","maxX","current","EPSILON_PART","isPrimaryVolume","starts","str","getTargetVolumeAndSpacingInNormalDir","camera","targetVolumeId","volumeActors","getActors","spacingInNormalDirection","actorUID","imageVolumes","va","_va$referenceId","referenceId","uid","iv","imageVolumeIndex","findIndex","smallest","hasPrimaryVolume","getCamera","_getTargetVolumeAndSp","sliceRange","numberOfSlices","imageIndex","linePlaneIntersection","p0","p1","plane","_p","x0","y0","z0","_p2","z1","_plane","A","B","C","t","planeEquation","normal","point","_normal","threePlaneIntersection","firstPlane","secondPlane","thirdPlane","_firstPlane","A1","B1","C1","D1","_secondPlane","A2","B2","C2","D2","_thirdPlane","A3","B3","C3","D3","m0","mat3","m1","m2","m3","planeDistanceToPoint","signed","_plane2","D","_point","numerator","distance","sqrt","sign","hasNaNValues","some","Viewport","sx","sy","sWidth","sHeight","_actors","setAttribute","defaultOptions","_cloneDeep","isDisabled","viewportStatus","renderingEngine","hasBeenDestroyed","offscreenMultiRenderWindow","renderViewport","_this$options","_this$options2","immediate","displayArea","setDisplayArea","flipHorizontal","flipVertical","getDefaultImageData","viewRight","viewUpToSet","viewPlaneNormalToSet","middleIJK","centeredFocalPoint","resetFocalPoint","_getFocalPointForResetCamera","resetPan","resetToCenter","panDir","panValue","getPanDir","mirrorVec","panDirMirror","newFocalPoint","newPosition","setCamera","getDefaultActor","actors","removeAllActors","addActors","getActor","removeViewProp","actorUIDs","_removeActor","resetCameraPanAndZoom","addActor","resetCamera","removeAllViewProps","_suppressCameraModifiedEvents","getBounds","intersections","_getEdges","_edge","_edge$","_edge$2","intersectionPoint","planar","_isInBounds","storeAsInitialCamera","fitToCanvasCamera","imageArea","imageCanvasPoint","_imageArea","areaX","areaY","zoom","getZoom","setZoom","_window","imagePoint","_canvasPoint","canvasPoint","canvasX","canvasY","devicePixelRatio","canvasPanX","canvasPanY","canvasZero","worldToCanvas","canvasEdge","canvasImage","imgWidth","imgHeight","_imagePoint","deltaPoint2","setPan","eventDetail","_this$options3","_this$options4","resetZoom","previousCamera","computeVisiblePropBounds","spc","activeCamera","getVtkActiveCamera","getViewPlaneNormal","getViewUp","radius","_this$_getWorldDistan","_getWorldDistanceViewUpAndViewRight","widthWorld","heightWorld","canvasSize","boundsAspectRatio","canvasAspectRatio","parallelScale","w1","w2","w3","vtkMath","focalPointToSet","positionToSet","resetCameraClippingRange","clippingRangeToUse","setPhysicalScale","setPhysicalTranslation","viewAngle","clippingRange","modifiedCamera","setFitToCanvasCamera","setInitialCamera","_this$options5","RESET_CAMERA_EVENT","invokeEvent","triggerCameraModifiedEventIfNecessary","initialCamera","getFocalPoint","zero3","canvasToWorld","initialCanvasFocal","currentCanvasFocal","vec2","pan","delta2","getPan","delta","newFocal","getParallelScale","_this$getCamera","_getViewImageDataIntersections","z","point_x","point_y","point_z","getActiveCamera","vtkCamera","getPosition","parallelProjection","getParallelProjection","getViewAngle","cameraInterface","updatedCamera","flipH","flip","flipV","setViewUp","setDirectionOfProjection","setPosition","setFocalPoint","setParallelScale","setViewAngle","setClippingRange","updateClippingPlanesForActors","rotation","getRotation","vtkPlanes","getClippingPlanes","slabThickness","setOrientationOfClippingPlanes","scaledDistance","setNormal","newOrigin1","newOrigin2","viewUpCorners","_getCorners","viewRightCorners","minY","maxY","_ref4$resetPan","_ref4$resetToCenter","oldCamera","oldFocalPoint","oldViewPlaneNormal","vectorFromOldFocalPointToCenteredFocalPoint","distanceFromOldFocalPointToCenteredFocalPoint","_bounds","xMin","xMax","yMin","yMax","zMin","zMax","_this$_getCorners2","p2","p3","p4","p5","p6","p7","p8","isPerformingCoordinateTransformation","tmpMatrix","mat4","tmpvec1","getProjectionMatrix","aspect","nearz","farz","projectionMatrix","scale","physicalScale","cRange0","cRange1","xmin","xmax","ymin","ymax","useOffAxisProjection","tmp","tan","useHorizontalViewAngle","znear","zfar","vtkSlabCamera","transformWorldToIndex","worldToIndex","BaseVolumeViewport","_Viewport","_isValidVolumeInputArray2","_addVolumes","_setVolumes","_super","voiRanges","VOILUTFunction","Boolean","invert","inverted","_FrameOfReferenceUID","canvasPos","_vtkCamera$setIsPerfo","_vtkCamera$setIsPerfo2","setIsPerformingCoordinateTransformation","getOpenGLRenderWindow","canvasPosWithDPR","displayCoord","worldCoord","displayToWorld","_vtkCamera$setIsPerfo3","_vtkCamera$setIsPerfo4","worldToDisplay","canvasCoord","canvasCoordWithDPR","applicableVolumeActorInfo","_getApplicableVolumeActor","volumeIdToUse","_shouldUseNativeDataType","setActiveCamera","setParallelProjection","initializeVolumeNewImageEventDispatcher","orientation","_this$_getOrientation","_getOrientationVectors","setViewUpFrom","volumeNewImageHandlerBound","cameraEvent","getImageData","_cameraEvent$detail","getViewport","sliceData","getImageSliceDataForVolumeViewport","volumeNewImageEventDispatcher","volumeNewImageCleanUpBound","evt","removeEventListener","resetVolumeNewImageState","addEventListener","voiLUTFunction","getProperties","setVOI","colormapObj","colormapUtils","vtkColorMaps","applyColorMap","_getOrCreateColorTransferFunction","invertStateChanged","newRGBTransferFunction","voiRangeToUse","_voiRangeToUse","setRange","setColormap","setOpacity","setVOILUTFunction","setInvert","setPreset","presetName","VIEWPORT_PRESETS","volumeInputArray","firstImageVolume","FrameOfReferenceUID","_volumeInputArray$i","_volumeId","_slabThickness","_isValidVolumeInputArray","createVolumeActor","_setVolumeActors","_volumeInputArray$i2","_volumeId2","visibility","_slabThickness2","_args2","setVisibility","removeActors","_this$getActor","actorEntries","_callee3","numVolumes","volumeInput","_context3","flipDirection","_volumeId3","_volume$metadata","defaultActor","defaultActorUID","getOrigin","Modality","hasPixelSpacing","volumeActorEntries","setActors","MPR_CAMERA_VALUES","join","voxelIndex","VolumeViewport","_BaseVolumeViewport","_this$getImageData","spacingInNormal","sub","_this$getCamera2","applyViewOrientation","_useAcquisitionPlaneForViewPlane","_setViewPlaneToAcquisitionPlane","_MPR_CAMERA_VALUES$or","_this$_getAcquisition","_getAcquisitionPlaneOrientation","_this$_getAcquisition2","filterActorUIDs","resetVolumeViewportClippingRange","mapper","clipPlane1","vtkPlane","clipPlane2","newVtkPlanes","addClippingPlane","currentCamera","_resetProperties","areNumbersEqualWithTolerance","num1","num2","tolerance","isNumberType","isNumberArrayLike","isEqual","v1","v2","arr1","areArraysEqual","performance","voiLUT","lut","minValue","maxValue","maxValueMapped","firstValueMapped","modalityLutValue","generateNonLinearVOILUT","generateLinearVOILUT","Transform","m","matrix","m11","m12","m21","m22","m4","m5","rad","cos","sin","enabledElement","displayedArea","translate","angle","rotate","PI","widthScale","heightScale","brhc","tlhc","presentationSizeMode","rowPixelSpacing","columnPixelSpacing","verticalScale","horizontalScale","translation","hflip","vflip","calculateTransform","getMatrix","setTransform","doesImageNeedToBeRendered","lastRenderedImageId","renderingTools","lastRenderedViewport","modalityLUT","renderCanvas","canvasContext","fillStyle","fillRect","renderCanvasData","renderCanvasContext","isColor","color","lastRenderedIsColor","getRenderCanvas","invalidated","canvasWasColor","_enabledElement$viewp","getCanvas","initializeRenderCanvas","start","colorLUT","cachedLut","maxPixelValue","minPixelValue","offset","lutArray","vlutfn","getVOILUT","generateColorLUT","storedValue","getLut","stats","lastLutGenerateTime","rgba","canvasImageDataData","pixelData","lastGetPixelDataTime","canvasImageDataIndex","storedPixelDataIndex","lastStoredPixelDataToCanvasImageDataTime","storedRGBAPixelDataToCanvasImageData","storedColorPixelDataToCanvasImageData","putImageData","lastPutImageDataTime","renderColorImage","imageSmoothingEnabled","pixelReplication","setToPixelCoordinateSystem","drawImage","saveLastRendered","lutMatches","hasVoi","maxVoi","slope","intercept","minVoi","computeAutoVoi","mlutfn","storedPixelValue","generateNonLinearModalityLUT","generateLinearModalityLUT","getModalityLut","generateLut","renderGrayscaleImage","useAlphaChannel","_viewport$voi","minimum","collectedMultiplierTerms","lutFunction","storedPixelDataToCanvasImageDataPET","storedPixelDataToCanvasImageData","pixelValue","storedPixelDataToCanvasImageDataRGBA","HSVToRGB","hue","sat","rgb","hueCase","frac","lx","ly","lz","LookupTable","NumberOfColors","Ramp","TableRange","HueRange","SaturationRange","ValueRange","AlphaRange","NaNColor","BelowRangeColor","UseBelowRangeColor","AboveRangeColor","UseAboveRangeColor","InputRange","Table","number","ramp","end","scalar","mapValue","force","hinc","sinc","vinc","ainc","maxIndex","alpha","c_rgba","buildSpecialColors","numberOfColors","belowRangeColorIndex","aboveRangeColorIndex","nanColorIndex","getIndex","Range","MaxIndex","Shift","Scale","MAX_VALUE","dIndex","linearIndexLookupMain","grayscaleLut","clut","COLOR_TRANSPARENT","getRank","elem","left","right","mid","midElem","makeMappingArray","N","xLinSpace","vector","linspace","xLinSpaceIndexes","inputArray","indexes","searchSorted","colorPercent","colorDelta","colormapData","CPU_COLORMAPS","redLut","greenLut","blueLut","createLinearSegmentedColormap","getId","getColorSchemeName","setColorSchemeName","getNumberOfColors","setNumberOfColors","getColor","isValidIndex","getColorRepeating","setColor","addColor","insertColor","removeColor","clearColors","buildLookupTable","setNumberOfTableValues","setTableValue","createLookupTable","clamp","renderPseudoColorImage","colormapId","petVOILutFunction","storedPixelDataToCanvasImageDataPseudocolorLUTPET","storedPixelDataToCanvasImageDataPseudocolorLUT","lastRenderTime","renderTimeInMs","invalid","needsRedraw","getTransform","transformPoint","validateParameterUndefinedOrNull","checkParam","errorMsg","isRotated","imageSize","getImageSize","verticalRatio","horizontalRatio","scaleFactor","initialDefaultViewport","labelmap","getImageFitScale","columns","rows","createLinearRGBTransferFunction","StackViewport","_setImageIdIndex3","_setImageIdIndex2","_loadAndDisplayImage2","_setStack","_thisSuper","_thisSuper2","_thisSuper3","_thisSuper4","_thisSuper5","_thisSuper6","_thisSuper7","_thisSuper8","_thisSuper9","_thisSuper10","_configureRenderingPipeline","_resizeCPU","_cpuFallbackEnabledElement","forceFitToWindow","oldCanvasWidth","oldCanvasHeight","clientWidth","clientHeight","setCanvasSize","imageWidth","imageHeight","wasFitToWindow","fitToWindow","relWidthChange","relHeightChange","relChange","relativeRescale","getCurrentImageId","imagePlaneModule","frameOfReferenceUID","csImage","vtkImageMapper","vtkImageSlice","_assertThisInitialize","interpolationType","voiUpdatedWithSetProperties","isComputedVOI","currentViewUp","initialViewUp","initialToCurrentViewUpAngle","initialToCurrentViewUpCross","_setCSImage","_updateToDisplayImageCPU","_updateActorToDisplayImageId","_image$preScale","scaled","_canvasToPixel2","canvasToPixel","px","py","_this$getImageData2","diff","worldPoint","pixelToCanvas","crange","getClippingRange","getDistance","currentImageIdIndex","targetImageIdIndex","drawImageSync","cpuRenderingInvalidated","fillWithBackgroundColor","cpu","getImageDataCPU","gpu","getImageDataGPU","setColormapCPU","setColormapGPU","getCameraCPU","setCameraCPU","setVOICPU","setVOIGPU","getRotationCPU","getRotationGPU","setInterpolationType","setInterpolationTypeCPU","setInterpolationTypeGPU","setInvertColor","setInvertColorCPU","setInvertColorGPU","resetCameraCPU","resetCameraGPU","canvasToWorldCPU","canvasToWorldGPU","worldToCanvasCPU","worldToCanvasGPU","getCPUFallbackError","unsetColormap","unsetColormapCPU","unsetColormapGPU","useNativeDataType","_resetCPUFallbackElement","_resetGPUViewport","cameraFocalPointOnRender","initializeElementDisabledHandler","_Object$entries","entries","renderingPipelineFunctions","_Object$entries$_i","funcName","functions","setThicknessFromFocalPoint","setFreezeFocalPoint","elementDisabledHandler","debouncedTimeout","calibration","cpuImagePixelData","pixelCoord","_metaData$get","pixelRepresentation","bitsAllocated","bitsStored","highBit","photometricInterpretation","samplesPerPixel","imageIdScalingFactor","_addScalingToViewport","voiLUTFunctionEnum","_getValidVOILUTFunction","_getImagePlaneModule","calibrateIfNecessary","imagePixelModule","isUpdated","_publishCalibratedEvent","_calibrationEvent","setRotation","_getDefaultPTPrescaledVOIRange","_getVOIRangeForCurrentImage","_this$_getVOIRangeFor","_this$_cpuFallbackEna","rotationMatrix","canvasCenter","canvasCenterWorld","topLeftWorld","bottomLeftWorld","_this$_cpuFallbackEna2","focalPointCanvas","focalPointPixel","prevFocalPointCanvas","prevFocalPointPixel","deltaPixel","viewportOrientation","cosA","sinA","newX","newY","correctShift","setFlipCPU","setRotationCPU","setRotationGPU","newVOILUTFunction","forceRecreateLUTFunction","roll","tfunc","_options$suppressEven","_this$_cpuFallbackEna3","wwToUse","wcToUse","_windowLevelUtil$toLo","_voiRange","_options$suppressEven2","_options$forceRecreat","_options$voiUpdatedWi","stackInvalidated","imageActor","setUseLookupTableScalarRange","transferFunction","isSigmoidTFun","suvlbm","suvbsa","ptScaling","suvbwToSuvlbm","suvbwToSuvbsa","rowCosines","columnCosines","_this$buildMetadata","buildMetadata","rowCosineVec","colCosineVec","scanAxisNormal","xSpacing","ySpacing","xVoxels","yVoxels","_getNumCompsFromPhotometricInterpretation","imageDataDirection","pixelArray","_imageData","_throwIfDestroyed","_setImageIdIndex","_imageData$getSpacing2","isSameXSpacing","isSameYSpacing","_updatePixelData","newPixelData","_loadAndDisplayImageCPU","_loadAndDisplayImageGPU","successCallback","scalingParams","scaledWithNonIntegers","floatMinMax","intPixelData","rescaledPixel","errorCallback","useRGBA","_this5","_this$csImage","_this$csImage2","csImgFrame","imageFrame","imgFrame","_this6","_getImageDataMetadata","getDefaultViewport","viewportSettingToUse","sameImageData","_checkVTKImageDataMatchesCornerstoneImage","previousCameraProps","_updateVTKImageDataFromCornerstoneImage","cameraProps","panCache","resetCameraNoEvent","setCameraNoEvent","_restoreCameraProps","_setPropertiesFromCache","_this$_getImageDataMe","_createVTKImageData","createActorMapper","_this$_getCameraOrien","_getCameraOrientation","triggerCameraEvent","monochrome1","_getInitialVOIRange","triggerCalibrationEvent","_getVOIRangeFromWindowLevel","_getPTPreScaledRange","_this$csImage$preScal","_this$csImage$preScal2","_loadAndDisplayImage","_this$element","centerWorld","_this7","debounce","loop","currentTargetImageIdIndex","numberOfFrames","newTargetImageIdIndex","targetImageId","setImageIdIndex","eventData","newImageIdIndex","_callee4","_context4","getImageIds","prevScale","_this$getCamera4","getWorldToIndex","_this$csImage3","fillCanvasWithBackgroundColor","actorProp","_this$calibration","_this$calibration2","newImagePlaneModule","imageOrientationPatient","VolumeViewport3D","_viewportTypeToViewpo","viewportTypeUsesCustomRenderingPipeline","viewportType","viewportTypeToViewportClass","useCustomRenderingPipeline","RenderingEngine","Set","viewportIdsWithSameFrameOfReferenceUID","_getViewportsAsArray","vp","getFrameOfReferenceUID","renderViewports","performVtkDrawCall","viewports","eventDetailArray","_needsRender","renderViewportUsingCustomOrVtkPipeline","setRendered","_animationFrameSet","_animationFrameHandle","offScreenCanvasContainer","_viewports","viewportInputEntry","viewportInput","_normalizeViewportInputEntry","disableElement","viewportUsesCustomRenderingPipeline","addCustomViewport","enableVTKjsDrivenViewport","_resetViewport","_removeViewport","_clearAnimationFrame","publicViewportInputEntries","viewportInputEntries","_normalizeViewportInputEntries","_reset","vtkDrivenViewportInputEntries","customRenderingViewportInputEntries","vpie","setVtkjsDrivenViewports","setCustomViewports","keepCamera","vtkDrivenViewports","customRenderingViewports","_resizeVTKViewports","_resizeUsingCustomResizeHandler","viewportIds","_setViewportsToBeRenderedNextFrame","backgroundColor","ctx","normalizedViewportInputs","prevCamera","canvasesDrivenByVtkJs","_this$_resizeOffScree","_resizeOffScreenCanvas","offScreenCanvasWidth","offScreenCanvasHeight","_resize","rect","getBoundingClientRect","viewportsDrivenByVtkJs","_this$_resizeOffScree2","xOffset","internalViewportEntry","addVtkjsDrivenViewport","offscreenCanvasProperties","tabIndex","_this$_getViewportCoo","_getViewportCoordsOnOffScreenCanvas","sxStartDisplayCoords","syStartDisplayCoords","sxEndDisplayCoords","syEndDisplayCoords","vtkDrivenCanvases","_this$_resizeOffScree3","vtkDrivenViewportInputEntry","_xOffset","_this$_getViewportCoo2","setViewport","_render","requestAnimationFrame","_renderFlaggedViewports","getRenderWindow","renderers","_renderers$i","setDraw","customRenderViewportToCanvas","offScreenCanvas","get3DContext","_renderViewportFromVtkCanvasToOnscreenCanvas","dWidth","dHeight","removeAttribute","clearRect","cancelAnimationFrame","uri","link","_debugRender","download","href","body","click","removeChild","dataURL","toDataURL","imageRetrievalPoolManager","getEnabledElement","_element$dataset","dataset","getEnabledElementByIds","viewportUid","renderingEngineUid","getEnabledElements","enabledElements","DEFAULT_SETTINGS","RUNTIME_SETTINGS","OBJECT_SETTINGS_MAP","DICTIONARY","Settings","dictionary","seal","endsWith","deleteCount","namespace","deleteAll","startsWith","unset","iterate","isPlainObject","deepSet","subject","getRuntimeSettings","subfield","defaultSettings","settingObj","setting","runtimeSettings","getDefaultSettings","settings","objectSettingsMap","WeakMap","assert","getObjectSettings","references","last","previous","isValidKey","prefix","failCount","field","setAll","WeakSet","separator","subKey","subContext","subContextValue","Contour","_props$data","segmentIndex","_getSizeInBytes","flat","ContourSet","_props$color","contours","_createEachContour","contourDataArray","contourData","contour","_updateContourSetCentroid","numberOfPoints","getTotalNumberOfPoints","flatPointsArray","getFlatPointsArray","sumOfPoints","acc","centroid","closestPoint","_getDistance","getPoints","_","getNumberOfPointsInAContour","contourIndex","getPointsInContour","pointA","pointB","createAndCacheGeometry","_createAndCacheGeometry","_createContourSet","geometryData","contourSetData","contourSet","getSizeInBytes","scaleRGBTransferFunction","scalingFactor","LAST_RUNTIME_ID","GLOBAL_CONTEXT","DEFAULT_MAX","DEFAULT_SEPARATOR","getRuntimeId","symbol","idComponents","carry","getNextRuntimeId","payload","isOpposite","crossOriginIsolated","indexWithinDimensions","targetViewport","sameVolumesViewports","targetActors","getVolumeViewports","_loop","vpActors","every","vpActor","targetViewports","filteredViewports","hasVolumeId","_image$preScale$scali","renderToCanvasGPU","HTMLCanvasElement","imageIdToPrint","originalWidth","originalHeight","uniqueId","stackViewportInput","enableElement","elementRendered","onImageRendered","temporaryCanvas","querySelectorAll","remove","renderImageObject","isPTPrescaledWithSUV","setProperties","renderToCanvasCPU","loadImageToCanvas","_options$requestType","_options$priority","_options$renderingEng","_options$useCPURender","renderFn","worldCoords","newOrigin","imageToWorldCoords","imageCoords","imageCoordsInWorld","_getVolumeSliceRangeI","getVolumeSliceRangeInfo","numScrollSteps","floatingStepNumber","currentStepIndex","sliceRangeInfo","snapFocalPointToSlice","deltaFrames","posDiffFromFocalPoint","steps","newSlicePosFromMin","getViewportsWithImageURI","filteredStackViewports","getStackViewports","hasImageURI","filteredVolumeViewports","getClosestStackImageIndexForPoint","minimalDistance","getCurrentImageIdIndex","planeMetadata","targetImagePlane","rowVec","colVec","planeNormal","getPlaneMetadata","closestStack","higherImageIds","lowerImageIds","calculateMinimalDistanceForStackViewport","spatialRegistrationMetadataProvider","_query","viewportId1","viewportId2","entryId","_query2","entryIdReverse","viewport1","viewport2","imageId1","imageId2","imagePlaneModule1","imagePlaneModule2","imagePositionPatient1","imagePositionPatient2","mat","getViewportImageCornersInWorld","topRightCanvas","bottomRightCanvas","bottomLeftCanvas","topRightWorld","bottomRightWorld","topLeftImage","topRightImage","bottomRightImage","bottomLeftImage","topLeftImageWorld","topRightImageWorld","bottomRightImageWorld","_getStackViewportImageCorners","imageCoord","getScalingParameters","metaDataGet","getScalarDataType","getCornerstoneImage","_setVolumesForViewports","volumeInputs","immediateRender","setVolumePromises","setVolumes","all","_addVolumesToViewports","addVolumePromises","addVolumes"],"sourceRoot":""}