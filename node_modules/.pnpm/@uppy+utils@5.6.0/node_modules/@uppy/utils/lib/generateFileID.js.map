{"version":3,"names":["getFileType","encodeCharacter","character","charCodeAt","toString","encodeFilename","name","suffix","replace","generateFileID","file","id","toLowerCase","type","undefined","meta","relativePath","data","size","lastModified","hasFileStableId","isRemote","remote","stableIdProviders","Set","has","provider","getSafeFileId","fileType"],"sources":["generateFileID.ts"],"sourcesContent":["import type { UppyFile } from './UppyFile'\nimport getFileType from './getFileType.ts'\n\nfunction encodeCharacter(character: string): string {\n  return character.charCodeAt(0).toString(32)\n}\n\nfunction encodeFilename(name: string): string {\n  let suffix = ''\n  return (\n    name.replace(/[^A-Z0-9]/gi, (character) => {\n      suffix += `-${encodeCharacter(character)}`\n      return '/'\n    }) + suffix\n  )\n}\n\n/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n */\nexport default function generateFileID(file: UppyFile): string {\n  // It's tempting to do `[items].filter(Boolean).join('-')` here, but that\n  // is slower! simple string concatenation is fast\n\n  let id = 'uppy'\n  if (typeof file.name === 'string') {\n    id += `-${encodeFilename(file.name.toLowerCase())}`\n  }\n\n  if (file.type !== undefined) {\n    id += `-${file.type}`\n  }\n\n  if (file.meta && typeof file.meta.relativePath === 'string') {\n    id += `-${encodeFilename(file.meta.relativePath.toLowerCase())}`\n  }\n\n  if (file.data.size !== undefined) {\n    id += `-${file.data.size}`\n  }\n  if ((file.data as File).lastModified !== undefined) {\n    id += `-${(file.data as File).lastModified}`\n  }\n\n  return id\n}\n\n// If the provider has a stable, unique ID, then we can use that to identify the file.\n// Then we don't have to generate our own ID, and we can add the same file many times if needed (different path)\nfunction hasFileStableId(file: UppyFile): boolean {\n  if (!file.isRemote || !file.remote) return false\n  // These are the providers that it seems like have stable IDs for their files. The other's I haven't checked yet.\n  const stableIdProviders = new Set([\n    'box',\n    'dropbox',\n    'drive',\n    'facebook',\n    'unsplash',\n  ])\n  return stableIdProviders.has(file.remote.provider as any)\n}\n\nexport function getSafeFileId(file: UppyFile): string {\n  if (hasFileStableId(file)) return file.id\n\n  const fileType = getFileType(file)\n\n  return generateFileID({\n    ...file,\n    type: fileType,\n  })\n}\n"],"mappings":"AACA,OAAOA,WAAW,MAAM,kBAAkB;AAE1C,SAASC,eAAeA,CAACC,SAAiB,EAAU;EAClD,OAAOA,SAAS,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;AAC7C;AAEA,SAASC,cAAcA,CAACC,IAAY,EAAU;EAC5C,IAAIC,MAAM,GAAG,EAAE;EACf,OACED,IAAI,CAACE,OAAO,CAAC,aAAa,EAAGN,SAAS,IAAK;IACzCK,MAAM,IAAK,IAAGN,eAAe,CAACC,SAAS,CAAE,EAAC;IAC1C,OAAO,GAAG;EACZ,CAAC,CAAC,GAAGK,MAAM;AAEf;;AAEA;AACA;AACA;AACA;AACA,eAAe,SAASE,cAAcA,CAACC,IAAc,EAAU;EAC7D;EACA;;EAEA,IAAIC,EAAE,GAAG,MAAM;EACf,IAAI,OAAOD,IAAI,CAACJ,IAAI,KAAK,QAAQ,EAAE;IACjCK,EAAE,IAAK,IAAGN,cAAc,CAACK,IAAI,CAACJ,IAAI,CAACM,WAAW,CAAC,CAAC,CAAE,EAAC;EACrD;EAEA,IAAIF,IAAI,CAACG,IAAI,KAAKC,SAAS,EAAE;IAC3BH,EAAE,IAAK,IAAGD,IAAI,CAACG,IAAK,EAAC;EACvB;EAEA,IAAIH,IAAI,CAACK,IAAI,IAAI,OAAOL,IAAI,CAACK,IAAI,CAACC,YAAY,KAAK,QAAQ,EAAE;IAC3DL,EAAE,IAAK,IAAGN,cAAc,CAACK,IAAI,CAACK,IAAI,CAACC,YAAY,CAACJ,WAAW,CAAC,CAAC,CAAE,EAAC;EAClE;EAEA,IAAIF,IAAI,CAACO,IAAI,CAACC,IAAI,KAAKJ,SAAS,EAAE;IAChCH,EAAE,IAAK,IAAGD,IAAI,CAACO,IAAI,CAACC,IAAK,EAAC;EAC5B;EACA,IAAKR,IAAI,CAACO,IAAI,CAAUE,YAAY,KAAKL,SAAS,EAAE;IAClDH,EAAE,IAAK,IAAID,IAAI,CAACO,IAAI,CAAUE,YAAa,EAAC;EAC9C;EAEA,OAAOR,EAAE;AACX;;AAEA;AACA;AACA,SAASS,eAAeA,CAACV,IAAc,EAAW;EAChD,IAAI,CAACA,IAAI,CAACW,QAAQ,IAAI,CAACX,IAAI,CAACY,MAAM,EAAE,OAAO,KAAK;EAChD;EACA,MAAMC,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAChC,KAAK,EACL,SAAS,EACT,OAAO,EACP,UAAU,EACV,UAAU,CACX,CAAC;EACF,OAAOD,iBAAiB,CAACE,GAAG,CAACf,IAAI,CAACY,MAAM,CAACI,QAAe,CAAC;AAC3D;AAEA,OAAO,SAASC,aAAaA,CAACjB,IAAc,EAAU;EACpD,IAAIU,eAAe,CAACV,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACC,EAAE;EAEzC,MAAMiB,QAAQ,GAAG5B,WAAW,CAACU,IAAI,CAAC;EAElC,OAAOD,cAAc,CAAC;IACpB,GAAGC,IAAI;IACPG,IAAI,EAAEe;EACR,CAAC,CAAC;AACJ"}